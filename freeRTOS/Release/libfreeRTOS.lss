In archive libfreeRTOS.a:

heap_2.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.pvPortMalloc 00000124  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.vPortFree 00000058  00000000  00000000  00000158  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.xPortGetFreeHeapSize 0000000a  00000000  00000000  000001b0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.vPortInitialiseBlocks 00000002  00000000  00000000  000001ba  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .bss.xHeapHasBeenInitialised.1907 00000001  00000000  00000000  000001bc  2**0
                  ALLOC
  8 .data.xFreeBytesRemaining 00000002  00000000  00000000  000001bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss.xEnd     00000004  00000000  00000000  000001be  2**0
                  ALLOC
 10 .bss.xStart   00000004  00000000  00000000  000001be  2**0
                  ALLOC
 11 .bss.ucHeap   000005dc  00000000  00000000  000001be  2**0
                  ALLOC
 12 .comment      00000012  00000000  00000000  000001be  2**0
                  CONTENTS, READONLY

Disassembly of section .text.pvPortMalloc:

00000000 <pvPortMalloc>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	0e 94 00 00 	call	0	; 0x0 <pvPortMalloc>
   e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  12:	81 11       	cpse	r24, r1
  14:	00 c0       	rjmp	.+0      	; 0x16 <pvPortMalloc+0x16>
  16:	80 e0       	ldi	r24, 0x00	; 0
  18:	90 e0       	ldi	r25, 0x00	; 0
  1a:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  1e:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  22:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  26:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  2a:	8b ed       	ldi	r24, 0xDB	; 219
  2c:	95 e0       	ldi	r25, 0x05	; 5
  2e:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  32:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  36:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  3a:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  3e:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  42:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  46:	80 e0       	ldi	r24, 0x00	; 0
  48:	90 e0       	ldi	r25, 0x00	; 0
  4a:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  4e:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  52:	81 e0       	ldi	r24, 0x01	; 1
  54:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  58:	20 97       	sbiw	r28, 0x00	; 0
  5a:	01 f0       	breq	.+0      	; 0x5c <pvPortMalloc+0x5c>
  5c:	24 96       	adiw	r28, 0x04	; 4
  5e:	ce 01       	movw	r24, r28
  60:	01 97       	sbiw	r24, 0x01	; 1
  62:	8a 3d       	cpi	r24, 0xDA	; 218
  64:	95 40       	sbci	r25, 0x05	; 5
  66:	00 f0       	brcs	.+0      	; 0x68 <pvPortMalloc+0x68>
  68:	00 c0       	rjmp	.+0      	; 0x6a <pvPortMalloc+0x6a>
  6a:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6e:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  72:	a0 e0       	ldi	r26, 0x00	; 0
  74:	b0 e0       	ldi	r27, 0x00	; 0
  76:	82 81       	ldd	r24, Z+2	; 0x02
  78:	93 81       	ldd	r25, Z+3	; 0x03
  7a:	8c 17       	cp	r24, r28
  7c:	9d 07       	cpc	r25, r29
  7e:	00 f0       	brcs	.+0      	; 0x80 <pvPortMalloc+0x80>
  80:	20 e0       	ldi	r18, 0x00	; 0
  82:	e0 30       	cpi	r30, 0x00	; 0
  84:	f2 07       	cpc	r31, r18
  86:	01 f4       	brne	.+0      	; 0x88 <pvPortMalloc+0x88>
  88:	00 c0       	rjmp	.+0      	; 0x8a <pvPortMalloc+0x8a>
  8a:	20 81       	ld	r18, Z
  8c:	31 81       	ldd	r19, Z+1	; 0x01
  8e:	21 15       	cp	r18, r1
  90:	31 05       	cpc	r19, r1
  92:	01 f0       	breq	.+0      	; 0x94 <pvPortMalloc+0x94>
  94:	df 01       	movw	r26, r30
  96:	f9 01       	movw	r30, r18
  98:	00 c0       	rjmp	.+0      	; 0x9a <pvPortMalloc+0x9a>
  9a:	0d 91       	ld	r16, X+
  9c:	1c 91       	ld	r17, X
  9e:	11 97       	sbiw	r26, 0x01	; 1
  a0:	0c 5f       	subi	r16, 0xFC	; 252
  a2:	1f 4f       	sbci	r17, 0xFF	; 255
  a4:	20 81       	ld	r18, Z
  a6:	31 81       	ldd	r19, Z+1	; 0x01
  a8:	2d 93       	st	X+, r18
  aa:	3c 93       	st	X, r19
  ac:	8c 1b       	sub	r24, r28
  ae:	9d 0b       	sbc	r25, r29
  b0:	89 30       	cpi	r24, 0x09	; 9
  b2:	91 05       	cpc	r25, r1
  b4:	00 f0       	brcs	.+0      	; 0xb6 <pvPortMalloc+0xb6>
  b6:	df 01       	movw	r26, r30
  b8:	ac 0f       	add	r26, r28
  ba:	bd 1f       	adc	r27, r29
  bc:	13 96       	adiw	r26, 0x03	; 3
  be:	9c 93       	st	X, r25
  c0:	8e 93       	st	-X, r24
  c2:	12 97       	sbiw	r26, 0x02	; 2
  c4:	d3 83       	std	Z+3, r29	; 0x03
  c6:	c2 83       	std	Z+2, r28	; 0x02
  c8:	12 96       	adiw	r26, 0x02	; 2
  ca:	2d 91       	ld	r18, X+
  cc:	3c 91       	ld	r19, X
  ce:	13 97       	sbiw	r26, 0x03	; 3
  d0:	60 e0       	ldi	r22, 0x00	; 0
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	eb 01       	movw	r28, r22
  d6:	88 81       	ld	r24, Y
  d8:	99 81       	ldd	r25, Y+1	; 0x01
  da:	ec 01       	movw	r28, r24
  dc:	4a 81       	ldd	r20, Y+2	; 0x02
  de:	5b 81       	ldd	r21, Y+3	; 0x03
  e0:	42 17       	cp	r20, r18
  e2:	53 07       	cpc	r21, r19
  e4:	00 f4       	brcc	.+0      	; 0xe6 <pvPortMalloc+0xe6>
  e6:	bc 01       	movw	r22, r24
  e8:	00 c0       	rjmp	.+0      	; 0xea <pvPortMalloc+0xea>
  ea:	11 96       	adiw	r26, 0x01	; 1
  ec:	9c 93       	st	X, r25
  ee:	8e 93       	st	-X, r24
  f0:	eb 01       	movw	r28, r22
  f2:	b9 83       	std	Y+1, r27	; 0x01
  f4:	a8 83       	st	Y, r26
  f6:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  fa:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  fe:	22 81       	ldd	r18, Z+2	; 0x02
 100:	33 81       	ldd	r19, Z+3	; 0x03
 102:	82 1b       	sub	r24, r18
 104:	93 0b       	sbc	r25, r19
 106:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
 10a:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <pvPortMalloc+0x110>
 110:	00 e0       	ldi	r16, 0x00	; 0
 112:	10 e0       	ldi	r17, 0x00	; 0
 114:	0e 94 00 00 	call	0	; 0x0 <pvPortMalloc>
 118:	c8 01       	movw	r24, r16
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	1f 91       	pop	r17
 120:	0f 91       	pop	r16
 122:	08 95       	ret

Disassembly of section .text.vPortFree:

00000000 <vPortFree>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	00 97       	sbiw	r24, 0x00	; 0
   6:	01 f0       	breq	.+0      	; 0x8 <vPortFree+0x8>
   8:	ec 01       	movw	r28, r24
   a:	24 97       	sbiw	r28, 0x04	; 4
   c:	0e 94 00 00 	call	0	; 0x0 <vPortFree>
  10:	8a 81       	ldd	r24, Y+2	; 0x02
  12:	9b 81       	ldd	r25, Y+3	; 0x03
  14:	e0 e0       	ldi	r30, 0x00	; 0
  16:	f0 e0       	ldi	r31, 0x00	; 0
  18:	a0 81       	ld	r26, Z
  1a:	b1 81       	ldd	r27, Z+1	; 0x01
  1c:	12 96       	adiw	r26, 0x02	; 2
  1e:	2d 91       	ld	r18, X+
  20:	3c 91       	ld	r19, X
  22:	13 97       	sbiw	r26, 0x03	; 3
  24:	28 17       	cp	r18, r24
  26:	39 07       	cpc	r19, r25
  28:	00 f4       	brcc	.+0      	; 0x2a <vPortFree+0x2a>
  2a:	fd 01       	movw	r30, r26
  2c:	00 c0       	rjmp	.+0      	; 0x2e <vPortFree+0x2e>
  2e:	b9 83       	std	Y+1, r27	; 0x01
  30:	a8 83       	st	Y, r26
  32:	d1 83       	std	Z+1, r29	; 0x01
  34:	c0 83       	st	Z, r28
  36:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3e:	82 0f       	add	r24, r18
  40:	93 1f       	adc	r25, r19
  42:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  46:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  4a:	df 91       	pop	r29
  4c:	cf 91       	pop	r28
  4e:	0c 94 00 00 	jmp	0	; 0x0 <vPortFree>
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	08 95       	ret

Disassembly of section .text.xPortGetFreeHeapSize:

00000000 <xPortGetFreeHeapSize>:
   0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	08 95       	ret

Disassembly of section .text.vPortInitialiseBlocks:

00000000 <vPortInitialiseBlocks>:
   0:	08 95       	ret

port.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.pxPortInitialiseStack 000000d8  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.xPortStartScheduler 00000076  00000000  00000000  0000010c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.vPortEndScheduler 00000002  00000000  00000000  00000182  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.vPortYield 000000b2  00000000  00000000  00000184  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.vPortYieldFromTick 000000b8  00000000  00000000  00000236  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.__vector_11 00000006  00000000  00000000  000002ee  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .comment      00000012  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY

Disassembly of section .text.pxPortInitialiseStack:

00000000 <pxPortInitialiseStack>:
   0:	31 e1       	ldi	r19, 0x11	; 17
   2:	fc 01       	movw	r30, r24
   4:	30 83       	st	Z, r19
   6:	31 97       	sbiw	r30, 0x01	; 1
   8:	22 e2       	ldi	r18, 0x22	; 34
   a:	20 83       	st	Z, r18
   c:	31 97       	sbiw	r30, 0x01	; 1
   e:	a3 e3       	ldi	r26, 0x33	; 51
  10:	a0 83       	st	Z, r26
  12:	31 97       	sbiw	r30, 0x01	; 1
  14:	60 83       	st	Z, r22
  16:	31 97       	sbiw	r30, 0x01	; 1
  18:	70 83       	st	Z, r23
  1a:	31 97       	sbiw	r30, 0x01	; 1
  1c:	10 82       	st	Z, r1
  1e:	31 97       	sbiw	r30, 0x01	; 1
  20:	60 e8       	ldi	r22, 0x80	; 128
  22:	60 83       	st	Z, r22
  24:	31 97       	sbiw	r30, 0x01	; 1
  26:	10 82       	st	Z, r1
  28:	31 97       	sbiw	r30, 0x01	; 1
  2a:	62 e0       	ldi	r22, 0x02	; 2
  2c:	60 83       	st	Z, r22
  2e:	31 97       	sbiw	r30, 0x01	; 1
  30:	63 e0       	ldi	r22, 0x03	; 3
  32:	60 83       	st	Z, r22
  34:	31 97       	sbiw	r30, 0x01	; 1
  36:	64 e0       	ldi	r22, 0x04	; 4
  38:	60 83       	st	Z, r22
  3a:	31 97       	sbiw	r30, 0x01	; 1
  3c:	65 e0       	ldi	r22, 0x05	; 5
  3e:	60 83       	st	Z, r22
  40:	31 97       	sbiw	r30, 0x01	; 1
  42:	66 e0       	ldi	r22, 0x06	; 6
  44:	60 83       	st	Z, r22
  46:	31 97       	sbiw	r30, 0x01	; 1
  48:	67 e0       	ldi	r22, 0x07	; 7
  4a:	60 83       	st	Z, r22
  4c:	31 97       	sbiw	r30, 0x01	; 1
  4e:	68 e0       	ldi	r22, 0x08	; 8
  50:	60 83       	st	Z, r22
  52:	31 97       	sbiw	r30, 0x01	; 1
  54:	69 e0       	ldi	r22, 0x09	; 9
  56:	60 83       	st	Z, r22
  58:	31 97       	sbiw	r30, 0x01	; 1
  5a:	60 e1       	ldi	r22, 0x10	; 16
  5c:	60 83       	st	Z, r22
  5e:	31 97       	sbiw	r30, 0x01	; 1
  60:	30 83       	st	Z, r19
  62:	31 97       	sbiw	r30, 0x01	; 1
  64:	32 e1       	ldi	r19, 0x12	; 18
  66:	30 83       	st	Z, r19
  68:	31 97       	sbiw	r30, 0x01	; 1
  6a:	33 e1       	ldi	r19, 0x13	; 19
  6c:	30 83       	st	Z, r19
  6e:	31 97       	sbiw	r30, 0x01	; 1
  70:	34 e1       	ldi	r19, 0x14	; 20
  72:	30 83       	st	Z, r19
  74:	31 97       	sbiw	r30, 0x01	; 1
  76:	35 e1       	ldi	r19, 0x15	; 21
  78:	30 83       	st	Z, r19
  7a:	31 97       	sbiw	r30, 0x01	; 1
  7c:	36 e1       	ldi	r19, 0x16	; 22
  7e:	30 83       	st	Z, r19
  80:	31 97       	sbiw	r30, 0x01	; 1
  82:	37 e1       	ldi	r19, 0x17	; 23
  84:	30 83       	st	Z, r19
  86:	31 97       	sbiw	r30, 0x01	; 1
  88:	38 e1       	ldi	r19, 0x18	; 24
  8a:	30 83       	st	Z, r19
  8c:	31 97       	sbiw	r30, 0x01	; 1
  8e:	39 e1       	ldi	r19, 0x19	; 25
  90:	30 83       	st	Z, r19
  92:	31 97       	sbiw	r30, 0x01	; 1
  94:	30 e2       	ldi	r19, 0x20	; 32
  96:	30 83       	st	Z, r19
  98:	31 97       	sbiw	r30, 0x01	; 1
  9a:	31 e2       	ldi	r19, 0x21	; 33
  9c:	30 83       	st	Z, r19
  9e:	31 97       	sbiw	r30, 0x01	; 1
  a0:	20 83       	st	Z, r18
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	23 e2       	ldi	r18, 0x23	; 35
  a6:	20 83       	st	Z, r18
  a8:	31 97       	sbiw	r30, 0x01	; 1
  aa:	40 83       	st	Z, r20
  ac:	31 97       	sbiw	r30, 0x01	; 1
  ae:	50 83       	st	Z, r21
  b0:	31 97       	sbiw	r30, 0x01	; 1
  b2:	26 e2       	ldi	r18, 0x26	; 38
  b4:	20 83       	st	Z, r18
  b6:	31 97       	sbiw	r30, 0x01	; 1
  b8:	27 e2       	ldi	r18, 0x27	; 39
  ba:	20 83       	st	Z, r18
  bc:	31 97       	sbiw	r30, 0x01	; 1
  be:	28 e2       	ldi	r18, 0x28	; 40
  c0:	20 83       	st	Z, r18
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	29 e2       	ldi	r18, 0x29	; 41
  c6:	20 83       	st	Z, r18
  c8:	31 97       	sbiw	r30, 0x01	; 1
  ca:	20 e3       	ldi	r18, 0x30	; 48
  cc:	20 83       	st	Z, r18
  ce:	31 97       	sbiw	r30, 0x01	; 1
  d0:	21 e3       	ldi	r18, 0x31	; 49
  d2:	20 83       	st	Z, r18
  d4:	86 97       	sbiw	r24, 0x26	; 38
  d6:	08 95       	ret

Disassembly of section .text.xPortStartScheduler:

00000000 <xPortStartScheduler>:
   0:	89 e0       	ldi	r24, 0x09	; 9
   2:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__SREG__+0x80004a>
   6:	83 ec       	ldi	r24, 0xC3	; 195
   8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__SREG__+0x800049>
   c:	8b e0       	ldi	r24, 0x0B	; 11
   e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__SREG__+0x800042>
  12:	ef e6       	ldi	r30, 0x6F	; 111
  14:	f0 e0       	ldi	r31, 0x00	; 0
  16:	80 81       	ld	r24, Z
  18:	82 60       	ori	r24, 0x02	; 2
  1a:	80 83       	st	Z, r24
  1c:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  20:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  24:	cd 91       	ld	r28, X+
  26:	cd bf       	out	0x3d, r28	; 61
  28:	dd 91       	ld	r29, X+
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	ff 91       	pop	r31
  2e:	ef 91       	pop	r30
  30:	df 91       	pop	r29
  32:	cf 91       	pop	r28
  34:	bf 91       	pop	r27
  36:	af 91       	pop	r26
  38:	9f 91       	pop	r25
  3a:	8f 91       	pop	r24
  3c:	7f 91       	pop	r23
  3e:	6f 91       	pop	r22
  40:	5f 91       	pop	r21
  42:	4f 91       	pop	r20
  44:	3f 91       	pop	r19
  46:	2f 91       	pop	r18
  48:	1f 91       	pop	r17
  4a:	0f 91       	pop	r16
  4c:	ff 90       	pop	r15
  4e:	ef 90       	pop	r14
  50:	df 90       	pop	r13
  52:	cf 90       	pop	r12
  54:	bf 90       	pop	r11
  56:	af 90       	pop	r10
  58:	9f 90       	pop	r9
  5a:	8f 90       	pop	r8
  5c:	7f 90       	pop	r7
  5e:	6f 90       	pop	r6
  60:	5f 90       	pop	r5
  62:	4f 90       	pop	r4
  64:	3f 90       	pop	r3
  66:	2f 90       	pop	r2
  68:	1f 90       	pop	r1
  6a:	0f 90       	pop	r0
  6c:	0f be       	out	0x3f, r0	; 63
  6e:	0f 90       	pop	r0
  70:	08 95       	ret
  72:	81 e0       	ldi	r24, 0x01	; 1
  74:	08 95       	ret

Disassembly of section .text.vPortEndScheduler:

00000000 <vPortEndScheduler>:
   0:	08 95       	ret

Disassembly of section .text.vPortYield:

00000000 <vPortYield>:
   0:	0f 92       	push	r0
   2:	0f b6       	in	r0, 0x3f	; 63
   4:	f8 94       	cli
   6:	0f 92       	push	r0
   8:	1f 92       	push	r1
   a:	11 24       	eor	r1, r1
   c:	2f 92       	push	r2
   e:	3f 92       	push	r3
  10:	4f 92       	push	r4
  12:	5f 92       	push	r5
  14:	6f 92       	push	r6
  16:	7f 92       	push	r7
  18:	8f 92       	push	r8
  1a:	9f 92       	push	r9
  1c:	af 92       	push	r10
  1e:	bf 92       	push	r11
  20:	cf 92       	push	r12
  22:	df 92       	push	r13
  24:	ef 92       	push	r14
  26:	ff 92       	push	r15
  28:	0f 93       	push	r16
  2a:	1f 93       	push	r17
  2c:	2f 93       	push	r18
  2e:	3f 93       	push	r19
  30:	4f 93       	push	r20
  32:	5f 93       	push	r21
  34:	6f 93       	push	r22
  36:	7f 93       	push	r23
  38:	8f 93       	push	r24
  3a:	9f 93       	push	r25
  3c:	af 93       	push	r26
  3e:	bf 93       	push	r27
  40:	cf 93       	push	r28
  42:	df 93       	push	r29
  44:	ef 93       	push	r30
  46:	ff 93       	push	r31
  48:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4c:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  50:	0d b6       	in	r0, 0x3d	; 61
  52:	0d 92       	st	X+, r0
  54:	0e b6       	in	r0, 0x3e	; 62
  56:	0d 92       	st	X+, r0
  58:	0e 94 00 00 	call	0	; 0x0 <vPortYield>
  5c:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  60:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  64:	cd 91       	ld	r28, X+
  66:	cd bf       	out	0x3d, r28	; 61
  68:	dd 91       	ld	r29, X+
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	ff 91       	pop	r31
  6e:	ef 91       	pop	r30
  70:	df 91       	pop	r29
  72:	cf 91       	pop	r28
  74:	bf 91       	pop	r27
  76:	af 91       	pop	r26
  78:	9f 91       	pop	r25
  7a:	8f 91       	pop	r24
  7c:	7f 91       	pop	r23
  7e:	6f 91       	pop	r22
  80:	5f 91       	pop	r21
  82:	4f 91       	pop	r20
  84:	3f 91       	pop	r19
  86:	2f 91       	pop	r18
  88:	1f 91       	pop	r17
  8a:	0f 91       	pop	r16
  8c:	ff 90       	pop	r15
  8e:	ef 90       	pop	r14
  90:	df 90       	pop	r13
  92:	cf 90       	pop	r12
  94:	bf 90       	pop	r11
  96:	af 90       	pop	r10
  98:	9f 90       	pop	r9
  9a:	8f 90       	pop	r8
  9c:	7f 90       	pop	r7
  9e:	6f 90       	pop	r6
  a0:	5f 90       	pop	r5
  a2:	4f 90       	pop	r4
  a4:	3f 90       	pop	r3
  a6:	2f 90       	pop	r2
  a8:	1f 90       	pop	r1
  aa:	0f 90       	pop	r0
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	0f 90       	pop	r0
  b0:	08 95       	ret

Disassembly of section .text.vPortYieldFromTick:

00000000 <vPortYieldFromTick>:
   0:	0f 92       	push	r0
   2:	0f b6       	in	r0, 0x3f	; 63
   4:	f8 94       	cli
   6:	0f 92       	push	r0
   8:	1f 92       	push	r1
   a:	11 24       	eor	r1, r1
   c:	2f 92       	push	r2
   e:	3f 92       	push	r3
  10:	4f 92       	push	r4
  12:	5f 92       	push	r5
  14:	6f 92       	push	r6
  16:	7f 92       	push	r7
  18:	8f 92       	push	r8
  1a:	9f 92       	push	r9
  1c:	af 92       	push	r10
  1e:	bf 92       	push	r11
  20:	cf 92       	push	r12
  22:	df 92       	push	r13
  24:	ef 92       	push	r14
  26:	ff 92       	push	r15
  28:	0f 93       	push	r16
  2a:	1f 93       	push	r17
  2c:	2f 93       	push	r18
  2e:	3f 93       	push	r19
  30:	4f 93       	push	r20
  32:	5f 93       	push	r21
  34:	6f 93       	push	r22
  36:	7f 93       	push	r23
  38:	8f 93       	push	r24
  3a:	9f 93       	push	r25
  3c:	af 93       	push	r26
  3e:	bf 93       	push	r27
  40:	cf 93       	push	r28
  42:	df 93       	push	r29
  44:	ef 93       	push	r30
  46:	ff 93       	push	r31
  48:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4c:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  50:	0d b6       	in	r0, 0x3d	; 61
  52:	0d 92       	st	X+, r0
  54:	0e b6       	in	r0, 0x3e	; 62
  56:	0d 92       	st	X+, r0
  58:	0e 94 00 00 	call	0	; 0x0 <vPortYieldFromTick>
  5c:	81 11       	cpse	r24, r1
  5e:	0e 94 00 00 	call	0	; 0x0 <vPortYieldFromTick>
  62:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  66:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6a:	cd 91       	ld	r28, X+
  6c:	cd bf       	out	0x3d, r28	; 61
  6e:	dd 91       	ld	r29, X+
  70:	de bf       	out	0x3e, r29	; 62
  72:	ff 91       	pop	r31
  74:	ef 91       	pop	r30
  76:	df 91       	pop	r29
  78:	cf 91       	pop	r28
  7a:	bf 91       	pop	r27
  7c:	af 91       	pop	r26
  7e:	9f 91       	pop	r25
  80:	8f 91       	pop	r24
  82:	7f 91       	pop	r23
  84:	6f 91       	pop	r22
  86:	5f 91       	pop	r21
  88:	4f 91       	pop	r20
  8a:	3f 91       	pop	r19
  8c:	2f 91       	pop	r18
  8e:	1f 91       	pop	r17
  90:	0f 91       	pop	r16
  92:	ff 90       	pop	r15
  94:	ef 90       	pop	r14
  96:	df 90       	pop	r13
  98:	cf 90       	pop	r12
  9a:	bf 90       	pop	r11
  9c:	af 90       	pop	r10
  9e:	9f 90       	pop	r9
  a0:	8f 90       	pop	r8
  a2:	7f 90       	pop	r7
  a4:	6f 90       	pop	r6
  a6:	5f 90       	pop	r5
  a8:	4f 90       	pop	r4
  aa:	3f 90       	pop	r3
  ac:	2f 90       	pop	r2
  ae:	1f 90       	pop	r1
  b0:	0f 90       	pop	r0
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	0f 90       	pop	r0
  b6:	08 95       	ret

Disassembly of section .text.__vector_11:

00000000 <__vector_11>:
   0:	0e 94 00 00 	call	0	; 0x0 <__vector_11>
   4:	18 95       	reti

croutine.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .comment      00000012  00000000  00000000  00000034  2**0
                  CONTENTS, READONLY

event_groups.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.xEventGroupCreate 0000002a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.xEventGroupWaitBits 00000168  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.xEventGroupClearBits 0000003a  00000000  00000000  000001c6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.xEventGroupGetBitsFromISR 0000000c  00000000  00000000  00000200  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.xEventGroupSetBits 00000138  00000000  00000000  0000020c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.xEventGroupSync 00000172  00000000  00000000  00000344  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.vEventGroupDelete 00000030  00000000  00000000  000004b6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.vEventGroupSetBitsCallback 00000004  00000000  00000000  000004e6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.vEventGroupClearBitsCallback 00000004  00000000  00000000  000004ea  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .comment      00000012  00000000  00000000  000004ee  2**0
                  CONTENTS, READONLY

Disassembly of section .text.xEventGroupCreate:

00000000 <xEventGroupCreate>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	8f e0       	ldi	r24, 0x0F	; 15
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	0e 94 00 00 	call	0	; 0x0 <xEventGroupCreate>
   c:	ec 01       	movw	r28, r24
   e:	00 97       	sbiw	r24, 0x00	; 0
  10:	01 f0       	breq	.+0      	; 0x12 <xEventGroupCreate+0x12>
  12:	fc 01       	movw	r30, r24
  14:	11 92       	st	Z+, r1
  16:	11 92       	st	Z+, r1
  18:	11 92       	st	Z+, r1
  1a:	11 92       	st	Z+, r1
  1c:	cf 01       	movw	r24, r30
  1e:	0e 94 00 00 	call	0	; 0x0 <xEventGroupCreate>
  22:	ce 01       	movw	r24, r28
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	08 95       	ret

Disassembly of section .text.xEventGroupWaitBits:

00000000 <xEventGroupWaitBits>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	ec 01       	movw	r28, r24
  26:	4a 01       	movw	r8, r20
  28:	5b 01       	movw	r10, r22
  2a:	72 2e       	mov	r7, r18
  2c:	60 2e       	mov	r6, r16
  2e:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  32:	28 80       	ld	r2, Y
  34:	39 80       	ldd	r3, Y+1	; 0x01
  36:	4a 80       	ldd	r4, Y+2	; 0x02
  38:	5b 80       	ldd	r5, Y+3	; 0x03
  3a:	d5 01       	movw	r26, r10
  3c:	c4 01       	movw	r24, r8
  3e:	82 21       	and	r24, r2
  40:	93 21       	and	r25, r3
  42:	a4 21       	and	r26, r4
  44:	b5 21       	and	r27, r5
  46:	01 11       	cpse	r16, r1
  48:	00 c0       	rjmp	.+0      	; 0x4a <xEventGroupWaitBits+0x4a>
  4a:	89 2b       	or	r24, r25
  4c:	8a 2b       	or	r24, r26
  4e:	8b 2b       	or	r24, r27
  50:	01 f4       	brne	.+0      	; 0x52 <xEventGroupWaitBits+0x52>
  52:	00 c0       	rjmp	.+0      	; 0x54 <xEventGroupWaitBits+0x54>
  54:	88 15       	cp	r24, r8
  56:	99 05       	cpc	r25, r9
  58:	aa 05       	cpc	r26, r10
  5a:	bb 05       	cpc	r27, r11
  5c:	01 f0       	breq	.+0      	; 0x5e <xEventGroupWaitBits+0x5e>
  5e:	00 c0       	rjmp	.+0      	; 0x60 <xEventGroupWaitBits+0x60>
  60:	77 20       	and	r7, r7
  62:	01 f0       	breq	.+0      	; 0x64 <xEventGroupWaitBits+0x64>
  64:	d5 01       	movw	r26, r10
  66:	c4 01       	movw	r24, r8
  68:	80 95       	com	r24
  6a:	90 95       	com	r25
  6c:	a0 95       	com	r26
  6e:	b0 95       	com	r27
  70:	82 21       	and	r24, r2
  72:	93 21       	and	r25, r3
  74:	a4 21       	and	r26, r4
  76:	b5 21       	and	r27, r5
  78:	88 83       	st	Y, r24
  7a:	99 83       	std	Y+1, r25	; 0x01
  7c:	aa 83       	std	Y+2, r26	; 0x02
  7e:	bb 83       	std	Y+3, r27	; 0x03
  80:	c1 2c       	mov	r12, r1
  82:	d1 2c       	mov	r13, r1
  84:	76 01       	movw	r14, r12
  86:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  8a:	cd 28       	or	r12, r13
  8c:	ce 28       	or	r12, r14
  8e:	cf 28       	or	r12, r15
  90:	01 f4       	brne	.+0      	; 0x92 <xEventGroupWaitBits+0x92>
  92:	00 c0       	rjmp	.+0      	; 0x94 <xEventGroupWaitBits+0x94>
  94:	81 11       	cpse	r24, r1
  96:	00 c0       	rjmp	.+0      	; 0x98 <xEventGroupWaitBits+0x98>
  98:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  9c:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
  a0:	91 fd       	sbrc	r25, 1
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <xEventGroupWaitBits+0xa4>
  a4:	0f b6       	in	r0, 0x3f	; 63
  a6:	f8 94       	cli
  a8:	0f 92       	push	r0
  aa:	68 81       	ld	r22, Y
  ac:	79 81       	ldd	r23, Y+1	; 0x01
  ae:	8a 81       	ldd	r24, Y+2	; 0x02
  b0:	9b 81       	ldd	r25, Y+3	; 0x03
  b2:	75 01       	movw	r14, r10
  b4:	64 01       	movw	r12, r8
  b6:	c6 22       	and	r12, r22
  b8:	d7 22       	and	r13, r23
  ba:	e8 22       	and	r14, r24
  bc:	f9 22       	and	r15, r25
  be:	61 10       	cpse	r6, r1
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <xEventGroupWaitBits+0xc2>
  c2:	cd 28       	or	r12, r13
  c4:	ce 28       	or	r12, r14
  c6:	cf 28       	or	r12, r15
  c8:	01 f4       	brne	.+0      	; 0xca <xEventGroupWaitBits+0xca>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <xEventGroupWaitBits+0xcc>
  cc:	c8 14       	cp	r12, r8
  ce:	d9 04       	cpc	r13, r9
  d0:	ea 04       	cpc	r14, r10
  d2:	fb 04       	cpc	r15, r11
  d4:	01 f4       	brne	.+0      	; 0xd6 <xEventGroupWaitBits+0xd6>
  d6:	77 20       	and	r7, r7
  d8:	01 f0       	breq	.+0      	; 0xda <xEventGroupWaitBits+0xda>
  da:	80 94       	com	r8
  dc:	90 94       	com	r9
  de:	a0 94       	com	r10
  e0:	b0 94       	com	r11
  e2:	86 22       	and	r8, r22
  e4:	97 22       	and	r9, r23
  e6:	a8 22       	and	r10, r24
  e8:	b9 22       	and	r11, r25
  ea:	88 82       	st	Y, r8
  ec:	99 82       	std	Y+1, r9	; 0x01
  ee:	aa 82       	std	Y+2, r10	; 0x02
  f0:	bb 82       	std	Y+3, r11	; 0x03
  f2:	0f 90       	pop	r0
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	1b 01       	movw	r2, r22
  f8:	2c 01       	movw	r4, r24
  fa:	55 24       	eor	r5, r5
  fc:	00 c0       	rjmp	.+0      	; 0xfe <xEventGroupWaitBits+0xfe>
  fe:	c1 14       	cp	r12, r1
 100:	d1 04       	cpc	r13, r1
 102:	e1 04       	cpc	r14, r1
 104:	f1 04       	cpc	r15, r1
 106:	01 f4       	brne	.+0      	; 0x108 <xEventGroupWaitBits+0x108>
 108:	00 c0       	rjmp	.+0      	; 0x10a <xEventGroupWaitBits+0x10a>
 10a:	77 20       	and	r7, r7
 10c:	01 f0       	breq	.+0      	; 0x10e <xEventGroupWaitBits+0x10e>
 10e:	40 e0       	ldi	r20, 0x00	; 0
 110:	50 e0       	ldi	r21, 0x00	; 0
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	71 e0       	ldi	r23, 0x01	; 1
 116:	00 c0       	rjmp	.+0      	; 0x118 <xEventGroupWaitBits+0x118>
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	50 e0       	ldi	r21, 0x00	; 0
 11c:	ba 01       	movw	r22, r20
 11e:	61 10       	cpse	r6, r1
 120:	74 60       	ori	r23, 0x04	; 4
 122:	48 29       	or	r20, r8
 124:	59 29       	or	r21, r9
 126:	6a 29       	or	r22, r10
 128:	7b 29       	or	r23, r11
 12a:	97 01       	movw	r18, r14
 12c:	86 01       	movw	r16, r12
 12e:	ce 01       	movw	r24, r28
 130:	04 96       	adiw	r24, 0x04	; 4
 132:	0e 94 00 00 	call	0	; 0x0 <xEventGroupWaitBits>
 136:	21 2c       	mov	r2, r1
 138:	31 2c       	mov	r3, r1
 13a:	21 01       	movw	r4, r2
 13c:	00 c0       	rjmp	.+0      	; 0x13e <xEventGroupWaitBits+0x13e>
 13e:	c2 01       	movw	r24, r4
 140:	b1 01       	movw	r22, r2
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	1f 91       	pop	r17
 148:	0f 91       	pop	r16
 14a:	ff 90       	pop	r15
 14c:	ef 90       	pop	r14
 14e:	df 90       	pop	r13
 150:	cf 90       	pop	r12
 152:	bf 90       	pop	r11
 154:	af 90       	pop	r10
 156:	9f 90       	pop	r9
 158:	8f 90       	pop	r8
 15a:	7f 90       	pop	r7
 15c:	6f 90       	pop	r6
 15e:	5f 90       	pop	r5
 160:	4f 90       	pop	r4
 162:	3f 90       	pop	r3
 164:	2f 90       	pop	r2
 166:	08 95       	ret

Disassembly of section .text.xEventGroupClearBits:

00000000 <xEventGroupClearBits>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	0f b6       	in	r0, 0x3f	; 63
   6:	f8 94       	cli
   8:	0f 92       	push	r0
   a:	fc 01       	movw	r30, r24
   c:	00 81       	ld	r16, Z
   e:	11 81       	ldd	r17, Z+1	; 0x01
  10:	22 81       	ldd	r18, Z+2	; 0x02
  12:	33 81       	ldd	r19, Z+3	; 0x03
  14:	40 95       	com	r20
  16:	50 95       	com	r21
  18:	60 95       	com	r22
  1a:	70 95       	com	r23
  1c:	40 23       	and	r20, r16
  1e:	51 23       	and	r21, r17
  20:	62 23       	and	r22, r18
  22:	73 23       	and	r23, r19
  24:	40 83       	st	Z, r20
  26:	51 83       	std	Z+1, r21	; 0x01
  28:	62 83       	std	Z+2, r22	; 0x02
  2a:	73 83       	std	Z+3, r23	; 0x03
  2c:	0f 90       	pop	r0
  2e:	0f be       	out	0x3f, r0	; 63
  30:	c9 01       	movw	r24, r18
  32:	b8 01       	movw	r22, r16
  34:	1f 91       	pop	r17
  36:	0f 91       	pop	r16
  38:	08 95       	ret

Disassembly of section .text.xEventGroupGetBitsFromISR:

00000000 <xEventGroupGetBitsFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	60 81       	ld	r22, Z
   4:	71 81       	ldd	r23, Z+1	; 0x01
   6:	82 81       	ldd	r24, Z+2	; 0x02
   8:	93 81       	ldd	r25, Z+3	; 0x03
   a:	08 95       	ret

Disassembly of section .text.xEventGroupSetBits:

00000000 <xEventGroupSetBits>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	00 d0       	rcall	.+0      	; 0x26 <xEventGroupSetBits+0x26>
  26:	00 d0       	rcall	.+0      	; 0x28 <xEventGroupSetBits+0x28>
  28:	00 d0       	rcall	.+0      	; 0x2a <xEventGroupSetBits+0x2a>
  2a:	cd b7       	in	r28, 0x3d	; 61
  2c:	de b7       	in	r29, 0x3e	; 62
  2e:	9e 83       	std	Y+6, r25	; 0x06
  30:	8d 83       	std	Y+5, r24	; 0x05
  32:	8c 01       	movw	r16, r24
  34:	09 5f       	subi	r16, 0xF9	; 249
  36:	1f 4f       	sbci	r17, 0xFF	; 255
  38:	49 83       	std	Y+1, r20	; 0x01
  3a:	5a 83       	std	Y+2, r21	; 0x02
  3c:	6b 83       	std	Y+3, r22	; 0x03
  3e:	7c 83       	std	Y+4, r23	; 0x04
  40:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSetBits>
  44:	ad 81       	ldd	r26, Y+5	; 0x05
  46:	be 81       	ldd	r27, Y+6	; 0x06
  48:	1b 96       	adiw	r26, 0x0b	; 11
  4a:	ed 91       	ld	r30, X+
  4c:	fc 91       	ld	r31, X
  4e:	1c 97       	sbiw	r26, 0x0c	; 12
  50:	cd 90       	ld	r12, X+
  52:	dd 90       	ld	r13, X+
  54:	ed 90       	ld	r14, X+
  56:	fc 90       	ld	r15, X
  58:	13 97       	sbiw	r26, 0x03	; 3
  5a:	49 81       	ldd	r20, Y+1	; 0x01
  5c:	5a 81       	ldd	r21, Y+2	; 0x02
  5e:	6b 81       	ldd	r22, Y+3	; 0x03
  60:	7c 81       	ldd	r23, Y+4	; 0x04
  62:	4c 29       	or	r20, r12
  64:	5d 29       	or	r21, r13
  66:	6e 29       	or	r22, r14
  68:	7f 29       	or	r23, r15
  6a:	4d 93       	st	X+, r20
  6c:	5d 93       	st	X+, r21
  6e:	6d 93       	st	X+, r22
  70:	7c 93       	st	X, r23
  72:	13 97       	sbiw	r26, 0x03	; 3
  74:	c1 2c       	mov	r12, r1
  76:	d1 2c       	mov	r13, r1
  78:	76 01       	movw	r14, r12
  7a:	ad 81       	ldd	r26, Y+5	; 0x05
  7c:	be 81       	ldd	r27, Y+6	; 0x06
  7e:	4d 91       	ld	r20, X+
  80:	5d 91       	ld	r21, X+
  82:	6d 91       	ld	r22, X+
  84:	7c 91       	ld	r23, X
  86:	13 97       	sbiw	r26, 0x03	; 3
  88:	e0 17       	cp	r30, r16
  8a:	f1 07       	cpc	r31, r17
  8c:	01 f0       	breq	.+0      	; 0x8e <xEventGroupSetBits+0x8e>
  8e:	24 80       	ldd	r2, Z+4	; 0x04
  90:	35 80       	ldd	r3, Z+5	; 0x05
  92:	80 80       	ld	r8, Z
  94:	91 80       	ldd	r9, Z+1	; 0x01
  96:	a2 80       	ldd	r10, Z+2	; 0x02
  98:	b3 80       	ldd	r11, Z+3	; 0x03
  9a:	d5 01       	movw	r26, r10
  9c:	c4 01       	movw	r24, r8
  9e:	bb 27       	eor	r27, r27
  a0:	2c 01       	movw	r4, r24
  a2:	3d 01       	movw	r6, r26
  a4:	44 22       	and	r4, r20
  a6:	55 22       	and	r5, r21
  a8:	66 22       	and	r6, r22
  aa:	77 22       	and	r7, r23
  ac:	b2 fc       	sbrc	r11, 2
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <xEventGroupSetBits+0xb0>
  b0:	45 28       	or	r4, r5
  b2:	46 28       	or	r4, r6
  b4:	47 28       	or	r4, r7
  b6:	01 f4       	brne	.+0      	; 0xb8 <xEventGroupSetBits+0xb8>
  b8:	00 c0       	rjmp	.+0      	; 0xba <xEventGroupSetBits+0xba>
  ba:	48 16       	cp	r4, r24
  bc:	59 06       	cpc	r5, r25
  be:	6a 06       	cpc	r6, r26
  c0:	7b 06       	cpc	r7, r27
  c2:	01 f4       	brne	.+0      	; 0xc4 <xEventGroupSetBits+0xc4>
  c4:	b0 fe       	sbrs	r11, 0
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <xEventGroupSetBits+0xc8>
  c8:	c8 2a       	or	r12, r24
  ca:	d9 2a       	or	r13, r25
  cc:	ea 2a       	or	r14, r26
  ce:	fb 2a       	or	r15, r27
  d0:	72 60       	ori	r23, 0x02	; 2
  d2:	cf 01       	movw	r24, r30
  d4:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSetBits>
  d8:	f1 01       	movw	r30, r2
  da:	00 c0       	rjmp	.+0      	; 0xdc <xEventGroupSetBits+0xdc>
  dc:	c0 94       	com	r12
  de:	d0 94       	com	r13
  e0:	e0 94       	com	r14
  e2:	f0 94       	com	r15
  e4:	4c 21       	and	r20, r12
  e6:	5d 21       	and	r21, r13
  e8:	6e 21       	and	r22, r14
  ea:	7f 21       	and	r23, r15
  ec:	fd 01       	movw	r30, r26
  ee:	40 83       	st	Z, r20
  f0:	51 83       	std	Z+1, r21	; 0x01
  f2:	62 83       	std	Z+2, r22	; 0x02
  f4:	73 83       	std	Z+3, r23	; 0x03
  f6:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSetBits>
  fa:	ad 81       	ldd	r26, Y+5	; 0x05
  fc:	be 81       	ldd	r27, Y+6	; 0x06
  fe:	6d 91       	ld	r22, X+
 100:	7d 91       	ld	r23, X+
 102:	8d 91       	ld	r24, X+
 104:	9c 91       	ld	r25, X
 106:	26 96       	adiw	r28, 0x06	; 6
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	0f be       	out	0x3f, r0	; 63
 110:	cd bf       	out	0x3d, r28	; 61
 112:	df 91       	pop	r29
 114:	cf 91       	pop	r28
 116:	1f 91       	pop	r17
 118:	0f 91       	pop	r16
 11a:	ff 90       	pop	r15
 11c:	ef 90       	pop	r14
 11e:	df 90       	pop	r13
 120:	cf 90       	pop	r12
 122:	bf 90       	pop	r11
 124:	af 90       	pop	r10
 126:	9f 90       	pop	r9
 128:	8f 90       	pop	r8
 12a:	7f 90       	pop	r7
 12c:	6f 90       	pop	r6
 12e:	5f 90       	pop	r5
 130:	4f 90       	pop	r4
 132:	3f 90       	pop	r3
 134:	2f 90       	pop	r2
 136:	08 95       	ret

Disassembly of section .text.xEventGroupSync:

00000000 <xEventGroupSync>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	00 d0       	rcall	.+0      	; 0x26 <xEventGroupSync+0x26>
  26:	00 d0       	rcall	.+0      	; 0x28 <xEventGroupSync+0x28>
  28:	cd b7       	in	r28, 0x3d	; 61
  2a:	de b7       	in	r29, 0x3e	; 62
  2c:	1c 01       	movw	r2, r24
  2e:	2a 01       	movw	r4, r20
  30:	3b 01       	movw	r6, r22
  32:	48 01       	movw	r8, r16
  34:	59 01       	movw	r10, r18
  36:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  3a:	d1 01       	movw	r26, r2
  3c:	8d 91       	ld	r24, X+
  3e:	9d 91       	ld	r25, X+
  40:	0d 90       	ld	r0, X+
  42:	bc 91       	ld	r27, X
  44:	a0 2d       	mov	r26, r0
  46:	89 83       	std	Y+1, r24	; 0x01
  48:	9a 83       	std	Y+2, r25	; 0x02
  4a:	ab 83       	std	Y+3, r26	; 0x03
  4c:	bc 83       	std	Y+4, r27	; 0x04
  4e:	b3 01       	movw	r22, r6
  50:	a2 01       	movw	r20, r4
  52:	c1 01       	movw	r24, r2
  54:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  58:	89 81       	ldd	r24, Y+1	; 0x01
  5a:	9a 81       	ldd	r25, Y+2	; 0x02
  5c:	ab 81       	ldd	r26, Y+3	; 0x03
  5e:	bc 81       	ldd	r27, Y+4	; 0x04
  60:	48 2a       	or	r4, r24
  62:	59 2a       	or	r5, r25
  64:	6a 2a       	or	r6, r26
  66:	7b 2a       	or	r7, r27
  68:	d3 01       	movw	r26, r6
  6a:	c2 01       	movw	r24, r4
  6c:	88 21       	and	r24, r8
  6e:	99 21       	and	r25, r9
  70:	aa 21       	and	r26, r10
  72:	bb 21       	and	r27, r11
  74:	88 15       	cp	r24, r8
  76:	99 05       	cpc	r25, r9
  78:	aa 05       	cpc	r26, r10
  7a:	bb 05       	cpc	r27, r11
  7c:	01 f4       	brne	.+0      	; 0x7e <xEventGroupSync+0x7e>
  7e:	d1 01       	movw	r26, r2
  80:	4d 91       	ld	r20, X+
  82:	5d 91       	ld	r21, X+
  84:	6d 91       	ld	r22, X+
  86:	7c 91       	ld	r23, X
  88:	d5 01       	movw	r26, r10
  8a:	c4 01       	movw	r24, r8
  8c:	80 95       	com	r24
  8e:	90 95       	com	r25
  90:	a0 95       	com	r26
  92:	b0 95       	com	r27
  94:	84 23       	and	r24, r20
  96:	95 23       	and	r25, r21
  98:	a6 23       	and	r26, r22
  9a:	b7 23       	and	r27, r23
  9c:	f1 01       	movw	r30, r2
  9e:	80 83       	st	Z, r24
  a0:	91 83       	std	Z+1, r25	; 0x01
  a2:	a2 83       	std	Z+2, r26	; 0x02
  a4:	b3 83       	std	Z+3, r27	; 0x03
  a6:	c1 2c       	mov	r12, r1
  a8:	d1 2c       	mov	r13, r1
  aa:	76 01       	movw	r14, r12
  ac:	00 c0       	rjmp	.+0      	; 0xae <xEventGroupSync+0xae>
  ae:	c1 14       	cp	r12, r1
  b0:	d1 04       	cpc	r13, r1
  b2:	e1 04       	cpc	r14, r1
  b4:	f1 04       	cpc	r15, r1
  b6:	01 f0       	breq	.+0      	; 0xb8 <xEventGroupSync+0xb8>
  b8:	97 01       	movw	r18, r14
  ba:	86 01       	movw	r16, r12
  bc:	b5 01       	movw	r22, r10
  be:	a4 01       	movw	r20, r8
  c0:	75 60       	ori	r23, 0x05	; 5
  c2:	c1 01       	movw	r24, r2
  c4:	04 96       	adiw	r24, 0x04	; 4
  c6:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  ca:	41 2c       	mov	r4, r1
  cc:	51 2c       	mov	r5, r1
  ce:	32 01       	movw	r6, r4
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <xEventGroupSync+0xd2>
  d2:	d1 01       	movw	r26, r2
  d4:	4d 90       	ld	r4, X+
  d6:	5d 90       	ld	r5, X+
  d8:	6d 90       	ld	r6, X+
  da:	7c 90       	ld	r7, X
  dc:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  e0:	cd 28       	or	r12, r13
  e2:	ce 28       	or	r12, r14
  e4:	cf 28       	or	r12, r15
  e6:	01 f0       	breq	.+0      	; 0xe8 <xEventGroupSync+0xe8>
  e8:	81 11       	cpse	r24, r1
  ea:	00 c0       	rjmp	.+0      	; 0xec <xEventGroupSync+0xec>
  ec:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  f0:	0e 94 00 00 	call	0	; 0x0 <xEventGroupSync>
  f4:	91 fd       	sbrc	r25, 1
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <xEventGroupSync+0xf8>
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	f8 94       	cli
  fc:	0f 92       	push	r0
  fe:	f1 01       	movw	r30, r2
 100:	60 81       	ld	r22, Z
 102:	71 81       	ldd	r23, Z+1	; 0x01
 104:	82 81       	ldd	r24, Z+2	; 0x02
 106:	93 81       	ldd	r25, Z+3	; 0x03
 108:	75 01       	movw	r14, r10
 10a:	64 01       	movw	r12, r8
 10c:	c6 22       	and	r12, r22
 10e:	d7 22       	and	r13, r23
 110:	e8 22       	and	r14, r24
 112:	f9 22       	and	r15, r25
 114:	c8 14       	cp	r12, r8
 116:	d9 04       	cpc	r13, r9
 118:	ea 04       	cpc	r14, r10
 11a:	fb 04       	cpc	r15, r11
 11c:	01 f4       	brne	.+0      	; 0x11e <xEventGroupSync+0x11e>
 11e:	80 94       	com	r8
 120:	90 94       	com	r9
 122:	a0 94       	com	r10
 124:	b0 94       	com	r11
 126:	86 22       	and	r8, r22
 128:	97 22       	and	r9, r23
 12a:	a8 22       	and	r10, r24
 12c:	b9 22       	and	r11, r25
 12e:	80 82       	st	Z, r8
 130:	91 82       	std	Z+1, r9	; 0x01
 132:	a2 82       	std	Z+2, r10	; 0x02
 134:	b3 82       	std	Z+3, r11	; 0x03
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	2b 01       	movw	r4, r22
 13c:	3c 01       	movw	r6, r24
 13e:	77 24       	eor	r7, r7
 140:	c3 01       	movw	r24, r6
 142:	b2 01       	movw	r22, r4
 144:	0f 90       	pop	r0
 146:	0f 90       	pop	r0
 148:	0f 90       	pop	r0
 14a:	0f 90       	pop	r0
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	0f 91       	pop	r16
 154:	ff 90       	pop	r15
 156:	ef 90       	pop	r14
 158:	df 90       	pop	r13
 15a:	cf 90       	pop	r12
 15c:	bf 90       	pop	r11
 15e:	af 90       	pop	r10
 160:	9f 90       	pop	r9
 162:	8f 90       	pop	r8
 164:	7f 90       	pop	r7
 166:	6f 90       	pop	r6
 168:	5f 90       	pop	r5
 16a:	4f 90       	pop	r4
 16c:	3f 90       	pop	r3
 16e:	2f 90       	pop	r2
 170:	08 95       	ret

Disassembly of section .text.vEventGroupDelete:

00000000 <vEventGroupDelete>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	0e 94 00 00 	call	0	; 0x0 <vEventGroupDelete>
   a:	8c 81       	ldd	r24, Y+4	; 0x04
   c:	88 23       	and	r24, r24
   e:	01 f0       	breq	.+0      	; 0x10 <vEventGroupDelete+0x10>
  10:	40 e0       	ldi	r20, 0x00	; 0
  12:	50 e0       	ldi	r21, 0x00	; 0
  14:	60 e0       	ldi	r22, 0x00	; 0
  16:	72 e0       	ldi	r23, 0x02	; 2
  18:	8b 85       	ldd	r24, Y+11	; 0x0b
  1a:	9c 85       	ldd	r25, Y+12	; 0x0c
  1c:	0e 94 00 00 	call	0	; 0x0 <vEventGroupDelete>
  20:	00 c0       	rjmp	.+0      	; 0x22 <vEventGroupDelete+0x22>
  22:	ce 01       	movw	r24, r28
  24:	0e 94 00 00 	call	0	; 0x0 <vEventGroupDelete>
  28:	df 91       	pop	r29
  2a:	cf 91       	pop	r28
  2c:	0c 94 00 00 	jmp	0	; 0x0 <vEventGroupDelete>

Disassembly of section .text.vEventGroupSetBitsCallback:

00000000 <vEventGroupSetBitsCallback>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <vEventGroupSetBitsCallback>

Disassembly of section .text.vEventGroupClearBitsCallback:

00000000 <vEventGroupClearBitsCallback>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <vEventGroupClearBitsCallback>

list.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.vListInitialise 00000022  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.vListInitialiseItem 00000008  00000000  00000000  00000056  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .text.vListInsertEnd 00000042  00000000  00000000  0000005e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.vListInsert 00000088  00000000  00000000  000000a0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.uxListRemove 00000046  00000000  00000000  00000128  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .comment      00000012  00000000  00000000  0000016e  2**0
                  CONTENTS, READONLY

Disassembly of section .text.vListInitialise:

00000000 <vListInitialise>:
   0:	fc 01       	movw	r30, r24
   2:	03 96       	adiw	r24, 0x03	; 3
   4:	92 83       	std	Z+2, r25	; 0x02
   6:	81 83       	std	Z+1, r24	; 0x01
   8:	4f ef       	ldi	r20, 0xFF	; 255
   a:	5f ef       	ldi	r21, 0xFF	; 255
   c:	ba 01       	movw	r22, r20
   e:	43 83       	std	Z+3, r20	; 0x03
  10:	54 83       	std	Z+4, r21	; 0x04
  12:	65 83       	std	Z+5, r22	; 0x05
  14:	76 83       	std	Z+6, r23	; 0x06
  16:	90 87       	std	Z+8, r25	; 0x08
  18:	87 83       	std	Z+7, r24	; 0x07
  1a:	92 87       	std	Z+10, r25	; 0x0a
  1c:	81 87       	std	Z+9, r24	; 0x09
  1e:	10 82       	st	Z, r1
  20:	08 95       	ret

Disassembly of section .text.vListInitialiseItem:

00000000 <vListInitialiseItem>:
   0:	fc 01       	movw	r30, r24
   2:	13 86       	std	Z+11, r1	; 0x0b
   4:	12 86       	std	Z+10, r1	; 0x0a
   6:	08 95       	ret

Disassembly of section .text.vListInsertEnd:

00000000 <vListInsertEnd>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	9c 01       	movw	r18, r24
   6:	fb 01       	movw	r30, r22
   8:	dc 01       	movw	r26, r24
   a:	11 96       	adiw	r26, 0x01	; 1
   c:	cd 91       	ld	r28, X+
   e:	dc 91       	ld	r29, X
  10:	12 97       	sbiw	r26, 0x02	; 2
  12:	d5 83       	std	Z+5, r29	; 0x05
  14:	c4 83       	std	Z+4, r28	; 0x04
  16:	8e 81       	ldd	r24, Y+6	; 0x06
  18:	9f 81       	ldd	r25, Y+7	; 0x07
  1a:	97 83       	std	Z+7, r25	; 0x07
  1c:	86 83       	std	Z+6, r24	; 0x06
  1e:	8e 81       	ldd	r24, Y+6	; 0x06
  20:	9f 81       	ldd	r25, Y+7	; 0x07
  22:	dc 01       	movw	r26, r24
  24:	15 96       	adiw	r26, 0x05	; 5
  26:	7c 93       	st	X, r23
  28:	6e 93       	st	-X, r22
  2a:	14 97       	sbiw	r26, 0x04	; 4
  2c:	7f 83       	std	Y+7, r23	; 0x07
  2e:	6e 83       	std	Y+6, r22	; 0x06
  30:	33 87       	std	Z+11, r19	; 0x0b
  32:	22 87       	std	Z+10, r18	; 0x0a
  34:	f9 01       	movw	r30, r18
  36:	80 81       	ld	r24, Z
  38:	8f 5f       	subi	r24, 0xFF	; 255
  3a:	80 83       	st	Z, r24
  3c:	df 91       	pop	r29
  3e:	cf 91       	pop	r28
  40:	08 95       	ret

Disassembly of section .text.vListInsert:

00000000 <vListInsert>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	7c 01       	movw	r14, r24
   e:	fb 01       	movw	r30, r22
  10:	40 81       	ld	r20, Z
  12:	51 81       	ldd	r21, Z+1	; 0x01
  14:	62 81       	ldd	r22, Z+2	; 0x02
  16:	73 81       	ldd	r23, Z+3	; 0x03
  18:	4f 3f       	cpi	r20, 0xFF	; 255
  1a:	8f ef       	ldi	r24, 0xFF	; 255
  1c:	58 07       	cpc	r21, r24
  1e:	68 07       	cpc	r22, r24
  20:	78 07       	cpc	r23, r24
  22:	01 f4       	brne	.+0      	; 0x24 <vListInsert+0x24>
  24:	e7 01       	movw	r28, r14
  26:	a9 85       	ldd	r26, Y+9	; 0x09
  28:	ba 85       	ldd	r27, Y+10	; 0x0a
  2a:	00 c0       	rjmp	.+0      	; 0x2c <vListInsert+0x2c>
  2c:	d7 01       	movw	r26, r14
  2e:	13 96       	adiw	r26, 0x03	; 3
  30:	14 96       	adiw	r26, 0x04	; 4
  32:	8d 91       	ld	r24, X+
  34:	9c 91       	ld	r25, X
  36:	15 97       	sbiw	r26, 0x05	; 5
  38:	ec 01       	movw	r28, r24
  3a:	08 81       	ld	r16, Y
  3c:	19 81       	ldd	r17, Y+1	; 0x01
  3e:	2a 81       	ldd	r18, Y+2	; 0x02
  40:	3b 81       	ldd	r19, Y+3	; 0x03
  42:	40 17       	cp	r20, r16
  44:	51 07       	cpc	r21, r17
  46:	62 07       	cpc	r22, r18
  48:	73 07       	cpc	r23, r19
  4a:	00 f0       	brcs	.+0      	; 0x4c <vListInsert+0x4c>
  4c:	dc 01       	movw	r26, r24
  4e:	00 c0       	rjmp	.+0      	; 0x50 <vListInsert+0x50>
  50:	14 96       	adiw	r26, 0x04	; 4
  52:	8d 91       	ld	r24, X+
  54:	9c 91       	ld	r25, X
  56:	15 97       	sbiw	r26, 0x05	; 5
  58:	95 83       	std	Z+5, r25	; 0x05
  5a:	84 83       	std	Z+4, r24	; 0x04
  5c:	ec 01       	movw	r28, r24
  5e:	ff 83       	std	Y+7, r31	; 0x07
  60:	ee 83       	std	Y+6, r30	; 0x06
  62:	b7 83       	std	Z+7, r27	; 0x07
  64:	a6 83       	std	Z+6, r26	; 0x06
  66:	15 96       	adiw	r26, 0x05	; 5
  68:	fc 93       	st	X, r31
  6a:	ee 93       	st	-X, r30
  6c:	14 97       	sbiw	r26, 0x04	; 4
  6e:	f3 86       	std	Z+11, r15	; 0x0b
  70:	e2 86       	std	Z+10, r14	; 0x0a
  72:	f7 01       	movw	r30, r14
  74:	80 81       	ld	r24, Z
  76:	8f 5f       	subi	r24, 0xFF	; 255
  78:	80 83       	st	Z, r24
  7a:	df 91       	pop	r29
  7c:	cf 91       	pop	r28
  7e:	1f 91       	pop	r17
  80:	0f 91       	pop	r16
  82:	ff 90       	pop	r15
  84:	ef 90       	pop	r14
  86:	08 95       	ret

Disassembly of section .text.uxListRemove:

00000000 <uxListRemove>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	fc 01       	movw	r30, r24
   6:	a2 85       	ldd	r26, Z+10	; 0x0a
   8:	b3 85       	ldd	r27, Z+11	; 0x0b
   a:	84 81       	ldd	r24, Z+4	; 0x04
   c:	95 81       	ldd	r25, Z+5	; 0x05
   e:	26 81       	ldd	r18, Z+6	; 0x06
  10:	37 81       	ldd	r19, Z+7	; 0x07
  12:	ec 01       	movw	r28, r24
  14:	3f 83       	std	Y+7, r19	; 0x07
  16:	2e 83       	std	Y+6, r18	; 0x06
  18:	c6 81       	ldd	r28, Z+6	; 0x06
  1a:	d7 81       	ldd	r29, Z+7	; 0x07
  1c:	9d 83       	std	Y+5, r25	; 0x05
  1e:	8c 83       	std	Y+4, r24	; 0x04
  20:	11 96       	adiw	r26, 0x01	; 1
  22:	8d 91       	ld	r24, X+
  24:	9c 91       	ld	r25, X
  26:	12 97       	sbiw	r26, 0x02	; 2
  28:	8e 17       	cp	r24, r30
  2a:	9f 07       	cpc	r25, r31
  2c:	01 f4       	brne	.+0      	; 0x2e <uxListRemove+0x2e>
  2e:	12 96       	adiw	r26, 0x02	; 2
  30:	dc 93       	st	X, r29
  32:	ce 93       	st	-X, r28
  34:	11 97       	sbiw	r26, 0x01	; 1
  36:	13 86       	std	Z+11, r1	; 0x0b
  38:	12 86       	std	Z+10, r1	; 0x0a
  3a:	8c 91       	ld	r24, X
  3c:	81 50       	subi	r24, 0x01	; 1
  3e:	8c 93       	st	X, r24
  40:	df 91       	pop	r29
  42:	cf 91       	pop	r28
  44:	08 95       	ret

queue.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.prvCopyDataToQueue 000000ae  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.prvCopyDataFromQueue 00000034  00000000  00000000  000000e2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.prvUnlockQueue 0000007c  00000000  00000000  00000116  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.xQueueGenericReset 00000074  00000000  00000000  00000192  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.xQueueGenericCreate 00000068  00000000  00000000  00000206  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.xQueueCreateCountingSemaphore 00000018  00000000  00000000  0000026e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.xQueueGenericSend 00000148  00000000  00000000  00000286  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .text.xQueueCreateMutex 0000005e  00000000  00000000  000003ce  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 11 .text.xQueueGenericSendFromISR 0000005c  00000000  00000000  0000042c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.xQueueGiveFromISR 0000004a  00000000  00000000  00000488  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.xQueueGenericReceive 0000018c  00000000  00000000  000004d2  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.xQueueReceiveFromISR 0000005a  00000000  00000000  0000065e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.xQueuePeekFromISR 0000002e  00000000  00000000  000006b8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.uxQueueMessagesWaiting 00000010  00000000  00000000  000006e6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.uxQueueSpacesAvailable 00000014  00000000  00000000  000006f6  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.uxQueueMessagesWaitingFromISR 00000006  00000000  00000000  0000070a  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.vQueueDelete 00000004  00000000  00000000  00000710  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text.xQueueIsQueueEmptyFromISR 0000000c  00000000  00000000  00000714  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.xQueueIsQueueFullFromISR 0000000e  00000000  00000000  00000720  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .comment      00000012  00000000  00000000  0000072e  2**0
                  CONTENTS, READONLY

Disassembly of section .text.prvCopyDataToQueue:

00000000 <prvCopyDataToQueue>:
   0:	1f 93       	push	r17
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
   6:	ec 01       	movw	r28, r24
   8:	14 2f       	mov	r17, r20
   a:	88 a1       	ldd	r24, Y+32	; 0x20
   c:	81 11       	cpse	r24, r1
   e:	00 c0       	rjmp	.+0      	; 0x10 <prvCopyDataToQueue+0x10>
  10:	88 81       	ld	r24, Y
  12:	99 81       	ldd	r25, Y+1	; 0x01
  14:	89 2b       	or	r24, r25
  16:	01 f0       	breq	.+0      	; 0x18 <prvCopyDataToQueue+0x18>
  18:	00 c0       	rjmp	.+0      	; 0x1a <prvCopyDataToQueue+0x1a>
  1a:	8a 81       	ldd	r24, Y+2	; 0x02
  1c:	9b 81       	ldd	r25, Y+3	; 0x03
  1e:	0e 94 00 00 	call	0	; 0x0 <prvCopyDataToQueue>
  22:	1b 82       	std	Y+3, r1	; 0x03
  24:	1a 82       	std	Y+2, r1	; 0x02
  26:	00 c0       	rjmp	.+0      	; 0x28 <prvCopyDataToQueue+0x28>
  28:	48 2f       	mov	r20, r24
  2a:	50 e0       	ldi	r21, 0x00	; 0
  2c:	11 11       	cpse	r17, r1
  2e:	00 c0       	rjmp	.+0      	; 0x30 <prvCopyDataToQueue+0x30>
  30:	8c 81       	ldd	r24, Y+4	; 0x04
  32:	9d 81       	ldd	r25, Y+5	; 0x05
  34:	0e 94 00 00 	call	0	; 0x0 <prvCopyDataToQueue>
  38:	28 a1       	ldd	r18, Y+32	; 0x20
  3a:	8c 81       	ldd	r24, Y+4	; 0x04
  3c:	9d 81       	ldd	r25, Y+5	; 0x05
  3e:	82 0f       	add	r24, r18
  40:	91 1d       	adc	r25, r1
  42:	9d 83       	std	Y+5, r25	; 0x05
  44:	8c 83       	std	Y+4, r24	; 0x04
  46:	2a 81       	ldd	r18, Y+2	; 0x02
  48:	3b 81       	ldd	r19, Y+3	; 0x03
  4a:	82 17       	cp	r24, r18
  4c:	93 07       	cpc	r25, r19
  4e:	00 f0       	brcs	.+0      	; 0x50 <prvCopyDataToQueue+0x50>
  50:	88 81       	ld	r24, Y
  52:	99 81       	ldd	r25, Y+1	; 0x01
  54:	9d 83       	std	Y+5, r25	; 0x05
  56:	8c 83       	std	Y+4, r24	; 0x04
  58:	00 c0       	rjmp	.+0      	; 0x5a <prvCopyDataToQueue+0x5a>
  5a:	8e 81       	ldd	r24, Y+6	; 0x06
  5c:	9f 81       	ldd	r25, Y+7	; 0x07
  5e:	0e 94 00 00 	call	0	; 0x0 <prvCopyDataToQueue>
  62:	88 a1       	ldd	r24, Y+32	; 0x20
  64:	90 e0       	ldi	r25, 0x00	; 0
  66:	91 95       	neg	r25
  68:	81 95       	neg	r24
  6a:	91 09       	sbc	r25, r1
  6c:	2e 81       	ldd	r18, Y+6	; 0x06
  6e:	3f 81       	ldd	r19, Y+7	; 0x07
  70:	28 0f       	add	r18, r24
  72:	39 1f       	adc	r19, r25
  74:	3f 83       	std	Y+7, r19	; 0x07
  76:	2e 83       	std	Y+6, r18	; 0x06
  78:	48 81       	ld	r20, Y
  7a:	59 81       	ldd	r21, Y+1	; 0x01
  7c:	24 17       	cp	r18, r20
  7e:	35 07       	cpc	r19, r21
  80:	00 f4       	brcc	.+0      	; 0x82 <prvCopyDataToQueue+0x82>
  82:	2a 81       	ldd	r18, Y+2	; 0x02
  84:	3b 81       	ldd	r19, Y+3	; 0x03
  86:	82 0f       	add	r24, r18
  88:	93 1f       	adc	r25, r19
  8a:	9f 83       	std	Y+7, r25	; 0x07
  8c:	8e 83       	std	Y+6, r24	; 0x06
  8e:	12 30       	cpi	r17, 0x02	; 2
  90:	01 f4       	brne	.+0      	; 0x92 <prvCopyDataToQueue+0x92>
  92:	8e 8d       	ldd	r24, Y+30	; 0x1e
  94:	88 23       	and	r24, r24
  96:	01 f0       	breq	.+0      	; 0x98 <prvCopyDataToQueue+0x98>
  98:	8e 8d       	ldd	r24, Y+30	; 0x1e
  9a:	81 50       	subi	r24, 0x01	; 1
  9c:	8e 8f       	std	Y+30, r24	; 0x1e
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	9e 8d       	ldd	r25, Y+30	; 0x1e
  a2:	9f 5f       	subi	r25, 0xFF	; 255
  a4:	9e 8f       	std	Y+30, r25	; 0x1e
  a6:	df 91       	pop	r29
  a8:	cf 91       	pop	r28
  aa:	1f 91       	pop	r17
  ac:	08 95       	ret

Disassembly of section .text.prvCopyDataFromQueue:

00000000 <prvCopyDataFromQueue>:
   0:	fc 01       	movw	r30, r24
   2:	cb 01       	movw	r24, r22
   4:	40 a1       	ldd	r20, Z+32	; 0x20
   6:	44 23       	and	r20, r20
   8:	01 f0       	breq	.+0      	; 0xa <prvCopyDataFromQueue+0xa>
   a:	50 e0       	ldi	r21, 0x00	; 0
   c:	26 81       	ldd	r18, Z+6	; 0x06
   e:	37 81       	ldd	r19, Z+7	; 0x07
  10:	24 0f       	add	r18, r20
  12:	35 1f       	adc	r19, r21
  14:	37 83       	std	Z+7, r19	; 0x07
  16:	26 83       	std	Z+6, r18	; 0x06
  18:	62 81       	ldd	r22, Z+2	; 0x02
  1a:	73 81       	ldd	r23, Z+3	; 0x03
  1c:	26 17       	cp	r18, r22
  1e:	37 07       	cpc	r19, r23
  20:	00 f0       	brcs	.+0      	; 0x22 <prvCopyDataFromQueue+0x22>
  22:	20 81       	ld	r18, Z
  24:	31 81       	ldd	r19, Z+1	; 0x01
  26:	37 83       	std	Z+7, r19	; 0x07
  28:	26 83       	std	Z+6, r18	; 0x06
  2a:	66 81       	ldd	r22, Z+6	; 0x06
  2c:	77 81       	ldd	r23, Z+7	; 0x07
  2e:	0c 94 00 00 	jmp	0	; 0x0 <prvCopyDataFromQueue>
  32:	08 95       	ret

Disassembly of section .text.prvUnlockQueue:

00000000 <prvUnlockQueue>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	0f 92       	push	r0
  10:	8c 01       	movw	r16, r24
  12:	0d 5e       	subi	r16, 0xED	; 237
  14:	1f 4f       	sbci	r17, 0xFF	; 255
  16:	9a a1       	ldd	r25, Y+34	; 0x22
  18:	19 16       	cp	r1, r25
  1a:	04 f4       	brge	.+0      	; 0x1c <prvUnlockQueue+0x1c>
  1c:	8b 89       	ldd	r24, Y+19	; 0x13
  1e:	88 23       	and	r24, r24
  20:	01 f0       	breq	.+0      	; 0x22 <prvUnlockQueue+0x22>
  22:	c8 01       	movw	r24, r16
  24:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  28:	81 11       	cpse	r24, r1
  2a:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  2e:	9a a1       	ldd	r25, Y+34	; 0x22
  30:	91 50       	subi	r25, 0x01	; 1
  32:	9a a3       	std	Y+34, r25	; 0x22
  34:	00 c0       	rjmp	.+0      	; 0x36 <prvUnlockQueue+0x36>
  36:	8f ef       	ldi	r24, 0xFF	; 255
  38:	8a a3       	std	Y+34, r24	; 0x22
  3a:	0f 90       	pop	r0
  3c:	0f be       	out	0x3f, r0	; 63
  3e:	0f b6       	in	r0, 0x3f	; 63
  40:	f8 94       	cli
  42:	0f 92       	push	r0
  44:	8e 01       	movw	r16, r28
  46:	08 5f       	subi	r16, 0xF8	; 248
  48:	1f 4f       	sbci	r17, 0xFF	; 255
  4a:	99 a1       	ldd	r25, Y+33	; 0x21
  4c:	19 16       	cp	r1, r25
  4e:	04 f4       	brge	.+0      	; 0x50 <prvUnlockQueue+0x50>
  50:	88 85       	ldd	r24, Y+8	; 0x08
  52:	88 23       	and	r24, r24
  54:	01 f0       	breq	.+0      	; 0x56 <prvUnlockQueue+0x56>
  56:	c8 01       	movw	r24, r16
  58:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  5c:	81 11       	cpse	r24, r1
  5e:	0e 94 00 00 	call	0	; 0x0 <prvUnlockQueue>
  62:	99 a1       	ldd	r25, Y+33	; 0x21
  64:	91 50       	subi	r25, 0x01	; 1
  66:	99 a3       	std	Y+33, r25	; 0x21
  68:	00 c0       	rjmp	.+0      	; 0x6a <prvUnlockQueue+0x6a>
  6a:	8f ef       	ldi	r24, 0xFF	; 255
  6c:	89 a3       	std	Y+33, r24	; 0x21
  6e:	0f 90       	pop	r0
  70:	0f be       	out	0x3f, r0	; 63
  72:	df 91       	pop	r29
  74:	cf 91       	pop	r28
  76:	1f 91       	pop	r17
  78:	0f 91       	pop	r16
  7a:	08 95       	ret

Disassembly of section .text.xQueueGenericReset:

00000000 <xQueueGenericReset>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	0f b6       	in	r0, 0x3f	; 63
   8:	f8 94       	cli
   a:	0f 92       	push	r0
   c:	28 81       	ld	r18, Y
   e:	39 81       	ldd	r19, Y+1	; 0x01
  10:	9f 8d       	ldd	r25, Y+31	; 0x1f
  12:	48 a1       	ldd	r20, Y+32	; 0x20
  14:	94 9f       	mul	r25, r20
  16:	c0 01       	movw	r24, r0
  18:	11 24       	eor	r1, r1
  1a:	f9 01       	movw	r30, r18
  1c:	e8 0f       	add	r30, r24
  1e:	f9 1f       	adc	r31, r25
  20:	fb 83       	std	Y+3, r31	; 0x03
  22:	ea 83       	std	Y+2, r30	; 0x02
  24:	1e 8e       	std	Y+30, r1	; 0x1e
  26:	3d 83       	std	Y+5, r19	; 0x05
  28:	2c 83       	std	Y+4, r18	; 0x04
  2a:	84 1b       	sub	r24, r20
  2c:	91 09       	sbc	r25, r1
  2e:	82 0f       	add	r24, r18
  30:	93 1f       	adc	r25, r19
  32:	9f 83       	std	Y+7, r25	; 0x07
  34:	8e 83       	std	Y+6, r24	; 0x06
  36:	8f ef       	ldi	r24, 0xFF	; 255
  38:	89 a3       	std	Y+33, r24	; 0x21
  3a:	8a a3       	std	Y+34, r24	; 0x22
  3c:	61 11       	cpse	r22, r1
  3e:	00 c0       	rjmp	.+0      	; 0x40 <xQueueGenericReset+0x40>
  40:	88 85       	ldd	r24, Y+8	; 0x08
  42:	88 23       	and	r24, r24
  44:	01 f0       	breq	.+0      	; 0x46 <xQueueGenericReset+0x46>
  46:	ce 01       	movw	r24, r28
  48:	08 96       	adiw	r24, 0x08	; 8
  4a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  4e:	81 30       	cpi	r24, 0x01	; 1
  50:	01 f4       	brne	.+0      	; 0x52 <xQueueGenericReset+0x52>
  52:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  56:	00 c0       	rjmp	.+0      	; 0x58 <xQueueGenericReset+0x58>
  58:	ce 01       	movw	r24, r28
  5a:	08 96       	adiw	r24, 0x08	; 8
  5c:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  60:	ce 01       	movw	r24, r28
  62:	43 96       	adiw	r24, 0x13	; 19
  64:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReset>
  68:	0f 90       	pop	r0
  6a:	0f be       	out	0x3f, r0	; 63
  6c:	81 e0       	ldi	r24, 0x01	; 1
  6e:	df 91       	pop	r29
  70:	cf 91       	pop	r28
  72:	08 95       	ret

Disassembly of section .text.xQueueGenericCreate:

00000000 <xQueueGenericCreate>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	1f 93       	push	r17
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
   a:	1f 92       	push	r1
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	18 2f       	mov	r17, r24
  12:	66 23       	and	r22, r22
  14:	01 f0       	breq	.+0      	; 0x16 <xQueueGenericCreate+0x16>
  16:	86 9f       	mul	r24, r22
  18:	90 01       	movw	r18, r0
  1a:	11 24       	eor	r1, r1
  1c:	c9 01       	movw	r24, r18
  1e:	01 96       	adiw	r24, 0x01	; 1
  20:	00 c0       	rjmp	.+0      	; 0x22 <xQueueGenericCreate+0x22>
  22:	80 e0       	ldi	r24, 0x00	; 0
  24:	90 e0       	ldi	r25, 0x00	; 0
  26:	83 96       	adiw	r24, 0x23	; 35
  28:	69 83       	std	Y+1, r22	; 0x01
  2a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericCreate>
  2e:	7c 01       	movw	r14, r24
  30:	69 81       	ldd	r22, Y+1	; 0x01
  32:	00 97       	sbiw	r24, 0x00	; 0
  34:	01 f0       	breq	.+0      	; 0x36 <xQueueGenericCreate+0x36>
  36:	61 11       	cpse	r22, r1
  38:	00 c0       	rjmp	.+0      	; 0x3a <xQueueGenericCreate+0x3a>
  3a:	fc 01       	movw	r30, r24
  3c:	91 83       	std	Z+1, r25	; 0x01
  3e:	80 83       	st	Z, r24
  40:	00 c0       	rjmp	.+0      	; 0x42 <xQueueGenericCreate+0x42>
  42:	83 96       	adiw	r24, 0x23	; 35
  44:	f7 01       	movw	r30, r14
  46:	91 83       	std	Z+1, r25	; 0x01
  48:	80 83       	st	Z, r24
  4a:	f7 01       	movw	r30, r14
  4c:	17 8f       	std	Z+31, r17	; 0x1f
  4e:	60 a3       	std	Z+32, r22	; 0x20
  50:	61 e0       	ldi	r22, 0x01	; 1
  52:	c7 01       	movw	r24, r14
  54:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericCreate>
  58:	c7 01       	movw	r24, r14
  5a:	0f 90       	pop	r0
  5c:	df 91       	pop	r29
  5e:	cf 91       	pop	r28
  60:	1f 91       	pop	r17
  62:	ff 90       	pop	r15
  64:	ef 90       	pop	r14
  66:	08 95       	ret

Disassembly of section .text.xQueueCreateCountingSemaphore:

00000000 <xQueueCreateCountingSemaphore>:
   0:	cf 93       	push	r28
   2:	c6 2f       	mov	r28, r22
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	60 e0       	ldi	r22, 0x00	; 0
   8:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateCountingSemaphore>
   c:	00 97       	sbiw	r24, 0x00	; 0
   e:	01 f0       	breq	.+0      	; 0x10 <xQueueCreateCountingSemaphore+0x10>
  10:	fc 01       	movw	r30, r24
  12:	c6 8f       	std	Z+30, r28	; 0x1e
  14:	cf 91       	pop	r28
  16:	08 95       	ret

Disassembly of section .text.xQueueGenericSend:

00000000 <xQueueGenericSend>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	cd b7       	in	r28, 0x3d	; 61
  14:	de b7       	in	r29, 0x3e	; 62
  16:	29 97       	sbiw	r28, 0x09	; 9
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	de bf       	out	0x3e, r29	; 62
  1e:	0f be       	out	0x3f, r0	; 63
  20:	cd bf       	out	0x3d, r28	; 61
  22:	7c 01       	movw	r14, r24
  24:	6b 01       	movw	r12, r22
  26:	2e 83       	std	Y+6, r18	; 0x06
  28:	3f 83       	std	Y+7, r19	; 0x07
  2a:	48 87       	std	Y+8, r20	; 0x08
  2c:	59 87       	std	Y+9, r21	; 0x09
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	57 01       	movw	r10, r14
  32:	88 e0       	ldi	r24, 0x08	; 8
  34:	a8 0e       	add	r10, r24
  36:	b1 1c       	adc	r11, r1
  38:	0f b6       	in	r0, 0x3f	; 63
  3a:	f8 94       	cli
  3c:	0f 92       	push	r0
  3e:	f7 01       	movw	r30, r14
  40:	26 8d       	ldd	r18, Z+30	; 0x1e
  42:	87 8d       	ldd	r24, Z+31	; 0x1f
  44:	28 17       	cp	r18, r24
  46:	00 f0       	brcs	.+0      	; 0x48 <xQueueGenericSend+0x48>
  48:	02 30       	cpi	r16, 0x02	; 2
  4a:	01 f4       	brne	.+0      	; 0x4c <xQueueGenericSend+0x4c>
  4c:	40 2f       	mov	r20, r16
  4e:	b6 01       	movw	r22, r12
  50:	c7 01       	movw	r24, r14
  52:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  56:	f7 01       	movw	r30, r14
  58:	93 89       	ldd	r25, Z+19	; 0x13
  5a:	99 23       	and	r25, r25
  5c:	01 f0       	breq	.+0      	; 0x5e <xQueueGenericSend+0x5e>
  5e:	c7 01       	movw	r24, r14
  60:	43 96       	adiw	r24, 0x13	; 19
  62:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  66:	81 30       	cpi	r24, 0x01	; 1
  68:	01 f4       	brne	.+0      	; 0x6a <xQueueGenericSend+0x6a>
  6a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  6e:	00 c0       	rjmp	.+0      	; 0x70 <xQueueGenericSend+0x70>
  70:	81 11       	cpse	r24, r1
  72:	00 c0       	rjmp	.+0      	; 0x74 <xQueueGenericSend+0x74>
  74:	0f 90       	pop	r0
  76:	0f be       	out	0x3f, r0	; 63
  78:	81 e0       	ldi	r24, 0x01	; 1
  7a:	00 c0       	rjmp	.+0      	; 0x7c <xQueueGenericSend+0x7c>
  7c:	4e 81       	ldd	r20, Y+6	; 0x06
  7e:	5f 81       	ldd	r21, Y+7	; 0x07
  80:	68 85       	ldd	r22, Y+8	; 0x08
  82:	79 85       	ldd	r23, Y+9	; 0x09
  84:	45 2b       	or	r20, r21
  86:	46 2b       	or	r20, r22
  88:	47 2b       	or	r20, r23
  8a:	01 f4       	brne	.+0      	; 0x8c <xQueueGenericSend+0x8c>
  8c:	0f 90       	pop	r0
  8e:	0f be       	out	0x3f, r0	; 63
  90:	00 c0       	rjmp	.+0      	; 0x92 <xQueueGenericSend+0x92>
  92:	91 11       	cpse	r25, r1
  94:	00 c0       	rjmp	.+0      	; 0x96 <xQueueGenericSend+0x96>
  96:	ce 01       	movw	r24, r28
  98:	01 96       	adiw	r24, 0x01	; 1
  9a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  9e:	0f 90       	pop	r0
  a0:	0f be       	out	0x3f, r0	; 63
  a2:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	f8 94       	cli
  aa:	0f 92       	push	r0
  ac:	f7 01       	movw	r30, r14
  ae:	81 a1       	ldd	r24, Z+33	; 0x21
  b0:	8f 3f       	cpi	r24, 0xFF	; 255
  b2:	01 f4       	brne	.+0      	; 0xb4 <xQueueGenericSend+0xb4>
  b4:	11 a2       	std	Z+33, r1	; 0x21
  b6:	f7 01       	movw	r30, r14
  b8:	82 a1       	ldd	r24, Z+34	; 0x22
  ba:	8f 3f       	cpi	r24, 0xFF	; 255
  bc:	01 f4       	brne	.+0      	; 0xbe <xQueueGenericSend+0xbe>
  be:	12 a2       	std	Z+34, r1	; 0x22
  c0:	0f 90       	pop	r0
  c2:	0f be       	out	0x3f, r0	; 63
  c4:	be 01       	movw	r22, r28
  c6:	6a 5f       	subi	r22, 0xFA	; 250
  c8:	7f 4f       	sbci	r23, 0xFF	; 255
  ca:	ce 01       	movw	r24, r28
  cc:	01 96       	adiw	r24, 0x01	; 1
  ce:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  d2:	81 11       	cpse	r24, r1
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <xQueueGenericSend+0xd6>
  d6:	0f b6       	in	r0, 0x3f	; 63
  d8:	f8 94       	cli
  da:	0f 92       	push	r0
  dc:	f7 01       	movw	r30, r14
  de:	96 8d       	ldd	r25, Z+30	; 0x1e
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	87 8d       	ldd	r24, Z+31	; 0x1f
  e6:	98 13       	cpse	r25, r24
  e8:	00 c0       	rjmp	.+0      	; 0xea <xQueueGenericSend+0xea>
  ea:	4e 81       	ldd	r20, Y+6	; 0x06
  ec:	5f 81       	ldd	r21, Y+7	; 0x07
  ee:	68 85       	ldd	r22, Y+8	; 0x08
  f0:	79 85       	ldd	r23, Y+9	; 0x09
  f2:	c5 01       	movw	r24, r10
  f4:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  f8:	c7 01       	movw	r24, r14
  fa:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
  fe:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 102:	88 23       	and	r24, r24
 104:	01 f0       	breq	.+0      	; 0x106 <xQueueGenericSend+0x106>
 106:	91 e0       	ldi	r25, 0x01	; 1
 108:	00 c0       	rjmp	.+0      	; 0x10a <xQueueGenericSend+0x10a>
 10a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <xQueueGenericSend+0x110>
 110:	c7 01       	movw	r24, r14
 112:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 116:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <xQueueGenericSend+0x11c>
 11c:	c7 01       	movw	r24, r14
 11e:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 122:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSend>
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	29 96       	adiw	r28, 0x09	; 9
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	f8 94       	cli
 12e:	de bf       	out	0x3e, r29	; 62
 130:	0f be       	out	0x3f, r0	; 63
 132:	cd bf       	out	0x3d, r28	; 61
 134:	df 91       	pop	r29
 136:	cf 91       	pop	r28
 138:	0f 91       	pop	r16
 13a:	ff 90       	pop	r15
 13c:	ef 90       	pop	r14
 13e:	df 90       	pop	r13
 140:	cf 90       	pop	r12
 142:	bf 90       	pop	r11
 144:	af 90       	pop	r10
 146:	08 95       	ret

Disassembly of section .text.xQueueCreateMutex:

00000000 <xQueueCreateMutex>:
   0:	0f 93       	push	r16
   2:	cf 93       	push	r28
   4:	df 93       	push	r29
   6:	83 e2       	ldi	r24, 0x23	; 35
   8:	90 e0       	ldi	r25, 0x00	; 0
   a:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
   e:	ec 01       	movw	r28, r24
  10:	89 2b       	or	r24, r25
  12:	01 f0       	breq	.+0      	; 0x14 <xQueueCreateMutex+0x14>
  14:	1b 82       	std	Y+3, r1	; 0x03
  16:	1a 82       	std	Y+2, r1	; 0x02
  18:	19 82       	std	Y+1, r1	; 0x01
  1a:	18 82       	st	Y, r1
  1c:	1d 82       	std	Y+5, r1	; 0x05
  1e:	1c 82       	std	Y+4, r1	; 0x04
  20:	1f 82       	std	Y+7, r1	; 0x07
  22:	1e 82       	std	Y+6, r1	; 0x06
  24:	1e 8e       	std	Y+30, r1	; 0x1e
  26:	81 e0       	ldi	r24, 0x01	; 1
  28:	8f 8f       	std	Y+31, r24	; 0x1f
  2a:	18 a2       	std	Y+32, r1	; 0x20
  2c:	8f ef       	ldi	r24, 0xFF	; 255
  2e:	89 a3       	std	Y+33, r24	; 0x21
  30:	8a a3       	std	Y+34, r24	; 0x22
  32:	ce 01       	movw	r24, r28
  34:	08 96       	adiw	r24, 0x08	; 8
  36:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
  3a:	ce 01       	movw	r24, r28
  3c:	43 96       	adiw	r24, 0x13	; 19
  3e:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
  42:	00 e0       	ldi	r16, 0x00	; 0
  44:	20 e0       	ldi	r18, 0x00	; 0
  46:	30 e0       	ldi	r19, 0x00	; 0
  48:	a9 01       	movw	r20, r18
  4a:	60 e0       	ldi	r22, 0x00	; 0
  4c:	70 e0       	ldi	r23, 0x00	; 0
  4e:	ce 01       	movw	r24, r28
  50:	0e 94 00 00 	call	0	; 0x0 <xQueueCreateMutex>
  54:	ce 01       	movw	r24, r28
  56:	df 91       	pop	r29
  58:	cf 91       	pop	r28
  5a:	0f 91       	pop	r16
  5c:	08 95       	ret

Disassembly of section .text.xQueueGenericSendFromISR:

00000000 <xQueueGenericSendFromISR>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	9e 8d       	ldd	r25, Y+30	; 0x1e
   c:	8f 8d       	ldd	r24, Y+31	; 0x1f
   e:	98 17       	cp	r25, r24
  10:	00 f0       	brcs	.+0      	; 0x12 <xQueueGenericSendFromISR+0x12>
  12:	22 30       	cpi	r18, 0x02	; 2
  14:	01 f4       	brne	.+0      	; 0x16 <xQueueGenericSendFromISR+0x16>
  16:	8a 01       	movw	r16, r20
  18:	42 2f       	mov	r20, r18
  1a:	ce 01       	movw	r24, r28
  1c:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSendFromISR>
  20:	8a a1       	ldd	r24, Y+34	; 0x22
  22:	8f 3f       	cpi	r24, 0xFF	; 255
  24:	01 f4       	brne	.+0      	; 0x26 <xQueueGenericSendFromISR+0x26>
  26:	8b 89       	ldd	r24, Y+19	; 0x13
  28:	88 23       	and	r24, r24
  2a:	01 f0       	breq	.+0      	; 0x2c <xQueueGenericSendFromISR+0x2c>
  2c:	ce 01       	movw	r24, r28
  2e:	43 96       	adiw	r24, 0x13	; 19
  30:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericSendFromISR>
  34:	88 23       	and	r24, r24
  36:	01 f0       	breq	.+0      	; 0x38 <xQueueGenericSendFromISR+0x38>
  38:	01 15       	cp	r16, r1
  3a:	11 05       	cpc	r17, r1
  3c:	01 f0       	breq	.+0      	; 0x3e <xQueueGenericSendFromISR+0x3e>
  3e:	81 e0       	ldi	r24, 0x01	; 1
  40:	f8 01       	movw	r30, r16
  42:	80 83       	st	Z, r24
  44:	00 c0       	rjmp	.+0      	; 0x46 <xQueueGenericSendFromISR+0x46>
  46:	8a a1       	ldd	r24, Y+34	; 0x22
  48:	8f 5f       	subi	r24, 0xFF	; 255
  4a:	8a a3       	std	Y+34, r24	; 0x22
  4c:	81 e0       	ldi	r24, 0x01	; 1
  4e:	00 c0       	rjmp	.+0      	; 0x50 <xQueueGenericSendFromISR+0x50>
  50:	80 e0       	ldi	r24, 0x00	; 0
  52:	df 91       	pop	r29
  54:	cf 91       	pop	r28
  56:	1f 91       	pop	r17
  58:	0f 91       	pop	r16
  5a:	08 95       	ret

Disassembly of section .text.xQueueGiveFromISR:

00000000 <xQueueGiveFromISR>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	fc 01       	movw	r30, r24
   6:	96 8d       	ldd	r25, Z+30	; 0x1e
   8:	87 8d       	ldd	r24, Z+31	; 0x1f
   a:	98 17       	cp	r25, r24
   c:	00 f4       	brcc	.+0      	; 0xe <xQueueGiveFromISR+0xe>
   e:	86 8d       	ldd	r24, Z+30	; 0x1e
  10:	8f 5f       	subi	r24, 0xFF	; 255
  12:	86 8f       	std	Z+30, r24	; 0x1e
  14:	82 a1       	ldd	r24, Z+34	; 0x22
  16:	8f 3f       	cpi	r24, 0xFF	; 255
  18:	01 f4       	brne	.+0      	; 0x1a <xQueueGiveFromISR+0x1a>
  1a:	83 89       	ldd	r24, Z+19	; 0x13
  1c:	88 23       	and	r24, r24
  1e:	01 f0       	breq	.+0      	; 0x20 <xQueueGiveFromISR+0x20>
  20:	eb 01       	movw	r28, r22
  22:	cf 01       	movw	r24, r30
  24:	43 96       	adiw	r24, 0x13	; 19
  26:	0e 94 00 00 	call	0	; 0x0 <xQueueGiveFromISR>
  2a:	88 23       	and	r24, r24
  2c:	01 f0       	breq	.+0      	; 0x2e <xQueueGiveFromISR+0x2e>
  2e:	20 97       	sbiw	r28, 0x00	; 0
  30:	01 f0       	breq	.+0      	; 0x32 <xQueueGiveFromISR+0x32>
  32:	81 e0       	ldi	r24, 0x01	; 1
  34:	88 83       	st	Y, r24
  36:	00 c0       	rjmp	.+0      	; 0x38 <xQueueGiveFromISR+0x38>
  38:	82 a1       	ldd	r24, Z+34	; 0x22
  3a:	8f 5f       	subi	r24, 0xFF	; 255
  3c:	82 a3       	std	Z+34, r24	; 0x22
  3e:	81 e0       	ldi	r24, 0x01	; 1
  40:	00 c0       	rjmp	.+0      	; 0x42 <xQueueGiveFromISR+0x42>
  42:	80 e0       	ldi	r24, 0x00	; 0
  44:	df 91       	pop	r29
  46:	cf 91       	pop	r28
  48:	08 95       	ret

Disassembly of section .text.xQueueGenericReceive:

00000000 <xQueueGenericReceive>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	cf 93       	push	r28
  10:	df 93       	push	r29
  12:	cd b7       	in	r28, 0x3d	; 61
  14:	de b7       	in	r29, 0x3e	; 62
  16:	29 97       	sbiw	r28, 0x09	; 9
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	de bf       	out	0x3e, r29	; 62
  1e:	0f be       	out	0x3f, r0	; 63
  20:	cd bf       	out	0x3d, r28	; 61
  22:	7c 01       	movw	r14, r24
  24:	6b 01       	movw	r12, r22
  26:	2e 83       	std	Y+6, r18	; 0x06
  28:	3f 83       	std	Y+7, r19	; 0x07
  2a:	48 87       	std	Y+8, r20	; 0x08
  2c:	59 87       	std	Y+9, r21	; 0x09
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	57 01       	movw	r10, r14
  32:	83 e1       	ldi	r24, 0x13	; 19
  34:	a8 0e       	add	r10, r24
  36:	b1 1c       	adc	r11, r1
  38:	0f b6       	in	r0, 0x3f	; 63
  3a:	f8 94       	cli
  3c:	0f 92       	push	r0
  3e:	f7 01       	movw	r30, r14
  40:	86 8d       	ldd	r24, Z+30	; 0x1e
  42:	88 23       	and	r24, r24
  44:	01 f0       	breq	.+0      	; 0x46 <xQueueGenericReceive+0x46>
  46:	a6 80       	ldd	r10, Z+6	; 0x06
  48:	b7 80       	ldd	r11, Z+7	; 0x07
  4a:	b6 01       	movw	r22, r12
  4c:	c7 01       	movw	r24, r14
  4e:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  52:	f7 01       	movw	r30, r14
  54:	01 11       	cpse	r16, r1
  56:	00 c0       	rjmp	.+0      	; 0x58 <xQueueGenericReceive+0x58>
  58:	86 8d       	ldd	r24, Z+30	; 0x1e
  5a:	81 50       	subi	r24, 0x01	; 1
  5c:	86 8f       	std	Z+30, r24	; 0x1e
  5e:	80 81       	ld	r24, Z
  60:	91 81       	ldd	r25, Z+1	; 0x01
  62:	89 2b       	or	r24, r25
  64:	01 f4       	brne	.+0      	; 0x66 <xQueueGenericReceive+0x66>
  66:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  6a:	f7 01       	movw	r30, r14
  6c:	93 83       	std	Z+3, r25	; 0x03
  6e:	82 83       	std	Z+2, r24	; 0x02
  70:	f7 01       	movw	r30, r14
  72:	80 85       	ldd	r24, Z+8	; 0x08
  74:	88 23       	and	r24, r24
  76:	01 f0       	breq	.+0      	; 0x78 <xQueueGenericReceive+0x78>
  78:	c7 01       	movw	r24, r14
  7a:	08 96       	adiw	r24, 0x08	; 8
  7c:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  80:	81 30       	cpi	r24, 0x01	; 1
  82:	01 f4       	brne	.+0      	; 0x84 <xQueueGenericReceive+0x84>
  84:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  88:	00 c0       	rjmp	.+0      	; 0x8a <xQueueGenericReceive+0x8a>
  8a:	b7 82       	std	Z+7, r11	; 0x07
  8c:	a6 82       	std	Z+6, r10	; 0x06
  8e:	83 89       	ldd	r24, Z+19	; 0x13
  90:	88 23       	and	r24, r24
  92:	01 f0       	breq	.+0      	; 0x94 <xQueueGenericReceive+0x94>
  94:	c7 01       	movw	r24, r14
  96:	43 96       	adiw	r24, 0x13	; 19
  98:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  9c:	81 11       	cpse	r24, r1
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <xQueueGenericReceive+0xa0>
  a0:	0f 90       	pop	r0
  a2:	0f be       	out	0x3f, r0	; 63
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <xQueueGenericReceive+0xa8>
  a8:	4e 81       	ldd	r20, Y+6	; 0x06
  aa:	5f 81       	ldd	r21, Y+7	; 0x07
  ac:	68 85       	ldd	r22, Y+8	; 0x08
  ae:	79 85       	ldd	r23, Y+9	; 0x09
  b0:	45 2b       	or	r20, r21
  b2:	46 2b       	or	r20, r22
  b4:	47 2b       	or	r20, r23
  b6:	01 f4       	brne	.+0      	; 0xb8 <xQueueGenericReceive+0xb8>
  b8:	0f 90       	pop	r0
  ba:	0f be       	out	0x3f, r0	; 63
  bc:	00 c0       	rjmp	.+0      	; 0xbe <xQueueGenericReceive+0xbe>
  be:	91 11       	cpse	r25, r1
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <xQueueGenericReceive+0xc2>
  c2:	ce 01       	movw	r24, r28
  c4:	01 96       	adiw	r24, 0x01	; 1
  c6:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  ca:	0f 90       	pop	r0
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	f8 94       	cli
  d6:	0f 92       	push	r0
  d8:	f7 01       	movw	r30, r14
  da:	81 a1       	ldd	r24, Z+33	; 0x21
  dc:	8f 3f       	cpi	r24, 0xFF	; 255
  de:	01 f4       	brne	.+0      	; 0xe0 <xQueueGenericReceive+0xe0>
  e0:	11 a2       	std	Z+33, r1	; 0x21
  e2:	f7 01       	movw	r30, r14
  e4:	82 a1       	ldd	r24, Z+34	; 0x22
  e6:	8f 3f       	cpi	r24, 0xFF	; 255
  e8:	01 f4       	brne	.+0      	; 0xea <xQueueGenericReceive+0xea>
  ea:	12 a2       	std	Z+34, r1	; 0x22
  ec:	0f 90       	pop	r0
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	be 01       	movw	r22, r28
  f2:	6a 5f       	subi	r22, 0xFA	; 250
  f4:	7f 4f       	sbci	r23, 0xFF	; 255
  f6:	ce 01       	movw	r24, r28
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
  fe:	81 11       	cpse	r24, r1
 100:	00 c0       	rjmp	.+0      	; 0x102 <xQueueGenericReceive+0x102>
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	f8 94       	cli
 106:	0f 92       	push	r0
 108:	f7 01       	movw	r30, r14
 10a:	86 8d       	ldd	r24, Z+30	; 0x1e
 10c:	0f 90       	pop	r0
 10e:	0f be       	out	0x3f, r0	; 63
 110:	81 11       	cpse	r24, r1
 112:	00 c0       	rjmp	.+0      	; 0x114 <xQueueGenericReceive+0x114>
 114:	80 81       	ld	r24, Z
 116:	91 81       	ldd	r25, Z+1	; 0x01
 118:	89 2b       	or	r24, r25
 11a:	01 f4       	brne	.+0      	; 0x11c <xQueueGenericReceive+0x11c>
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	0f 92       	push	r0
 122:	82 81       	ldd	r24, Z+2	; 0x02
 124:	93 81       	ldd	r25, Z+3	; 0x03
 126:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 12a:	0f 90       	pop	r0
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	4e 81       	ldd	r20, Y+6	; 0x06
 130:	5f 81       	ldd	r21, Y+7	; 0x07
 132:	68 85       	ldd	r22, Y+8	; 0x08
 134:	79 85       	ldd	r23, Y+9	; 0x09
 136:	c5 01       	movw	r24, r10
 138:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 13c:	c7 01       	movw	r24, r14
 13e:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 142:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 146:	88 23       	and	r24, r24
 148:	01 f0       	breq	.+0      	; 0x14a <xQueueGenericReceive+0x14a>
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	00 c0       	rjmp	.+0      	; 0x14e <xQueueGenericReceive+0x14e>
 14e:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 152:	00 c0       	rjmp	.+0      	; 0x154 <xQueueGenericReceive+0x154>
 154:	c7 01       	movw	r24, r14
 156:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 15a:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <xQueueGenericReceive+0x160>
 160:	c7 01       	movw	r24, r14
 162:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 166:	0e 94 00 00 	call	0	; 0x0 <xQueueGenericReceive>
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	29 96       	adiw	r28, 0x09	; 9
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	f8 94       	cli
 172:	de bf       	out	0x3e, r29	; 62
 174:	0f be       	out	0x3f, r0	; 63
 176:	cd bf       	out	0x3d, r28	; 61
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	0f 91       	pop	r16
 17e:	ff 90       	pop	r15
 180:	ef 90       	pop	r14
 182:	df 90       	pop	r13
 184:	cf 90       	pop	r12
 186:	bf 90       	pop	r11
 188:	af 90       	pop	r10
 18a:	08 95       	ret

Disassembly of section .text.xQueueReceiveFromISR:

00000000 <xQueueReceiveFromISR>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	fc 01       	movw	r30, r24
   a:	26 8d       	ldd	r18, Z+30	; 0x1e
   c:	22 23       	and	r18, r18
   e:	01 f0       	breq	.+0      	; 0x10 <xQueueReceiveFromISR+0x10>
  10:	8a 01       	movw	r16, r20
  12:	ec 01       	movw	r28, r24
  14:	0e 94 00 00 	call	0	; 0x0 <xQueueReceiveFromISR>
  18:	8e 8d       	ldd	r24, Y+30	; 0x1e
  1a:	81 50       	subi	r24, 0x01	; 1
  1c:	8e 8f       	std	Y+30, r24	; 0x1e
  1e:	89 a1       	ldd	r24, Y+33	; 0x21
  20:	8f 3f       	cpi	r24, 0xFF	; 255
  22:	01 f4       	brne	.+0      	; 0x24 <xQueueReceiveFromISR+0x24>
  24:	88 85       	ldd	r24, Y+8	; 0x08
  26:	88 23       	and	r24, r24
  28:	01 f0       	breq	.+0      	; 0x2a <xQueueReceiveFromISR+0x2a>
  2a:	ce 01       	movw	r24, r28
  2c:	08 96       	adiw	r24, 0x08	; 8
  2e:	0e 94 00 00 	call	0	; 0x0 <xQueueReceiveFromISR>
  32:	88 23       	and	r24, r24
  34:	01 f0       	breq	.+0      	; 0x36 <xQueueReceiveFromISR+0x36>
  36:	01 15       	cp	r16, r1
  38:	11 05       	cpc	r17, r1
  3a:	01 f0       	breq	.+0      	; 0x3c <xQueueReceiveFromISR+0x3c>
  3c:	81 e0       	ldi	r24, 0x01	; 1
  3e:	f8 01       	movw	r30, r16
  40:	80 83       	st	Z, r24
  42:	00 c0       	rjmp	.+0      	; 0x44 <xQueueReceiveFromISR+0x44>
  44:	89 a1       	ldd	r24, Y+33	; 0x21
  46:	8f 5f       	subi	r24, 0xFF	; 255
  48:	89 a3       	std	Y+33, r24	; 0x21
  4a:	81 e0       	ldi	r24, 0x01	; 1
  4c:	00 c0       	rjmp	.+0      	; 0x4e <xQueueReceiveFromISR+0x4e>
  4e:	80 e0       	ldi	r24, 0x00	; 0
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
  56:	0f 91       	pop	r16
  58:	08 95       	ret

Disassembly of section .text.xQueuePeekFromISR:

00000000 <xQueuePeekFromISR>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	fc 01       	movw	r30, r24
   a:	26 8d       	ldd	r18, Z+30	; 0x1e
   c:	22 23       	and	r18, r18
   e:	01 f0       	breq	.+0      	; 0x10 <xQueuePeekFromISR+0x10>
  10:	ec 01       	movw	r28, r24
  12:	06 81       	ldd	r16, Z+6	; 0x06
  14:	17 81       	ldd	r17, Z+7	; 0x07
  16:	0e 94 00 00 	call	0	; 0x0 <xQueuePeekFromISR>
  1a:	1f 83       	std	Y+7, r17	; 0x07
  1c:	0e 83       	std	Y+6, r16	; 0x06
  1e:	81 e0       	ldi	r24, 0x01	; 1
  20:	00 c0       	rjmp	.+0      	; 0x22 <xQueuePeekFromISR+0x22>
  22:	80 e0       	ldi	r24, 0x00	; 0
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	1f 91       	pop	r17
  2a:	0f 91       	pop	r16
  2c:	08 95       	ret

Disassembly of section .text.uxQueueMessagesWaiting:

00000000 <uxQueueMessagesWaiting>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	0f 92       	push	r0
   6:	fc 01       	movw	r30, r24
   8:	86 8d       	ldd	r24, Z+30	; 0x1e
   a:	0f 90       	pop	r0
   c:	0f be       	out	0x3f, r0	; 63
   e:	08 95       	ret

Disassembly of section .text.uxQueueSpacesAvailable:

00000000 <uxQueueSpacesAvailable>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	0f 92       	push	r0
   6:	fc 01       	movw	r30, r24
   8:	26 8d       	ldd	r18, Z+30	; 0x1e
   a:	0f 90       	pop	r0
   c:	0f be       	out	0x3f, r0	; 63
   e:	87 8d       	ldd	r24, Z+31	; 0x1f
  10:	82 1b       	sub	r24, r18
  12:	08 95       	ret

Disassembly of section .text.uxQueueMessagesWaitingFromISR:

00000000 <uxQueueMessagesWaitingFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	86 8d       	ldd	r24, Z+30	; 0x1e
   4:	08 95       	ret

Disassembly of section .text.vQueueDelete:

00000000 <vQueueDelete>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <vQueueDelete>

Disassembly of section .text.xQueueIsQueueEmptyFromISR:

00000000 <xQueueIsQueueEmptyFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	96 8d       	ldd	r25, Z+30	; 0x1e
   4:	81 e0       	ldi	r24, 0x01	; 1
   6:	91 11       	cpse	r25, r1
   8:	80 e0       	ldi	r24, 0x00	; 0
   a:	08 95       	ret

Disassembly of section .text.xQueueIsQueueFullFromISR:

00000000 <xQueueIsQueueFullFromISR>:
   0:	fc 01       	movw	r30, r24
   2:	26 8d       	ldd	r18, Z+30	; 0x1e
   4:	81 e0       	ldi	r24, 0x01	; 1
   6:	97 8d       	ldd	r25, Z+31	; 0x1f
   8:	29 13       	cpse	r18, r25
   a:	80 e0       	ldi	r24, 0x00	; 0
   c:	08 95       	ret

tasks.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.prvResetNextTaskUnblockTime 00000044  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.prvAddCurrentTaskToDelayedList 000000a2  00000000  00000000  00000078  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.xTaskGenericCreate 00000202  00000000  00000000  0000011a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.vTaskDelete 0000008e  00000000  00000000  0000031c  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.uxTaskPriorityGet 0000001c  00000000  00000000  000003aa  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  8 .text.uxTaskPriorityGetFromISR 00000012  00000000  00000000  000003c6  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  9 .text.vTaskPrioritySet 00000102  00000000  00000000  000003d8  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 10 .rodata.str1.1 00000005  00000000  00000000  000004da  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .text.vTaskStartScheduler 00000082  00000000  00000000  000004df  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 12 .text.vTaskEndScheduler 0000000a  00000000  00000000  00000561  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 13 .text.vTaskSuspendAll 0000000c  00000000  00000000  0000056b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 14 .text.xTaskGetTickCount 0000001c  00000000  00000000  00000577  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 15 .text.xTaskGetTickCountFromISR 00000012  00000000  00000000  00000593  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 16 .text.uxTaskGetNumberOfTasks 00000006  00000000  00000000  000005a5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 17 .text.xTaskIncrementTick 000001a2  00000000  00000000  000005ab  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 18 .text.xTaskResumeAll 000000e0  00000000  00000000  0000074d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 19 .text.vTaskDelayUntil 000000d8  00000000  00000000  0000082d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 20 .text.vTaskDelay 00000084  00000000  00000000  00000905  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 21 .text.prvIdleTask 00000068  00000000  00000000  00000989  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 22 .text.vTaskSwitchContext 00000098  00000000  00000000  000009f1  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 23 .text.vTaskPlaceOnEventList 00000054  00000000  00000000  00000a89  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 24 .text.vTaskPlaceOnUnorderedEventList 0000006e  00000000  00000000  00000add  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 25 .text.xTaskRemoveFromEventList 00000080  00000000  00000000  00000b4b  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 26 .text.xTaskRemoveFromUnorderedEventList 0000006c  00000000  00000000  00000bcb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 27 .text.vTaskSetTimeOutState 00000022  00000000  00000000  00000c37  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 28 .text.xTaskCheckForTimeOut 000000a8  00000000  00000000  00000c59  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 29 .text.vTaskMissedYield 00000008  00000000  00000000  00000d01  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 30 .text.xTaskGetCurrentTaskHandle 0000000a  00000000  00000000  00000d09  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 31 .text.vTaskPriorityInherit 000000c2  00000000  00000000  00000d13  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 32 .text.xTaskPriorityDisinherit 00000078  00000000  00000000  00000dd5  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 33 .text.uxTaskResetEventItemValue 0000006c  00000000  00000000  00000e4d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 34 .text.pvTaskIncrementMutexHeldCount 00000024  00000000  00000000  00000eb9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 35 .text.ulTaskNotifyTake 000000fe  00000000  00000000  00000edd  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 36 .text.xTaskNotifyWait 00000154  00000000  00000000  00000fdb  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 37 .text.xTaskGenericNotify 000000d2  00000000  00000000  0000112f  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 38 .text.xTaskGenericNotifyFromISR 000000ee  00000000  00000000  00001201  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 39 .text.vTaskNotifyGiveFromISR 0000009e  00000000  00000000  000012ef  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 40 .text.xTaskNotifyStateClear 00000028  00000000  00000000  0000138d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
 41 .bss.uxSchedulerSuspended 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 42 .bss.xNextTaskUnblockTime 00000004  00000000  00000000  000013b5  2**0
                  ALLOC
 43 .bss.uxTaskNumber 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 44 .bss.xNumOfOverflows 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 45 .bss.xYieldPending 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 46 .bss.uxPendedTicks 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 47 .bss.xSchedulerRunning 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 48 .bss.uxTopReadyPriority 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 49 .bss.xTickCount 00000004  00000000  00000000  000013b5  2**0
                  ALLOC
 50 .bss.uxCurrentNumberOfTasks 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 51 .bss.uxTasksDeleted 00000001  00000000  00000000  000013b5  2**0
                  ALLOC
 52 .bss.xTasksWaitingTermination 0000000b  00000000  00000000  000013b5  2**0
                  ALLOC
 53 .bss.xPendingReadyList 0000000b  00000000  00000000  000013b5  2**0
                  ALLOC
 54 .bss.pxOverflowDelayedTaskList 00000002  00000000  00000000  000013b5  2**0
                  ALLOC
 55 .bss.pxDelayedTaskList 00000002  00000000  00000000  000013b5  2**0
                  ALLOC
 56 .bss.xDelayedTaskList2 0000000b  00000000  00000000  000013b5  2**0
                  ALLOC
 57 .bss.xDelayedTaskList1 0000000b  00000000  00000000  000013b5  2**0
                  ALLOC
 58 .bss.pxReadyTasksLists 0000006e  00000000  00000000  000013b5  2**0
                  ALLOC
 59 .bss.pxCurrentTCB 00000002  00000000  00000000  000013b5  2**0
                  ALLOC
 60 .comment      00000012  00000000  00000000  000013b5  2**0
                  CONTENTS, READONLY

Disassembly of section .text.prvResetNextTaskUnblockTime:

00000000 <prvResetNextTaskUnblockTime>:
   0:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	80 81       	ld	r24, Z
   a:	81 11       	cpse	r24, r1
   c:	00 c0       	rjmp	.+0      	; 0xe <prvResetNextTaskUnblockTime+0xe>
   e:	8f ef       	ldi	r24, 0xFF	; 255
  10:	9f ef       	ldi	r25, 0xFF	; 255
  12:	dc 01       	movw	r26, r24
  14:	00 c0       	rjmp	.+0      	; 0x16 <prvResetNextTaskUnblockTime+0x16>
  16:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1e:	07 80       	ldd	r0, Z+7	; 0x07
  20:	f0 85       	ldd	r31, Z+8	; 0x08
  22:	e0 2d       	mov	r30, r0
  24:	00 84       	ldd	r0, Z+8	; 0x08
  26:	f1 85       	ldd	r31, Z+9	; 0x09
  28:	e0 2d       	mov	r30, r0
  2a:	82 81       	ldd	r24, Z+2	; 0x02
  2c:	93 81       	ldd	r25, Z+3	; 0x03
  2e:	a4 81       	ldd	r26, Z+4	; 0x04
  30:	b5 81       	ldd	r27, Z+5	; 0x05
  32:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  36:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  3a:	a0 93 00 00 	sts	0x0000, r26	; 0x800000 <__SREG__+0x7fffc1>
  3e:	b0 93 00 00 	sts	0x0000, r27	; 0x800000 <__SREG__+0x7fffc1>
  42:	08 95       	ret

Disassembly of section .text.prvAddCurrentTaskToDelayedList:

00000000 <prvAddCurrentTaskToDelayedList>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   c:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  10:	62 83       	std	Z+2, r22	; 0x02
  12:	73 83       	std	Z+3, r23	; 0x03
  14:	84 83       	std	Z+4, r24	; 0x04
  16:	95 83       	std	Z+5, r25	; 0x05
  18:	c0 90 00 00 	lds	r12, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1c:	d0 90 00 00 	lds	r13, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  20:	e0 90 00 00 	lds	r14, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  24:	f0 90 00 00 	lds	r15, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  28:	6c 15       	cp	r22, r12
  2a:	7d 05       	cpc	r23, r13
  2c:	8e 05       	cpc	r24, r14
  2e:	9f 05       	cpc	r25, r15
  30:	00 f4       	brcc	.+0      	; 0x32 <prvAddCurrentTaskToDelayedList+0x32>
  32:	60 91 00 00 	lds	r22, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  36:	70 91 00 00 	lds	r23, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3e:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  42:	6e 5f       	subi	r22, 0xFE	; 254
  44:	7f 4f       	sbci	r23, 0xFF	; 255
  46:	ff 90       	pop	r15
  48:	ef 90       	pop	r14
  4a:	df 90       	pop	r13
  4c:	cf 90       	pop	r12
  4e:	0c 94 00 00 	jmp	0	; 0x0 <prvAddCurrentTaskToDelayedList>
  52:	6b 01       	movw	r12, r22
  54:	7c 01       	movw	r14, r24
  56:	60 91 00 00 	lds	r22, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  5a:	70 91 00 00 	lds	r23, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  5e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  62:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  66:	6e 5f       	subi	r22, 0xFE	; 254
  68:	7f 4f       	sbci	r23, 0xFF	; 255
  6a:	0e 94 00 00 	call	0	; 0x0 <prvAddCurrentTaskToDelayedList>
  6e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  72:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  76:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  7a:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  7e:	c8 16       	cp	r12, r24
  80:	d9 06       	cpc	r13, r25
  82:	ea 06       	cpc	r14, r26
  84:	fb 06       	cpc	r15, r27
  86:	00 f4       	brcc	.+0      	; 0x88 <prvAddCurrentTaskToDelayedList+0x88>
  88:	c0 92 00 00 	sts	0x0000, r12	; 0x800000 <__SREG__+0x7fffc1>
  8c:	d0 92 00 00 	sts	0x0000, r13	; 0x800000 <__SREG__+0x7fffc1>
  90:	e0 92 00 00 	sts	0x0000, r14	; 0x800000 <__SREG__+0x7fffc1>
  94:	f0 92 00 00 	sts	0x0000, r15	; 0x800000 <__SREG__+0x7fffc1>
  98:	ff 90       	pop	r15
  9a:	ef 90       	pop	r14
  9c:	df 90       	pop	r13
  9e:	cf 90       	pop	r12
  a0:	08 95       	ret

Disassembly of section .text.xTaskGenericCreate:

00000000 <xTaskGenericCreate>:
   0:	5f 92       	push	r5
   2:	6f 92       	push	r6
   4:	7f 92       	push	r7
   6:	8f 92       	push	r8
   8:	9f 92       	push	r9
   a:	af 92       	push	r10
   c:	bf 92       	push	r11
   e:	cf 92       	push	r12
  10:	df 92       	push	r13
  12:	ef 92       	push	r14
  14:	ff 92       	push	r15
  16:	0f 93       	push	r16
  18:	1f 93       	push	r17
  1a:	cf 93       	push	r28
  1c:	df 93       	push	r29
  1e:	4c 01       	movw	r8, r24
  20:	16 2f       	mov	r17, r22
  22:	57 2e       	mov	r5, r23
  24:	5a 01       	movw	r10, r20
  26:	39 01       	movw	r6, r18
  28:	c1 14       	cp	r12, r1
  2a:	d1 04       	cpc	r13, r1
  2c:	01 f4       	brne	.+0      	; 0x2e <xTaskGenericCreate+0x2e>
  2e:	ca 01       	movw	r24, r20
  30:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  34:	6c 01       	movw	r12, r24
  36:	89 2b       	or	r24, r25
  38:	01 f4       	brne	.+0      	; 0x3a <xTaskGenericCreate+0x3a>
  3a:	00 c0       	rjmp	.+0      	; 0x3c <xTaskGenericCreate+0x3c>
  3c:	8c e2       	ldi	r24, 0x2C	; 44
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  44:	ec 01       	movw	r28, r24
  46:	00 97       	sbiw	r24, 0x00	; 0
  48:	01 f0       	breq	.+0      	; 0x4a <xTaskGenericCreate+0x4a>
  4a:	dc 8e       	std	Y+28, r13	; 0x1c
  4c:	cb 8e       	std	Y+27, r12	; 0x1b
  4e:	21 e0       	ldi	r18, 0x01	; 1
  50:	a2 1a       	sub	r10, r18
  52:	b1 08       	sbc	r11, r1
  54:	ac 0c       	add	r10, r12
  56:	bd 1c       	adc	r11, r13
  58:	bc 01       	movw	r22, r24
  5a:	63 5e       	subi	r22, 0xE3	; 227
  5c:	7f 4f       	sbci	r23, 0xFF	; 255
  5e:	e1 2f       	mov	r30, r17
  60:	f5 2d       	mov	r31, r5
  62:	cf 01       	movw	r24, r30
  64:	08 96       	adiw	r24, 0x08	; 8
  66:	00 c0       	rjmp	.+0      	; 0x68 <xTaskGenericCreate+0x68>
  68:	c6 01       	movw	r24, r12
  6a:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  6e:	00 c0       	rjmp	.+0      	; 0x70 <xTaskGenericCreate+0x70>
  70:	e8 17       	cp	r30, r24
  72:	f9 07       	cpc	r31, r25
  74:	01 f0       	breq	.+0      	; 0x76 <xTaskGenericCreate+0x76>
  76:	9f 01       	movw	r18, r30
  78:	41 91       	ld	r20, Z+
  7a:	db 01       	movw	r26, r22
  7c:	4d 93       	st	X+, r20
  7e:	bd 01       	movw	r22, r26
  80:	d9 01       	movw	r26, r18
  82:	2c 91       	ld	r18, X
  84:	21 11       	cpse	r18, r1
  86:	00 c0       	rjmp	.+0      	; 0x88 <xTaskGenericCreate+0x88>
  88:	1c a2       	std	Y+36, r1	; 0x24
  8a:	10 2f       	mov	r17, r16
  8c:	0a 30       	cpi	r16, 0x0A	; 10
  8e:	00 f0       	brcs	.+0      	; 0x90 <xTaskGenericCreate+0x90>
  90:	19 e0       	ldi	r17, 0x09	; 9
  92:	1a 8f       	std	Y+26, r17	; 0x1a
  94:	1d a3       	std	Y+37, r17	; 0x25
  96:	1e a2       	std	Y+38, r1	; 0x26
  98:	6e 01       	movw	r12, r28
  9a:	b2 e0       	ldi	r27, 0x02	; 2
  9c:	cb 0e       	add	r12, r27
  9e:	d1 1c       	adc	r13, r1
  a0:	c6 01       	movw	r24, r12
  a2:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  a6:	ce 01       	movw	r24, r28
  a8:	0e 96       	adiw	r24, 0x0e	; 14
  aa:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  ae:	db 87       	std	Y+11, r29	; 0x0b
  b0:	ca 87       	std	Y+10, r28	; 0x0a
  b2:	8a e0       	ldi	r24, 0x0A	; 10
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	a0 e0       	ldi	r26, 0x00	; 0
  b8:	b0 e0       	ldi	r27, 0x00	; 0
  ba:	81 1b       	sub	r24, r17
  bc:	91 09       	sbc	r25, r1
  be:	a1 09       	sbc	r26, r1
  c0:	b1 09       	sbc	r27, r1
  c2:	8e 87       	std	Y+14, r24	; 0x0e
  c4:	9f 87       	std	Y+15, r25	; 0x0f
  c6:	a8 8b       	std	Y+16, r26	; 0x10
  c8:	b9 8b       	std	Y+17, r27	; 0x11
  ca:	df 8b       	std	Y+23, r29	; 0x17
  cc:	ce 8b       	std	Y+22, r28	; 0x16
  ce:	1f a2       	std	Y+39, r1	; 0x27
  d0:	18 a6       	std	Y+40, r1	; 0x28
  d2:	19 a6       	std	Y+41, r1	; 0x29
  d4:	1a a6       	std	Y+42, r1	; 0x2a
  d6:	1b a6       	std	Y+43, r1	; 0x2b
  d8:	a3 01       	movw	r20, r6
  da:	b4 01       	movw	r22, r8
  dc:	c5 01       	movw	r24, r10
  de:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
  e2:	99 83       	std	Y+1, r25	; 0x01
  e4:	88 83       	st	Y, r24
  e6:	e1 14       	cp	r14, r1
  e8:	f1 04       	cpc	r15, r1
  ea:	01 f0       	breq	.+0      	; 0xec <xTaskGenericCreate+0xec>
  ec:	f7 01       	movw	r30, r14
  ee:	d1 83       	std	Z+1, r29	; 0x01
  f0:	c0 83       	st	Z, r28
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	f8 94       	cli
  f6:	0f 92       	push	r0
  f8:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  fc:	8f 5f       	subi	r24, 0xFF	; 255
  fe:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
 102:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 106:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 10a:	89 2b       	or	r24, r25
 10c:	01 f4       	brne	.+0      	; 0x10e <xTaskGenericCreate+0x10e>
 10e:	d0 93 00 00 	sts	0x0000, r29	; 0x800000 <__SREG__+0x7fffc1>
 112:	c0 93 00 00 	sts	0x0000, r28	; 0x800000 <__SREG__+0x7fffc1>
 116:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 11a:	81 30       	cpi	r24, 0x01	; 1
 11c:	01 f4       	brne	.+0      	; 0x11e <xTaskGenericCreate+0x11e>
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	e8 2e       	mov	r14, r24
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	f8 2e       	mov	r15, r24
 126:	c7 01       	movw	r24, r14
 128:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 12c:	fb e0       	ldi	r31, 0x0B	; 11
 12e:	ef 0e       	add	r14, r31
 130:	f1 1c       	adc	r15, r1
 132:	20 e0       	ldi	r18, 0x00	; 0
 134:	e2 16       	cp	r14, r18
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	f2 06       	cpc	r15, r18
 13a:	01 f4       	brne	.+0      	; 0x13c <xTaskGenericCreate+0x13c>
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 144:	80 e0       	ldi	r24, 0x00	; 0
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
 164:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
 170:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
 174:	00 c0       	rjmp	.+0      	; 0x176 <xTaskGenericCreate+0x176>
 176:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 17a:	81 11       	cpse	r24, r1
 17c:	00 c0       	rjmp	.+0      	; 0x17e <xTaskGenericCreate+0x17e>
 17e:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 182:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 186:	82 8d       	ldd	r24, Z+26	; 0x1a
 188:	08 17       	cp	r16, r24
 18a:	00 f0       	brcs	.+0      	; 0x18c <xTaskGenericCreate+0x18c>
 18c:	d0 93 00 00 	sts	0x0000, r29	; 0x800000 <__SREG__+0x7fffc1>
 190:	c0 93 00 00 	sts	0x0000, r28	; 0x800000 <__SREG__+0x7fffc1>
 194:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 198:	8f 5f       	subi	r24, 0xFF	; 255
 19a:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
 19e:	8a 8d       	ldd	r24, Y+26	; 0x1a
 1a0:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 1a4:	98 17       	cp	r25, r24
 1a6:	00 f4       	brcc	.+0      	; 0x1a8 <xTaskGenericCreate+0x1a8>
 1a8:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
 1ac:	ab e0       	ldi	r26, 0x0B	; 11
 1ae:	8a 9f       	mul	r24, r26
 1b0:	c0 01       	movw	r24, r0
 1b2:	11 24       	eor	r1, r1
 1b4:	b6 01       	movw	r22, r12
 1b6:	80 50       	subi	r24, 0x00	; 0
 1b8:	90 40       	sbci	r25, 0x00	; 0
 1ba:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 1be:	0f 90       	pop	r0
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 1c6:	88 23       	and	r24, r24
 1c8:	01 f0       	breq	.+0      	; 0x1ca <xTaskGenericCreate+0x1ca>
 1ca:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 1ce:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 1d2:	82 8d       	ldd	r24, Z+26	; 0x1a
 1d4:	80 17       	cp	r24, r16
 1d6:	00 f4       	brcc	.+0      	; 0x1d8 <xTaskGenericCreate+0x1d8>
 1d8:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericCreate>
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <xTaskGenericCreate+0x1e0>
 1e0:	8f ef       	ldi	r24, 0xFF	; 255
 1e2:	df 91       	pop	r29
 1e4:	cf 91       	pop	r28
 1e6:	1f 91       	pop	r17
 1e8:	0f 91       	pop	r16
 1ea:	ff 90       	pop	r15
 1ec:	ef 90       	pop	r14
 1ee:	df 90       	pop	r13
 1f0:	cf 90       	pop	r12
 1f2:	bf 90       	pop	r11
 1f4:	af 90       	pop	r10
 1f6:	9f 90       	pop	r9
 1f8:	8f 90       	pop	r8
 1fa:	7f 90       	pop	r7
 1fc:	6f 90       	pop	r6
 1fe:	5f 90       	pop	r5
 200:	08 95       	ret

Disassembly of section .text.vTaskDelete:

00000000 <vTaskDelete>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	0f 92       	push	r0
  10:	89 2b       	or	r24, r25
  12:	01 f4       	brne	.+0      	; 0x14 <vTaskDelete+0x14>
  14:	c0 91 00 00 	lds	r28, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  18:	d0 91 00 00 	lds	r29, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1c:	8e 01       	movw	r16, r28
  1e:	0e 5f       	subi	r16, 0xFE	; 254
  20:	1f 4f       	sbci	r17, 0xFF	; 255
  22:	c8 01       	movw	r24, r16
  24:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  28:	88 8d       	ldd	r24, Y+24	; 0x18
  2a:	99 8d       	ldd	r25, Y+25	; 0x19
  2c:	89 2b       	or	r24, r25
  2e:	01 f0       	breq	.+0      	; 0x30 <vTaskDelete+0x30>
  30:	ce 01       	movw	r24, r28
  32:	0e 96       	adiw	r24, 0x0e	; 14
  34:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  38:	b8 01       	movw	r22, r16
  3a:	80 e0       	ldi	r24, 0x00	; 0
  3c:	90 e0       	ldi	r25, 0x00	; 0
  3e:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  42:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  46:	8f 5f       	subi	r24, 0xFF	; 255
  48:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  4c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  50:	8f 5f       	subi	r24, 0xFF	; 255
  52:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  56:	0f 90       	pop	r0
  58:	0f be       	out	0x3f, r0	; 63
  5a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  5e:	88 23       	and	r24, r24
  60:	01 f0       	breq	.+0      	; 0x62 <vTaskDelete+0x62>
  62:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  66:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6a:	c8 17       	cp	r28, r24
  6c:	d9 07       	cpc	r29, r25
  6e:	01 f4       	brne	.+0      	; 0x70 <vTaskDelete+0x70>
  70:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  74:	00 c0       	rjmp	.+0      	; 0x76 <vTaskDelete+0x76>
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	0f 92       	push	r0
  7c:	0e 94 00 00 	call	0	; 0x0 <vTaskDelete>
  80:	0f 90       	pop	r0
  82:	0f be       	out	0x3f, r0	; 63
  84:	df 91       	pop	r29
  86:	cf 91       	pop	r28
  88:	1f 91       	pop	r17
  8a:	0f 91       	pop	r16
  8c:	08 95       	ret

Disassembly of section .text.uxTaskPriorityGet:

00000000 <uxTaskPriorityGet>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	0f 92       	push	r0
   6:	00 97       	sbiw	r24, 0x00	; 0
   8:	01 f4       	brne	.+0      	; 0xa <uxTaskPriorityGet+0xa>
   a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   e:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  12:	0f 90       	pop	r0
  14:	0f be       	out	0x3f, r0	; 63
  16:	fc 01       	movw	r30, r24
  18:	82 8d       	ldd	r24, Z+26	; 0x1a
  1a:	08 95       	ret

Disassembly of section .text.uxTaskPriorityGetFromISR:

00000000 <uxTaskPriorityGetFromISR>:
   0:	00 97       	sbiw	r24, 0x00	; 0
   2:	01 f4       	brne	.+0      	; 0x4 <uxTaskPriorityGetFromISR+0x4>
   4:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   c:	fc 01       	movw	r30, r24
   e:	82 8d       	ldd	r24, Z+26	; 0x1a
  10:	08 95       	ret

Disassembly of section .text.vTaskPrioritySet:

00000000 <vTaskPrioritySet>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	1f 93       	push	r17
  12:	cf 93       	push	r28
  14:	df 93       	push	r29
  16:	ec 01       	movw	r28, r24
  18:	6a 30       	cpi	r22, 0x0A	; 10
  1a:	00 f0       	brcs	.+0      	; 0x1c <vTaskPrioritySet+0x1c>
  1c:	69 e0       	ldi	r22, 0x09	; 9
  1e:	0f b6       	in	r0, 0x3f	; 63
  20:	f8 94       	cli
  22:	0f 92       	push	r0
  24:	20 97       	sbiw	r28, 0x00	; 0
  26:	01 f4       	brne	.+0      	; 0x28 <vTaskPrioritySet+0x28>
  28:	c0 91 00 00 	lds	r28, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2c:	d0 91 00 00 	lds	r29, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  30:	9d a1       	ldd	r25, Y+37	; 0x25
  32:	96 17       	cp	r25, r22
  34:	01 f4       	brne	.+0      	; 0x36 <vTaskPrioritySet+0x36>
  36:	00 c0       	rjmp	.+0      	; 0x38 <vTaskPrioritySet+0x38>
  38:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3c:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  40:	96 17       	cp	r25, r22
  42:	00 f4       	brcc	.+0      	; 0x44 <vTaskPrioritySet+0x44>
  44:	c2 17       	cp	r28, r18
  46:	d3 07       	cpc	r29, r19
  48:	01 f0       	breq	.+0      	; 0x4a <vTaskPrioritySet+0x4a>
  4a:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4e:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  52:	11 e0       	ldi	r17, 0x01	; 1
  54:	82 8d       	ldd	r24, Z+26	; 0x1a
  56:	68 17       	cp	r22, r24
  58:	00 f4       	brcc	.+0      	; 0x5a <vTaskPrioritySet+0x5a>
  5a:	00 c0       	rjmp	.+0      	; 0x5c <vTaskPrioritySet+0x5c>
  5c:	11 e0       	ldi	r17, 0x01	; 1
  5e:	c2 17       	cp	r28, r18
  60:	d3 07       	cpc	r29, r19
  62:	01 f0       	breq	.+0      	; 0x64 <vTaskPrioritySet+0x64>
  64:	10 e0       	ldi	r17, 0x00	; 0
  66:	8a 8d       	ldd	r24, Y+26	; 0x1a
  68:	98 13       	cpse	r25, r24
  6a:	00 c0       	rjmp	.+0      	; 0x6c <vTaskPrioritySet+0x6c>
  6c:	6a 8f       	std	Y+26, r22	; 0x1a
  6e:	6d a3       	std	Y+37, r22	; 0x25
  70:	ce 84       	ldd	r12, Y+14	; 0x0e
  72:	df 84       	ldd	r13, Y+15	; 0x0f
  74:	e8 88       	ldd	r14, Y+16	; 0x10
  76:	f9 88       	ldd	r15, Y+17	; 0x11
  78:	f7 fc       	sbrc	r15, 7
  7a:	00 c0       	rjmp	.+0      	; 0x7c <vTaskPrioritySet+0x7c>
  7c:	9a e0       	ldi	r25, 0x0A	; 10
  7e:	c9 2e       	mov	r12, r25
  80:	d1 2c       	mov	r13, r1
  82:	e1 2c       	mov	r14, r1
  84:	f1 2c       	mov	r15, r1
  86:	46 01       	movw	r8, r12
  88:	57 01       	movw	r10, r14
  8a:	86 1a       	sub	r8, r22
  8c:	91 08       	sbc	r9, r1
  8e:	a1 08       	sbc	r10, r1
  90:	b1 08       	sbc	r11, r1
  92:	8e 86       	std	Y+14, r8	; 0x0e
  94:	9f 86       	std	Y+15, r9	; 0x0f
  96:	a8 8a       	std	Y+16, r10	; 0x10
  98:	b9 8a       	std	Y+17, r11	; 0x11
  9a:	2b e0       	ldi	r18, 0x0B	; 11
  9c:	82 9f       	mul	r24, r18
  9e:	c0 01       	movw	r24, r0
  a0:	11 24       	eor	r1, r1
  a2:	80 50       	subi	r24, 0x00	; 0
  a4:	90 40       	sbci	r25, 0x00	; 0
  a6:	2c 85       	ldd	r18, Y+12	; 0x0c
  a8:	3d 85       	ldd	r19, Y+13	; 0x0d
  aa:	28 17       	cp	r18, r24
  ac:	39 07       	cpc	r19, r25
  ae:	01 f4       	brne	.+0      	; 0xb0 <vTaskPrioritySet+0xb0>
  b0:	7e 01       	movw	r14, r28
  b2:	82 e0       	ldi	r24, 0x02	; 2
  b4:	e8 0e       	add	r14, r24
  b6:	f1 1c       	adc	r15, r1
  b8:	c7 01       	movw	r24, r14
  ba:	0e 94 00 00 	call	0	; 0x0 <vTaskPrioritySet>
  be:	9a 8d       	ldd	r25, Y+26	; 0x1a
  c0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  c4:	89 17       	cp	r24, r25
  c6:	00 f4       	brcc	.+0      	; 0xc8 <vTaskPrioritySet+0xc8>
  c8:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  cc:	2b e0       	ldi	r18, 0x0B	; 11
  ce:	92 9f       	mul	r25, r18
  d0:	c0 01       	movw	r24, r0
  d2:	11 24       	eor	r1, r1
  d4:	b7 01       	movw	r22, r14
  d6:	80 50       	subi	r24, 0x00	; 0
  d8:	90 40       	sbci	r25, 0x00	; 0
  da:	0e 94 00 00 	call	0	; 0x0 <vTaskPrioritySet>
  de:	11 30       	cpi	r17, 0x01	; 1
  e0:	01 f4       	brne	.+0      	; 0xe2 <vTaskPrioritySet+0xe2>
  e2:	0e 94 00 00 	call	0	; 0x0 <vTaskPrioritySet>
  e6:	0f 90       	pop	r0
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	df 91       	pop	r29
  ec:	cf 91       	pop	r28
  ee:	1f 91       	pop	r17
  f0:	ff 90       	pop	r15
  f2:	ef 90       	pop	r14
  f4:	df 90       	pop	r13
  f6:	cf 90       	pop	r12
  f8:	bf 90       	pop	r11
  fa:	af 90       	pop	r10
  fc:	9f 90       	pop	r9
  fe:	8f 90       	pop	r8
 100:	08 95       	ret

Disassembly of section .text.vTaskStartScheduler:

00000000 <vTaskStartScheduler>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	a1 2c       	mov	r10, r1
  10:	b1 2c       	mov	r11, r1
  12:	c1 2c       	mov	r12, r1
  14:	d1 2c       	mov	r13, r1
  16:	e1 2c       	mov	r14, r1
  18:	f1 2c       	mov	r15, r1
  1a:	00 e0       	ldi	r16, 0x00	; 0
  1c:	20 e0       	ldi	r18, 0x00	; 0
  1e:	30 e0       	ldi	r19, 0x00	; 0
  20:	45 e5       	ldi	r20, 0x55	; 85
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	60 e0       	ldi	r22, 0x00	; 0
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	80 e0       	ldi	r24, 0x00	; 0
  2a:	90 e0       	ldi	r25, 0x00	; 0
  2c:	0e 94 00 00 	call	0	; 0x0 <vTaskStartScheduler>
  30:	81 30       	cpi	r24, 0x01	; 1
  32:	01 f4       	brne	.+0      	; 0x34 <vTaskStartScheduler+0x34>
  34:	f8 94       	cli
  36:	4f ef       	ldi	r20, 0xFF	; 255
  38:	5f ef       	ldi	r21, 0xFF	; 255
  3a:	ba 01       	movw	r22, r20
  3c:	40 93 00 00 	sts	0x0000, r20	; 0x800000 <__SREG__+0x7fffc1>
  40:	50 93 00 00 	sts	0x0000, r21	; 0x800000 <__SREG__+0x7fffc1>
  44:	60 93 00 00 	sts	0x0000, r22	; 0x800000 <__SREG__+0x7fffc1>
  48:	70 93 00 00 	sts	0x0000, r23	; 0x800000 <__SREG__+0x7fffc1>
  4c:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  50:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  54:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  58:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  5c:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  60:	0f 91       	pop	r16
  62:	ff 90       	pop	r15
  64:	ef 90       	pop	r14
  66:	df 90       	pop	r13
  68:	cf 90       	pop	r12
  6a:	bf 90       	pop	r11
  6c:	af 90       	pop	r10
  6e:	0c 94 00 00 	jmp	0	; 0x0 <vTaskStartScheduler>
  72:	0f 91       	pop	r16
  74:	ff 90       	pop	r15
  76:	ef 90       	pop	r14
  78:	df 90       	pop	r13
  7a:	cf 90       	pop	r12
  7c:	bf 90       	pop	r11
  7e:	af 90       	pop	r10
  80:	08 95       	ret

Disassembly of section .text.vTaskEndScheduler:

00000000 <vTaskEndScheduler>:
   0:	f8 94       	cli
   2:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
   6:	0c 94 00 00 	jmp	0	; 0x0 <vTaskEndScheduler>

Disassembly of section .text.vTaskSuspendAll:

00000000 <vTaskSuspendAll>:
   0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	8f 5f       	subi	r24, 0xFF	; 255
   6:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
   a:	08 95       	ret

Disassembly of section .text.xTaskGetTickCount:

00000000 <xTaskGetTickCount>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	0f 92       	push	r0
   6:	60 91 00 00 	lds	r22, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   a:	70 91 00 00 	lds	r23, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  12:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  16:	0f 90       	pop	r0
  18:	0f be       	out	0x3f, r0	; 63
  1a:	08 95       	ret

Disassembly of section .text.xTaskGetTickCountFromISR:

00000000 <xTaskGetTickCountFromISR>:
   0:	60 91 00 00 	lds	r22, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	70 91 00 00 	lds	r23, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   c:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  10:	08 95       	ret

Disassembly of section .text.uxTaskGetNumberOfTasks:

00000000 <uxTaskGetNumberOfTasks>:
   0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	08 95       	ret

Disassembly of section .text.xTaskIncrementTick:

00000000 <xTaskIncrementTick>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  18:	81 11       	cpse	r24, r1
  1a:	00 c0       	rjmp	.+0      	; 0x1c <xTaskIncrementTick+0x1c>
  1c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  20:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  24:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  28:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2c:	01 96       	adiw	r24, 0x01	; 1
  2e:	a1 1d       	adc	r26, r1
  30:	b1 1d       	adc	r27, r1
  32:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  36:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  3a:	a0 93 00 00 	sts	0x0000, r26	; 0x800000 <__SREG__+0x7fffc1>
  3e:	b0 93 00 00 	sts	0x0000, r27	; 0x800000 <__SREG__+0x7fffc1>
  42:	80 90 00 00 	lds	r8, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  46:	90 90 00 00 	lds	r9, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4a:	a0 90 00 00 	lds	r10, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4e:	b0 90 00 00 	lds	r11, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  52:	81 14       	cp	r8, r1
  54:	91 04       	cpc	r9, r1
  56:	a1 04       	cpc	r10, r1
  58:	b1 04       	cpc	r11, r1
  5a:	01 f4       	brne	.+0      	; 0x5c <xTaskIncrementTick+0x5c>
  5c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  60:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  64:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  68:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6c:	30 93 00 00 	sts	0x0000, r19	; 0x800000 <__SREG__+0x7fffc1>
  70:	20 93 00 00 	sts	0x0000, r18	; 0x800000 <__SREG__+0x7fffc1>
  74:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  78:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  7c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  80:	8f 5f       	subi	r24, 0xFF	; 255
  82:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  86:	0e 94 00 00 	call	0	; 0x0 <xTaskIncrementTick>
  8a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  8e:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  92:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  96:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  9a:	c0 e0       	ldi	r28, 0x00	; 0
  9c:	88 16       	cp	r8, r24
  9e:	99 06       	cpc	r9, r25
  a0:	aa 06       	cpc	r10, r26
  a2:	bb 06       	cpc	r11, r27
  a4:	00 f4       	brcc	.+0      	; 0xa6 <xTaskIncrementTick+0xa6>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <xTaskIncrementTick+0xa8>
  a8:	db e0       	ldi	r29, 0x0B	; 11
  aa:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  ae:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  b2:	80 81       	ld	r24, Z
  b4:	81 11       	cpse	r24, r1
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <xTaskIncrementTick+0xb8>
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	9f ef       	ldi	r25, 0xFF	; 255
  bc:	dc 01       	movw	r26, r24
  be:	00 c0       	rjmp	.+0      	; 0xc0 <xTaskIncrementTick+0xc0>
  c0:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  c4:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  c8:	07 80       	ldd	r0, Z+7	; 0x07
  ca:	f0 85       	ldd	r31, Z+8	; 0x08
  cc:	e0 2d       	mov	r30, r0
  ce:	00 85       	ldd	r16, Z+8	; 0x08
  d0:	11 85       	ldd	r17, Z+9	; 0x09
  d2:	f8 01       	movw	r30, r16
  d4:	82 81       	ldd	r24, Z+2	; 0x02
  d6:	93 81       	ldd	r25, Z+3	; 0x03
  d8:	a4 81       	ldd	r26, Z+4	; 0x04
  da:	b5 81       	ldd	r27, Z+5	; 0x05
  dc:	88 16       	cp	r8, r24
  de:	99 06       	cpc	r9, r25
  e0:	aa 06       	cpc	r10, r26
  e2:	bb 06       	cpc	r11, r27
  e4:	00 f4       	brcc	.+0      	; 0xe6 <xTaskIncrementTick+0xe6>
  e6:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  ea:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  ee:	a0 93 00 00 	sts	0x0000, r26	; 0x800000 <__SREG__+0x7fffc1>
  f2:	b0 93 00 00 	sts	0x0000, r27	; 0x800000 <__SREG__+0x7fffc1>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <xTaskIncrementTick+0xf8>
  f8:	78 01       	movw	r14, r16
  fa:	f2 e0       	ldi	r31, 0x02	; 2
  fc:	ef 0e       	add	r14, r31
  fe:	f1 1c       	adc	r15, r1
 100:	c7 01       	movw	r24, r14
 102:	0e 94 00 00 	call	0	; 0x0 <xTaskIncrementTick>
 106:	d8 01       	movw	r26, r16
 108:	58 96       	adiw	r26, 0x18	; 24
 10a:	8d 91       	ld	r24, X+
 10c:	9c 91       	ld	r25, X
 10e:	59 97       	sbiw	r26, 0x19	; 25
 110:	89 2b       	or	r24, r25
 112:	01 f0       	breq	.+0      	; 0x114 <xTaskIncrementTick+0x114>
 114:	c8 01       	movw	r24, r16
 116:	0e 96       	adiw	r24, 0x0e	; 14
 118:	0e 94 00 00 	call	0	; 0x0 <xTaskIncrementTick>
 11c:	f8 01       	movw	r30, r16
 11e:	92 8d       	ldd	r25, Z+26	; 0x1a
 120:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 124:	89 17       	cp	r24, r25
 126:	00 f4       	brcc	.+0      	; 0x128 <xTaskIncrementTick+0x128>
 128:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
 12c:	d9 9f       	mul	r29, r25
 12e:	c0 01       	movw	r24, r0
 130:	11 24       	eor	r1, r1
 132:	b7 01       	movw	r22, r14
 134:	80 50       	subi	r24, 0x00	; 0
 136:	90 40       	sbci	r25, 0x00	; 0
 138:	0e 94 00 00 	call	0	; 0x0 <xTaskIncrementTick>
 13c:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 140:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 144:	d8 01       	movw	r26, r16
 146:	5a 96       	adiw	r26, 0x1a	; 26
 148:	9c 91       	ld	r25, X
 14a:	82 8d       	ldd	r24, Z+26	; 0x1a
 14c:	98 17       	cp	r25, r24
 14e:	00 f4       	brcc	.+0      	; 0x150 <xTaskIncrementTick+0x150>
 150:	00 c0       	rjmp	.+0      	; 0x152 <xTaskIncrementTick+0x152>
 152:	c1 e0       	ldi	r28, 0x01	; 1
 154:	00 c0       	rjmp	.+0      	; 0x156 <xTaskIncrementTick+0x156>
 156:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 15a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 15e:	e2 8d       	ldd	r30, Z+26	; 0x1a
 160:	bb e0       	ldi	r27, 0x0B	; 11
 162:	eb 9f       	mul	r30, r27
 164:	f0 01       	movw	r30, r0
 166:	11 24       	eor	r1, r1
 168:	e0 50       	subi	r30, 0x00	; 0
 16a:	f0 40       	sbci	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	82 30       	cpi	r24, 0x02	; 2
 170:	00 f0       	brcs	.+0      	; 0x172 <xTaskIncrementTick+0x172>
 172:	c1 e0       	ldi	r28, 0x01	; 1
 174:	00 c0       	rjmp	.+0      	; 0x176 <xTaskIncrementTick+0x176>
 176:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 17a:	8f 5f       	subi	r24, 0xFF	; 255
 17c:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
 180:	c0 e0       	ldi	r28, 0x00	; 0
 182:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 186:	81 11       	cpse	r24, r1
 188:	c1 e0       	ldi	r28, 0x01	; 1
 18a:	8c 2f       	mov	r24, r28
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	1f 91       	pop	r17
 192:	0f 91       	pop	r16
 194:	ff 90       	pop	r15
 196:	ef 90       	pop	r14
 198:	bf 90       	pop	r11
 19a:	af 90       	pop	r10
 19c:	9f 90       	pop	r9
 19e:	8f 90       	pop	r8
 1a0:	08 95       	ret

Disassembly of section .text.xTaskResumeAll:

00000000 <xTaskResumeAll>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	0f b6       	in	r0, 0x3f	; 63
   e:	f8 94       	cli
  10:	0f 92       	push	r0
  12:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  16:	81 50       	subi	r24, 0x01	; 1
  18:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  1c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  20:	88 23       	and	r24, r24
  22:	01 f0       	breq	.+0      	; 0x24 <xTaskResumeAll+0x24>
  24:	80 e0       	ldi	r24, 0x00	; 0
  26:	00 c0       	rjmp	.+0      	; 0x28 <xTaskResumeAll+0x28>
  28:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2c:	88 23       	and	r24, r24
  2e:	01 f0       	breq	.+0      	; 0x30 <xTaskResumeAll+0x30>
  30:	8b e0       	ldi	r24, 0x0B	; 11
  32:	f8 2e       	mov	r15, r24
  34:	ee 24       	eor	r14, r14
  36:	e3 94       	inc	r14
  38:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3c:	88 23       	and	r24, r24
  3e:	01 f0       	breq	.+0      	; 0x40 <xTaskResumeAll+0x40>
  40:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  44:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  48:	c0 85       	ldd	r28, Z+8	; 0x08
  4a:	d1 85       	ldd	r29, Z+9	; 0x09
  4c:	ce 01       	movw	r24, r28
  4e:	0e 96       	adiw	r24, 0x0e	; 14
  50:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  54:	8e 01       	movw	r16, r28
  56:	0e 5f       	subi	r16, 0xFE	; 254
  58:	1f 4f       	sbci	r17, 0xFF	; 255
  5a:	c8 01       	movw	r24, r16
  5c:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  60:	9a 8d       	ldd	r25, Y+26	; 0x1a
  62:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  66:	89 17       	cp	r24, r25
  68:	00 f4       	brcc	.+0      	; 0x6a <xTaskResumeAll+0x6a>
  6a:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  6e:	f9 9e       	mul	r15, r25
  70:	c0 01       	movw	r24, r0
  72:	11 24       	eor	r1, r1
  74:	b8 01       	movw	r22, r16
  76:	80 50       	subi	r24, 0x00	; 0
  78:	90 40       	sbci	r25, 0x00	; 0
  7a:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  7e:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  82:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  86:	9a 8d       	ldd	r25, Y+26	; 0x1a
  88:	82 8d       	ldd	r24, Z+26	; 0x1a
  8a:	98 17       	cp	r25, r24
  8c:	00 f0       	brcs	.+0      	; 0x8e <xTaskResumeAll+0x8e>
  8e:	e0 92 00 00 	sts	0x0000, r14	; 0x800000 <__SREG__+0x7fffc1>
  92:	00 c0       	rjmp	.+0      	; 0x94 <xTaskResumeAll+0x94>
  94:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  98:	81 11       	cpse	r24, r1
  9a:	00 c0       	rjmp	.+0      	; 0x9c <xTaskResumeAll+0x9c>
  9c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	01 f0       	breq	.+0      	; 0xa4 <xTaskResumeAll+0xa4>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <xTaskResumeAll+0xa6>
  a6:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  aa:	81 e0       	ldi	r24, 0x01	; 1
  ac:	00 c0       	rjmp	.+0      	; 0xae <xTaskResumeAll+0xae>
  ae:	c1 e0       	ldi	r28, 0x01	; 1
  b0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  b4:	88 23       	and	r24, r24
  b6:	01 f0       	breq	.+0      	; 0xb8 <xTaskResumeAll+0xb8>
  b8:	0e 94 00 00 	call	0	; 0x0 <xTaskResumeAll>
  bc:	81 11       	cpse	r24, r1
  be:	c0 93 00 00 	sts	0x0000, r28	; 0x800000 <__SREG__+0x7fffc1>
  c2:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  c6:	81 50       	subi	r24, 0x01	; 1
  c8:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  cc:	00 c0       	rjmp	.+0      	; 0xce <xTaskResumeAll+0xce>
  ce:	0f 90       	pop	r0
  d0:	0f be       	out	0x3f, r0	; 63
  d2:	df 91       	pop	r29
  d4:	cf 91       	pop	r28
  d6:	1f 91       	pop	r17
  d8:	0f 91       	pop	r16
  da:	ff 90       	pop	r15
  dc:	ef 90       	pop	r14
  de:	08 95       	ret

Disassembly of section .text.vTaskDelayUntil:

00000000 <vTaskDelayUntil>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	00 d0       	rcall	.+0      	; 0x16 <vTaskDelayUntil+0x16>
  16:	00 d0       	rcall	.+0      	; 0x18 <vTaskDelayUntil+0x18>
  18:	cd b7       	in	r28, 0x3d	; 61
  1a:	de b7       	in	r29, 0x3e	; 62
  1c:	5c 01       	movw	r10, r24
  1e:	49 83       	std	Y+1, r20	; 0x01
  20:	5a 83       	std	Y+2, r21	; 0x02
  22:	6b 83       	std	Y+3, r22	; 0x03
  24:	7c 83       	std	Y+4, r23	; 0x04
  26:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  2a:	00 91 00 00 	lds	r16, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2e:	10 91 00 00 	lds	r17, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  32:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  36:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	f5 01       	movw	r30, r10
  3c:	80 81       	ld	r24, Z
  3e:	91 81       	ldd	r25, Z+1	; 0x01
  40:	a2 81       	ldd	r26, Z+2	; 0x02
  42:	b3 81       	ldd	r27, Z+3	; 0x03
  44:	49 81       	ldd	r20, Y+1	; 0x01
  46:	5a 81       	ldd	r21, Y+2	; 0x02
  48:	6b 81       	ldd	r22, Y+3	; 0x03
  4a:	7c 81       	ldd	r23, Y+4	; 0x04
  4c:	6c 01       	movw	r12, r24
  4e:	7d 01       	movw	r14, r26
  50:	c4 0e       	add	r12, r20
  52:	d5 1e       	adc	r13, r21
  54:	e6 1e       	adc	r14, r22
  56:	f7 1e       	adc	r15, r23
  58:	08 17       	cp	r16, r24
  5a:	19 07       	cpc	r17, r25
  5c:	2a 07       	cpc	r18, r26
  5e:	3b 07       	cpc	r19, r27
  60:	00 f4       	brcc	.+0      	; 0x62 <vTaskDelayUntil+0x62>
  62:	c8 16       	cp	r12, r24
  64:	d9 06       	cpc	r13, r25
  66:	ea 06       	cpc	r14, r26
  68:	fb 06       	cpc	r15, r27
  6a:	00 f4       	brcc	.+0      	; 0x6c <vTaskDelayUntil+0x6c>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <vTaskDelayUntil+0x6e>
  6e:	c8 16       	cp	r12, r24
  70:	d9 06       	cpc	r13, r25
  72:	ea 06       	cpc	r14, r26
  74:	fb 06       	cpc	r15, r27
  76:	00 f0       	brcs	.+0      	; 0x78 <vTaskDelayUntil+0x78>
  78:	91 e0       	ldi	r25, 0x01	; 1
  7a:	0c 15       	cp	r16, r12
  7c:	1d 05       	cpc	r17, r13
  7e:	2e 05       	cpc	r18, r14
  80:	3f 05       	cpc	r19, r15
  82:	00 f0       	brcs	.+0      	; 0x84 <vTaskDelayUntil+0x84>
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	00 c0       	rjmp	.+0      	; 0x88 <vTaskDelayUntil+0x88>
  88:	91 e0       	ldi	r25, 0x01	; 1
  8a:	f5 01       	movw	r30, r10
  8c:	c0 82       	st	Z, r12
  8e:	d1 82       	std	Z+1, r13	; 0x01
  90:	e2 82       	std	Z+2, r14	; 0x02
  92:	f3 82       	std	Z+3, r15	; 0x03
  94:	99 23       	and	r25, r25
  96:	01 f0       	breq	.+0      	; 0x98 <vTaskDelayUntil+0x98>
  98:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  9c:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  a0:	02 96       	adiw	r24, 0x02	; 2
  a2:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  a6:	c7 01       	movw	r24, r14
  a8:	b6 01       	movw	r22, r12
  aa:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  ae:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  b2:	81 11       	cpse	r24, r1
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <vTaskDelayUntil+0xb6>
  b6:	0e 94 00 00 	call	0	; 0x0 <vTaskDelayUntil>
  ba:	0f 90       	pop	r0
  bc:	0f 90       	pop	r0
  be:	0f 90       	pop	r0
  c0:	0f 90       	pop	r0
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	1f 91       	pop	r17
  c8:	0f 91       	pop	r16
  ca:	ff 90       	pop	r15
  cc:	ef 90       	pop	r14
  ce:	df 90       	pop	r13
  d0:	cf 90       	pop	r12
  d2:	bf 90       	pop	r11
  d4:	af 90       	pop	r10
  d6:	08 95       	ret

Disassembly of section .text.vTaskDelay:

00000000 <vTaskDelay>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	00 d0       	rcall	.+0      	; 0xe <vTaskDelay+0xe>
   e:	00 d0       	rcall	.+0      	; 0x10 <vTaskDelay+0x10>
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	61 15       	cp	r22, r1
  16:	71 05       	cpc	r23, r1
  18:	81 05       	cpc	r24, r1
  1a:	91 05       	cpc	r25, r1
  1c:	01 f4       	brne	.+0      	; 0x1e <vTaskDelay+0x1e>
  1e:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  22:	00 c0       	rjmp	.+0      	; 0x24 <vTaskDelay+0x24>
  24:	69 83       	std	Y+1, r22	; 0x01
  26:	7a 83       	std	Y+2, r23	; 0x02
  28:	8b 83       	std	Y+3, r24	; 0x03
  2a:	9c 83       	std	Y+4, r25	; 0x04
  2c:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  30:	c0 90 00 00 	lds	r12, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  34:	d0 90 00 00 	lds	r13, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  38:	e0 90 00 00 	lds	r14, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3c:	f0 90 00 00 	lds	r15, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  40:	69 81       	ldd	r22, Y+1	; 0x01
  42:	7a 81       	ldd	r23, Y+2	; 0x02
  44:	8b 81       	ldd	r24, Y+3	; 0x03
  46:	9c 81       	ldd	r25, Y+4	; 0x04
  48:	c6 0e       	add	r12, r22
  4a:	d7 1e       	adc	r13, r23
  4c:	e8 1e       	adc	r14, r24
  4e:	f9 1e       	adc	r15, r25
  50:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  54:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  58:	02 96       	adiw	r24, 0x02	; 2
  5a:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  5e:	c7 01       	movw	r24, r14
  60:	b6 01       	movw	r22, r12
  62:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  66:	0e 94 00 00 	call	0	; 0x0 <vTaskDelay>
  6a:	88 23       	and	r24, r24
  6c:	01 f0       	breq	.+0      	; 0x6e <vTaskDelay+0x6e>
  6e:	0f 90       	pop	r0
  70:	0f 90       	pop	r0
  72:	0f 90       	pop	r0
  74:	0f 90       	pop	r0
  76:	df 91       	pop	r29
  78:	cf 91       	pop	r28
  7a:	ff 90       	pop	r15
  7c:	ef 90       	pop	r14
  7e:	df 90       	pop	r13
  80:	cf 90       	pop	r12
  82:	08 95       	ret

Disassembly of section .text.prvIdleTask:

00000000 <prvIdleTask>:
   0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	88 23       	and	r24, r24
   6:	01 f0       	breq	.+0      	; 0x8 <prvIdleTask+0x8>
   8:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
   c:	c0 91 00 00 	lds	r28, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  10:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  14:	cc 23       	and	r28, r28
  16:	01 f0       	breq	.+0      	; 0x18 <prvIdleTask+0x18>
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	0f 92       	push	r0
  1e:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  22:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  26:	c0 85       	ldd	r28, Z+8	; 0x08
  28:	d1 85       	ldd	r29, Z+9	; 0x09
  2a:	ce 01       	movw	r24, r28
  2c:	02 96       	adiw	r24, 0x02	; 2
  2e:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  32:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  36:	81 50       	subi	r24, 0x01	; 1
  38:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  3c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  40:	81 50       	subi	r24, 0x01	; 1
  42:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  46:	0f 90       	pop	r0
  48:	0f be       	out	0x3f, r0	; 63
  4a:	8b 8d       	ldd	r24, Y+27	; 0x1b
  4c:	9c 8d       	ldd	r25, Y+28	; 0x1c
  4e:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  52:	ce 01       	movw	r24, r28
  54:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  58:	00 c0       	rjmp	.+0      	; 0x5a <prvIdleTask+0x5a>
  5a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  5e:	82 30       	cpi	r24, 0x02	; 2
  60:	00 f0       	brcs	.+0      	; 0x62 <prvIdleTask+0x62>
  62:	0e 94 00 00 	call	0	; 0x0 <prvIdleTask>
  66:	00 c0       	rjmp	.+0      	; 0x68 <__SREG__+0x29>

Disassembly of section .text.vTaskSwitchContext:

00000000 <vTaskSwitchContext>:
   0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	88 23       	and	r24, r24
   6:	01 f0       	breq	.+0      	; 0x8 <vTaskSwitchContext+0x8>
   8:	81 e0       	ldi	r24, 0x01	; 1
   a:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
   e:	08 95       	ret
  10:	10 92 00 00 	sts	0x0000, r1	; 0x800000 <__SREG__+0x7fffc1>
  14:	9b e0       	ldi	r25, 0x0B	; 11
  16:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1a:	9e 9f       	mul	r25, r30
  1c:	f0 01       	movw	r30, r0
  1e:	11 24       	eor	r1, r1
  20:	e0 50       	subi	r30, 0x00	; 0
  22:	f0 40       	sbci	r31, 0x00	; 0
  24:	80 81       	ld	r24, Z
  26:	81 11       	cpse	r24, r1
  28:	00 c0       	rjmp	.+0      	; 0x2a <vTaskSwitchContext+0x2a>
  2a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2e:	81 50       	subi	r24, 0x01	; 1
  30:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  34:	00 c0       	rjmp	.+0      	; 0x36 <vTaskSwitchContext+0x36>
  36:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	90 e0       	ldi	r25, 0x00	; 0
  3c:	4b e0       	ldi	r20, 0x0B	; 11
  3e:	48 9f       	mul	r20, r24
  40:	90 01       	movw	r18, r0
  42:	49 9f       	mul	r20, r25
  44:	30 0d       	add	r19, r0
  46:	11 24       	eor	r1, r1
  48:	f9 01       	movw	r30, r18
  4a:	e0 50       	subi	r30, 0x00	; 0
  4c:	f0 40       	sbci	r31, 0x00	; 0
  4e:	a1 81       	ldd	r26, Z+1	; 0x01
  50:	b2 81       	ldd	r27, Z+2	; 0x02
  52:	14 96       	adiw	r26, 0x04	; 4
  54:	0d 90       	ld	r0, X+
  56:	bc 91       	ld	r27, X
  58:	a0 2d       	mov	r26, r0
  5a:	b2 83       	std	Z+2, r27	; 0x02
  5c:	a1 83       	std	Z+1, r26	; 0x01
  5e:	20 50       	subi	r18, 0x00	; 0
  60:	30 40       	sbci	r19, 0x00	; 0
  62:	a2 17       	cp	r26, r18
  64:	b3 07       	cpc	r27, r19
  66:	01 f4       	brne	.+0      	; 0x68 <vTaskSwitchContext+0x68>
  68:	14 96       	adiw	r26, 0x04	; 4
  6a:	2d 91       	ld	r18, X+
  6c:	3c 91       	ld	r19, X
  6e:	15 97       	sbiw	r26, 0x05	; 5
  70:	32 83       	std	Z+2, r19	; 0x02
  72:	21 83       	std	Z+1, r18	; 0x01
  74:	2b e0       	ldi	r18, 0x0B	; 11
  76:	28 9f       	mul	r18, r24
  78:	f0 01       	movw	r30, r0
  7a:	29 9f       	mul	r18, r25
  7c:	f0 0d       	add	r31, r0
  7e:	11 24       	eor	r1, r1
  80:	e0 50       	subi	r30, 0x00	; 0
  82:	f0 40       	sbci	r31, 0x00	; 0
  84:	01 80       	ldd	r0, Z+1	; 0x01
  86:	f2 81       	ldd	r31, Z+2	; 0x02
  88:	e0 2d       	mov	r30, r0
  8a:	80 85       	ldd	r24, Z+8	; 0x08
  8c:	91 85       	ldd	r25, Z+9	; 0x09
  8e:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  92:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  96:	08 95       	ret

Disassembly of section .text.vTaskPlaceOnEventList:

00000000 <vTaskPlaceOnEventList>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	6a 01       	movw	r12, r20
   a:	7b 01       	movw	r14, r22
   c:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  10:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  14:	b9 01       	movw	r22, r18
  16:	62 5f       	subi	r22, 0xF2	; 242
  18:	7f 4f       	sbci	r23, 0xFF	; 255
  1a:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnEventList>
  1e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  22:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  26:	02 96       	adiw	r24, 0x02	; 2
  28:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnEventList>
  2c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  30:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  34:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  38:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3c:	bc 01       	movw	r22, r24
  3e:	cd 01       	movw	r24, r26
  40:	6c 0d       	add	r22, r12
  42:	7d 1d       	adc	r23, r13
  44:	8e 1d       	adc	r24, r14
  46:	9f 1d       	adc	r25, r15
  48:	ff 90       	pop	r15
  4a:	ef 90       	pop	r14
  4c:	df 90       	pop	r13
  4e:	cf 90       	pop	r12
  50:	0c 94 00 00 	jmp	0	; 0x0 <vTaskPlaceOnEventList>

Disassembly of section .text.vTaskPlaceOnUnorderedEventList:

00000000 <vTaskPlaceOnUnorderedEventList>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	68 01       	movw	r12, r16
   e:	79 01       	movw	r14, r18
  10:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  14:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  18:	70 68       	ori	r23, 0x80	; 128
  1a:	46 87       	std	Z+14, r20	; 0x0e
  1c:	57 87       	std	Z+15, r21	; 0x0f
  1e:	60 8b       	std	Z+16, r22	; 0x10
  20:	71 8b       	std	Z+17, r23	; 0x11
  22:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  26:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2a:	b9 01       	movw	r22, r18
  2c:	62 5f       	subi	r22, 0xF2	; 242
  2e:	7f 4f       	sbci	r23, 0xFF	; 255
  30:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnUnorderedEventList>
  34:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  38:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3c:	02 96       	adiw	r24, 0x02	; 2
  3e:	0e 94 00 00 	call	0	; 0x0 <vTaskPlaceOnUnorderedEventList>
  42:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  46:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4a:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4e:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  52:	bc 01       	movw	r22, r24
  54:	cd 01       	movw	r24, r26
  56:	6c 0d       	add	r22, r12
  58:	7d 1d       	adc	r23, r13
  5a:	8e 1d       	adc	r24, r14
  5c:	9f 1d       	adc	r25, r15
  5e:	1f 91       	pop	r17
  60:	0f 91       	pop	r16
  62:	ff 90       	pop	r15
  64:	ef 90       	pop	r14
  66:	df 90       	pop	r13
  68:	cf 90       	pop	r12
  6a:	0c 94 00 00 	jmp	0	; 0x0 <vTaskPlaceOnUnorderedEventList>

Disassembly of section .text.xTaskRemoveFromEventList:

00000000 <xTaskRemoveFromEventList>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	dc 01       	movw	r26, r24
   a:	17 96       	adiw	r26, 0x07	; 7
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	18 97       	sbiw	r26, 0x08	; 8
  12:	c0 85       	ldd	r28, Z+8	; 0x08
  14:	d1 85       	ldd	r29, Z+9	; 0x09
  16:	8e 01       	movw	r16, r28
  18:	02 5f       	subi	r16, 0xF2	; 242
  1a:	1f 4f       	sbci	r17, 0xFF	; 255
  1c:	c8 01       	movw	r24, r16
  1e:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromEventList>
  22:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  26:	81 11       	cpse	r24, r1
  28:	00 c0       	rjmp	.+0      	; 0x2a <xTaskRemoveFromEventList+0x2a>
  2a:	0c 50       	subi	r16, 0x0C	; 12
  2c:	11 09       	sbc	r17, r1
  2e:	c8 01       	movw	r24, r16
  30:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromEventList>
  34:	9a 8d       	ldd	r25, Y+26	; 0x1a
  36:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	89 17       	cp	r24, r25
  3c:	00 f4       	brcc	.+0      	; 0x3e <xTaskRemoveFromEventList+0x3e>
  3e:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  42:	bb e0       	ldi	r27, 0x0B	; 11
  44:	9b 9f       	mul	r25, r27
  46:	c0 01       	movw	r24, r0
  48:	11 24       	eor	r1, r1
  4a:	b8 01       	movw	r22, r16
  4c:	80 50       	subi	r24, 0x00	; 0
  4e:	90 40       	sbci	r25, 0x00	; 0
  50:	00 c0       	rjmp	.+0      	; 0x52 <xTaskRemoveFromEventList+0x52>
  52:	b8 01       	movw	r22, r16
  54:	80 e0       	ldi	r24, 0x00	; 0
  56:	90 e0       	ldi	r25, 0x00	; 0
  58:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromEventList>
  5c:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  60:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  64:	9a 8d       	ldd	r25, Y+26	; 0x1a
  66:	82 8d       	ldd	r24, Z+26	; 0x1a
  68:	89 17       	cp	r24, r25
  6a:	00 f4       	brcc	.+0      	; 0x6c <xTaskRemoveFromEventList+0x6c>
  6c:	81 e0       	ldi	r24, 0x01	; 1
  6e:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  72:	00 c0       	rjmp	.+0      	; 0x74 <xTaskRemoveFromEventList+0x74>
  74:	80 e0       	ldi	r24, 0x00	; 0
  76:	df 91       	pop	r29
  78:	cf 91       	pop	r28
  7a:	1f 91       	pop	r17
  7c:	0f 91       	pop	r16
  7e:	08 95       	ret

Disassembly of section .text.xTaskRemoveFromUnorderedEventList:

00000000 <xTaskRemoveFromUnorderedEventList>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	70 68       	ori	r23, 0x80	; 128
   a:	fc 01       	movw	r30, r24
   c:	40 83       	st	Z, r20
   e:	51 83       	std	Z+1, r21	; 0x01
  10:	62 83       	std	Z+2, r22	; 0x02
  12:	73 83       	std	Z+3, r23	; 0x03
  14:	c0 85       	ldd	r28, Z+8	; 0x08
  16:	d1 85       	ldd	r29, Z+9	; 0x09
  18:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromUnorderedEventList>
  1c:	8e 01       	movw	r16, r28
  1e:	0e 5f       	subi	r16, 0xFE	; 254
  20:	1f 4f       	sbci	r17, 0xFF	; 255
  22:	c8 01       	movw	r24, r16
  24:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromUnorderedEventList>
  28:	9a 8d       	ldd	r25, Y+26	; 0x1a
  2a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2e:	89 17       	cp	r24, r25
  30:	00 f4       	brcc	.+0      	; 0x32 <xTaskRemoveFromUnorderedEventList+0x32>
  32:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  36:	fb e0       	ldi	r31, 0x0B	; 11
  38:	9f 9f       	mul	r25, r31
  3a:	c0 01       	movw	r24, r0
  3c:	11 24       	eor	r1, r1
  3e:	b8 01       	movw	r22, r16
  40:	80 50       	subi	r24, 0x00	; 0
  42:	90 40       	sbci	r25, 0x00	; 0
  44:	0e 94 00 00 	call	0	; 0x0 <xTaskRemoveFromUnorderedEventList>
  48:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4c:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  50:	9a 8d       	ldd	r25, Y+26	; 0x1a
  52:	82 8d       	ldd	r24, Z+26	; 0x1a
  54:	89 17       	cp	r24, r25
  56:	00 f4       	brcc	.+0      	; 0x58 <xTaskRemoveFromUnorderedEventList+0x58>
  58:	81 e0       	ldi	r24, 0x01	; 1
  5a:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
  5e:	00 c0       	rjmp	.+0      	; 0x60 <xTaskRemoveFromUnorderedEventList+0x60>
  60:	80 e0       	ldi	r24, 0x00	; 0
  62:	df 91       	pop	r29
  64:	cf 91       	pop	r28
  66:	1f 91       	pop	r17
  68:	0f 91       	pop	r16
  6a:	08 95       	ret

Disassembly of section .text.vTaskSetTimeOutState:

00000000 <vTaskSetTimeOutState>:
   0:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	fc 01       	movw	r30, r24
   6:	20 83       	st	Z, r18
   8:	40 91 00 00 	lds	r20, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   c:	50 91 00 00 	lds	r21, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  10:	60 91 00 00 	lds	r22, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  14:	70 91 00 00 	lds	r23, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  18:	41 83       	std	Z+1, r20	; 0x01
  1a:	52 83       	std	Z+2, r21	; 0x02
  1c:	63 83       	std	Z+3, r22	; 0x03
  1e:	74 83       	std	Z+4, r23	; 0x04
  20:	08 95       	ret

Disassembly of section .text.xTaskCheckForTimeOut:

00000000 <xTaskCheckForTimeOut>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	fb 01       	movw	r30, r22
  16:	0f b6       	in	r0, 0x3f	; 63
  18:	f8 94       	cli
  1a:	0f 92       	push	r0
  1c:	c0 90 00 00 	lds	r12, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  20:	d0 90 00 00 	lds	r13, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  24:	e0 90 00 00 	lds	r14, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  28:	f0 90 00 00 	lds	r15, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2c:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  30:	dc 01       	movw	r26, r24
  32:	2c 91       	ld	r18, X
  34:	11 96       	adiw	r26, 0x01	; 1
  36:	4d 91       	ld	r20, X+
  38:	5d 91       	ld	r21, X+
  3a:	6d 91       	ld	r22, X+
  3c:	7c 91       	ld	r23, X
  3e:	14 97       	sbiw	r26, 0x04	; 4
  40:	32 17       	cp	r19, r18
  42:	01 f0       	breq	.+0      	; 0x44 <xTaskCheckForTimeOut+0x44>
  44:	c4 16       	cp	r12, r20
  46:	d5 06       	cpc	r13, r21
  48:	e6 06       	cpc	r14, r22
  4a:	f7 06       	cpc	r15, r23
  4c:	00 f4       	brcc	.+0      	; 0x4e <xTaskCheckForTimeOut+0x4e>
  4e:	00 81       	ld	r16, Z
  50:	11 81       	ldd	r17, Z+1	; 0x01
  52:	22 81       	ldd	r18, Z+2	; 0x02
  54:	33 81       	ldd	r19, Z+3	; 0x03
  56:	46 01       	movw	r8, r12
  58:	57 01       	movw	r10, r14
  5a:	84 1a       	sub	r8, r20
  5c:	95 0a       	sbc	r9, r21
  5e:	a6 0a       	sbc	r10, r22
  60:	b7 0a       	sbc	r11, r23
  62:	80 16       	cp	r8, r16
  64:	91 06       	cpc	r9, r17
  66:	a2 06       	cpc	r10, r18
  68:	b3 06       	cpc	r11, r19
  6a:	00 f4       	brcc	.+0      	; 0x6c <xTaskCheckForTimeOut+0x6c>
  6c:	4c 19       	sub	r20, r12
  6e:	5d 09       	sbc	r21, r13
  70:	6e 09       	sbc	r22, r14
  72:	7f 09       	sbc	r23, r15
  74:	40 0f       	add	r20, r16
  76:	51 1f       	adc	r21, r17
  78:	62 1f       	adc	r22, r18
  7a:	73 1f       	adc	r23, r19
  7c:	40 83       	st	Z, r20
  7e:	51 83       	std	Z+1, r21	; 0x01
  80:	62 83       	std	Z+2, r22	; 0x02
  82:	73 83       	std	Z+3, r23	; 0x03
  84:	0e 94 00 00 	call	0	; 0x0 <xTaskCheckForTimeOut>
  88:	80 e0       	ldi	r24, 0x00	; 0
  8a:	00 c0       	rjmp	.+0      	; 0x8c <xTaskCheckForTimeOut+0x8c>
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	0f 90       	pop	r0
  90:	0f be       	out	0x3f, r0	; 63
  92:	1f 91       	pop	r17
  94:	0f 91       	pop	r16
  96:	ff 90       	pop	r15
  98:	ef 90       	pop	r14
  9a:	df 90       	pop	r13
  9c:	cf 90       	pop	r12
  9e:	bf 90       	pop	r11
  a0:	af 90       	pop	r10
  a2:	9f 90       	pop	r9
  a4:	8f 90       	pop	r8
  a6:	08 95       	ret

Disassembly of section .text.vTaskMissedYield:

00000000 <vTaskMissedYield>:
   0:	81 e0       	ldi	r24, 0x01	; 1
   2:	80 93 00 00 	sts	0x0000, r24	; 0x800000 <__SREG__+0x7fffc1>
   6:	08 95       	ret

Disassembly of section .text.xTaskGetCurrentTaskHandle:

00000000 <xTaskGetCurrentTaskHandle>:
   0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	08 95       	ret

Disassembly of section .text.vTaskPriorityInherit:

00000000 <vTaskPriorityInherit>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	fc 01       	movw	r30, r24
   a:	89 2b       	or	r24, r25
   c:	01 f4       	brne	.+0      	; 0xe <vTaskPriorityInherit+0xe>
   e:	00 c0       	rjmp	.+0      	; 0x10 <vTaskPriorityInherit+0x10>
  10:	82 8d       	ldd	r24, Z+26	; 0x1a
  12:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  16:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1a:	5a 96       	adiw	r26, 0x1a	; 26
  1c:	9c 91       	ld	r25, X
  1e:	89 17       	cp	r24, r25
  20:	00 f0       	brcs	.+0      	; 0x22 <vTaskPriorityInherit+0x22>
  22:	00 c0       	rjmp	.+0      	; 0x24 <vTaskPriorityInherit+0x24>
  24:	46 85       	ldd	r20, Z+14	; 0x0e
  26:	57 85       	ldd	r21, Z+15	; 0x0f
  28:	60 89       	ldd	r22, Z+16	; 0x10
  2a:	71 89       	ldd	r23, Z+17	; 0x11
  2c:	77 fd       	sbrc	r23, 7
  2e:	00 c0       	rjmp	.+0      	; 0x30 <vTaskPriorityInherit+0x30>
  30:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  34:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  38:	5a 96       	adiw	r26, 0x1a	; 26
  3a:	9c 91       	ld	r25, X
  3c:	4a e0       	ldi	r20, 0x0A	; 10
  3e:	50 e0       	ldi	r21, 0x00	; 0
  40:	60 e0       	ldi	r22, 0x00	; 0
  42:	70 e0       	ldi	r23, 0x00	; 0
  44:	49 1b       	sub	r20, r25
  46:	51 09       	sbc	r21, r1
  48:	61 09       	sbc	r22, r1
  4a:	71 09       	sbc	r23, r1
  4c:	46 87       	std	Z+14, r20	; 0x0e
  4e:	57 87       	std	Z+15, r21	; 0x0f
  50:	60 8b       	std	Z+16, r22	; 0x10
  52:	71 8b       	std	Z+17, r23	; 0x11
  54:	2b e0       	ldi	r18, 0x0B	; 11
  56:	82 9f       	mul	r24, r18
  58:	c0 01       	movw	r24, r0
  5a:	11 24       	eor	r1, r1
  5c:	80 50       	subi	r24, 0x00	; 0
  5e:	90 40       	sbci	r25, 0x00	; 0
  60:	24 85       	ldd	r18, Z+12	; 0x0c
  62:	35 85       	ldd	r19, Z+13	; 0x0d
  64:	28 17       	cp	r18, r24
  66:	39 07       	cpc	r19, r25
  68:	01 f4       	brne	.+0      	; 0x6a <vTaskPriorityInherit+0x6a>
  6a:	8f 01       	movw	r16, r30
  6c:	ef 01       	movw	r28, r30
  6e:	22 96       	adiw	r28, 0x02	; 2
  70:	ce 01       	movw	r24, r28
  72:	0e 94 00 00 	call	0	; 0x0 <vTaskPriorityInherit>
  76:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  7a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  7e:	92 8d       	ldd	r25, Z+26	; 0x1a
  80:	f8 01       	movw	r30, r16
  82:	92 8f       	std	Z+26, r25	; 0x1a
  84:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  88:	89 17       	cp	r24, r25
  8a:	00 f4       	brcc	.+0      	; 0x8c <vTaskPriorityInherit+0x8c>
  8c:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  90:	fb e0       	ldi	r31, 0x0B	; 11
  92:	9f 9f       	mul	r25, r31
  94:	c0 01       	movw	r24, r0
  96:	11 24       	eor	r1, r1
  98:	be 01       	movw	r22, r28
  9a:	80 50       	subi	r24, 0x00	; 0
  9c:	90 40       	sbci	r25, 0x00	; 0
  9e:	df 91       	pop	r29
  a0:	cf 91       	pop	r28
  a2:	1f 91       	pop	r17
  a4:	0f 91       	pop	r16
  a6:	0c 94 00 00 	jmp	0	; 0x0 <vTaskPriorityInherit>
  aa:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  ae:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  b2:	5a 96       	adiw	r26, 0x1a	; 26
  b4:	8c 91       	ld	r24, X
  b6:	82 8f       	std	Z+26, r24	; 0x1a
  b8:	df 91       	pop	r29
  ba:	cf 91       	pop	r28
  bc:	1f 91       	pop	r17
  be:	0f 91       	pop	r16
  c0:	08 95       	ret

Disassembly of section .text.xTaskPriorityDisinherit:

00000000 <xTaskPriorityDisinherit>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	fc 01       	movw	r30, r24
   a:	89 2b       	or	r24, r25
   c:	01 f4       	brne	.+0      	; 0xe <xTaskPriorityDisinherit+0xe>
   e:	80 e0       	ldi	r24, 0x00	; 0
  10:	00 c0       	rjmp	.+0      	; 0x12 <xTaskPriorityDisinherit+0x12>
  12:	86 a1       	ldd	r24, Z+38	; 0x26
  14:	81 50       	subi	r24, 0x01	; 1
  16:	86 a3       	std	Z+38, r24	; 0x26
  18:	22 8d       	ldd	r18, Z+26	; 0x1a
  1a:	95 a1       	ldd	r25, Z+37	; 0x25
  1c:	29 17       	cp	r18, r25
  1e:	01 f0       	breq	.+0      	; 0x20 <xTaskPriorityDisinherit+0x20>
  20:	81 11       	cpse	r24, r1
  22:	00 c0       	rjmp	.+0      	; 0x24 <xTaskPriorityDisinherit+0x24>
  24:	ef 01       	movw	r28, r30
  26:	8f 01       	movw	r16, r30
  28:	0e 5f       	subi	r16, 0xFE	; 254
  2a:	1f 4f       	sbci	r17, 0xFF	; 255
  2c:	c8 01       	movw	r24, r16
  2e:	0e 94 00 00 	call	0	; 0x0 <xTaskPriorityDisinherit>
  32:	9d a1       	ldd	r25, Y+37	; 0x25
  34:	9a 8f       	std	Y+26, r25	; 0x1a
  36:	4a e0       	ldi	r20, 0x0A	; 10
  38:	50 e0       	ldi	r21, 0x00	; 0
  3a:	60 e0       	ldi	r22, 0x00	; 0
  3c:	70 e0       	ldi	r23, 0x00	; 0
  3e:	49 1b       	sub	r20, r25
  40:	51 09       	sbc	r21, r1
  42:	61 09       	sbc	r22, r1
  44:	71 09       	sbc	r23, r1
  46:	4e 87       	std	Y+14, r20	; 0x0e
  48:	5f 87       	std	Y+15, r21	; 0x0f
  4a:	68 8b       	std	Y+16, r22	; 0x10
  4c:	79 8b       	std	Y+17, r23	; 0x11
  4e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  52:	89 17       	cp	r24, r25
  54:	00 f4       	brcc	.+0      	; 0x56 <xTaskPriorityDisinherit+0x56>
  56:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  5a:	2b e0       	ldi	r18, 0x0B	; 11
  5c:	92 9f       	mul	r25, r18
  5e:	c0 01       	movw	r24, r0
  60:	11 24       	eor	r1, r1
  62:	b8 01       	movw	r22, r16
  64:	80 50       	subi	r24, 0x00	; 0
  66:	90 40       	sbci	r25, 0x00	; 0
  68:	0e 94 00 00 	call	0	; 0x0 <xTaskPriorityDisinherit>
  6c:	81 e0       	ldi	r24, 0x01	; 1
  6e:	df 91       	pop	r29
  70:	cf 91       	pop	r28
  72:	1f 91       	pop	r17
  74:	0f 91       	pop	r16
  76:	08 95       	ret

Disassembly of section .text.uxTaskResetEventItemValue:

00000000 <uxTaskResetEventItemValue>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  18:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1c:	66 85       	ldd	r22, Z+14	; 0x0e
  1e:	77 85       	ldd	r23, Z+15	; 0x0f
  20:	80 89       	ldd	r24, Z+16	; 0x10
  22:	91 89       	ldd	r25, Z+17	; 0x11
  24:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  28:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2c:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  30:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  34:	5a 96       	adiw	r26, 0x1a	; 26
  36:	2c 91       	ld	r18, X
  38:	3a e0       	ldi	r19, 0x0A	; 10
  3a:	c3 2e       	mov	r12, r19
  3c:	d1 2c       	mov	r13, r1
  3e:	e1 2c       	mov	r14, r1
  40:	f1 2c       	mov	r15, r1
  42:	46 01       	movw	r8, r12
  44:	57 01       	movw	r10, r14
  46:	82 1a       	sub	r8, r18
  48:	91 08       	sbc	r9, r1
  4a:	a1 08       	sbc	r10, r1
  4c:	b1 08       	sbc	r11, r1
  4e:	86 86       	std	Z+14, r8	; 0x0e
  50:	97 86       	std	Z+15, r9	; 0x0f
  52:	a0 8a       	std	Z+16, r10	; 0x10
  54:	b1 8a       	std	Z+17, r11	; 0x11
  56:	1f 91       	pop	r17
  58:	0f 91       	pop	r16
  5a:	ff 90       	pop	r15
  5c:	ef 90       	pop	r14
  5e:	df 90       	pop	r13
  60:	cf 90       	pop	r12
  62:	bf 90       	pop	r11
  64:	af 90       	pop	r10
  66:	9f 90       	pop	r9
  68:	8f 90       	pop	r8
  6a:	08 95       	ret

Disassembly of section .text.pvTaskIncrementMutexHeldCount:

00000000 <pvTaskIncrementMutexHeldCount>:
   0:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   4:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	89 2b       	or	r24, r25
   a:	01 f0       	breq	.+0      	; 0xc <pvTaskIncrementMutexHeldCount+0xc>
   c:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  10:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  14:	86 a1       	ldd	r24, Z+38	; 0x26
  16:	8f 5f       	subi	r24, 0xFF	; 255
  18:	86 a3       	std	Z+38, r24	; 0x26
  1a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1e:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  22:	08 95       	ret

Disassembly of section .text.ulTaskNotifyTake:

00000000 <ulTaskNotifyTake>:
   0:	ff 92       	push	r15
   2:	0f 93       	push	r16
   4:	1f 93       	push	r17
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
   a:	00 d0       	rcall	.+0      	; 0xc <ulTaskNotifyTake+0xc>
   c:	00 d0       	rcall	.+0      	; 0xe <ulTaskNotifyTake+0xe>
   e:	cd b7       	in	r28, 0x3d	; 61
  10:	de b7       	in	r29, 0x3e	; 62
  12:	f8 2e       	mov	r15, r24
  14:	0f b6       	in	r0, 0x3f	; 63
  16:	f8 94       	cli
  18:	0f 92       	push	r0
  1a:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  1e:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  22:	87 a1       	ldd	r24, Z+39	; 0x27
  24:	90 a5       	ldd	r25, Z+40	; 0x28
  26:	a1 a5       	ldd	r26, Z+41	; 0x29
  28:	b2 a5       	ldd	r27, Z+42	; 0x2a
  2a:	89 2b       	or	r24, r25
  2c:	8a 2b       	or	r24, r26
  2e:	8b 2b       	or	r24, r27
  30:	01 f4       	brne	.+0      	; 0x32 <ulTaskNotifyTake+0x32>
  32:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  36:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	81 e0       	ldi	r24, 0x01	; 1
  3c:	83 a7       	std	Z+43, r24	; 0x2b
  3e:	41 15       	cp	r20, r1
  40:	51 05       	cpc	r21, r1
  42:	61 05       	cpc	r22, r1
  44:	71 05       	cpc	r23, r1
  46:	01 f0       	breq	.+0      	; 0x48 <ulTaskNotifyTake+0x48>
  48:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4c:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  50:	02 96       	adiw	r24, 0x02	; 2
  52:	49 83       	std	Y+1, r20	; 0x01
  54:	5a 83       	std	Y+2, r21	; 0x02
  56:	6b 83       	std	Y+3, r22	; 0x03
  58:	7c 83       	std	Y+4, r23	; 0x04
  5a:	0e 94 00 00 	call	0	; 0x0 <ulTaskNotifyTake>
  5e:	00 91 00 00 	lds	r16, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  62:	10 91 00 00 	lds	r17, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  66:	20 91 00 00 	lds	r18, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6a:	30 91 00 00 	lds	r19, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6e:	49 81       	ldd	r20, Y+1	; 0x01
  70:	5a 81       	ldd	r21, Y+2	; 0x02
  72:	6b 81       	ldd	r22, Y+3	; 0x03
  74:	7c 81       	ldd	r23, Y+4	; 0x04
  76:	cb 01       	movw	r24, r22
  78:	ba 01       	movw	r22, r20
  7a:	60 0f       	add	r22, r16
  7c:	71 1f       	adc	r23, r17
  7e:	82 1f       	adc	r24, r18
  80:	93 1f       	adc	r25, r19
  82:	0e 94 00 00 	call	0	; 0x0 <ulTaskNotifyTake>
  86:	0e 94 00 00 	call	0	; 0x0 <ulTaskNotifyTake>
  8a:	0f 90       	pop	r0
  8c:	0f be       	out	0x3f, r0	; 63
  8e:	0f b6       	in	r0, 0x3f	; 63
  90:	f8 94       	cli
  92:	0f 92       	push	r0
  94:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  98:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  9c:	67 a1       	ldd	r22, Z+39	; 0x27
  9e:	70 a5       	ldd	r23, Z+40	; 0x28
  a0:	81 a5       	ldd	r24, Z+41	; 0x29
  a2:	92 a5       	ldd	r25, Z+42	; 0x2a
  a4:	61 15       	cp	r22, r1
  a6:	71 05       	cpc	r23, r1
  a8:	81 05       	cpc	r24, r1
  aa:	91 05       	cpc	r25, r1
  ac:	01 f0       	breq	.+0      	; 0xae <ulTaskNotifyTake+0xae>
  ae:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  b2:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  b6:	ff 20       	and	r15, r15
  b8:	01 f0       	breq	.+0      	; 0xba <ulTaskNotifyTake+0xba>
  ba:	17 a2       	std	Z+39, r1	; 0x27
  bc:	10 a6       	std	Z+40, r1	; 0x28
  be:	11 a6       	std	Z+41, r1	; 0x29
  c0:	12 a6       	std	Z+42, r1	; 0x2a
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <ulTaskNotifyTake+0xc4>
  c4:	07 a1       	ldd	r16, Z+39	; 0x27
  c6:	10 a5       	ldd	r17, Z+40	; 0x28
  c8:	21 a5       	ldd	r18, Z+41	; 0x29
  ca:	32 a5       	ldd	r19, Z+42	; 0x2a
  cc:	01 50       	subi	r16, 0x01	; 1
  ce:	11 09       	sbc	r17, r1
  d0:	21 09       	sbc	r18, r1
  d2:	31 09       	sbc	r19, r1
  d4:	07 a3       	std	Z+39, r16	; 0x27
  d6:	10 a7       	std	Z+40, r17	; 0x28
  d8:	21 a7       	std	Z+41, r18	; 0x29
  da:	32 a7       	std	Z+42, r19	; 0x2a
  dc:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  e0:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  e4:	13 a6       	std	Z+43, r1	; 0x2b
  e6:	0f 90       	pop	r0
  e8:	0f be       	out	0x3f, r0	; 63
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	0f 90       	pop	r0
  f2:	df 91       	pop	r29
  f4:	cf 91       	pop	r28
  f6:	1f 91       	pop	r17
  f8:	0f 91       	pop	r16
  fa:	ff 90       	pop	r15
  fc:	08 95       	ret

Disassembly of section .text.xTaskNotifyWait:

00000000 <xTaskNotifyWait>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	00 d0       	rcall	.+0      	; 0x1a <xTaskNotifyWait+0x1a>
  1a:	00 d0       	rcall	.+0      	; 0x1c <xTaskNotifyWait+0x1c>
  1c:	cd b7       	in	r28, 0x3d	; 61
  1e:	de b7       	in	r29, 0x3e	; 62
  20:	0f b6       	in	r0, 0x3f	; 63
  22:	f8 94       	cli
  24:	0f 92       	push	r0
  26:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  2e:	e3 a5       	ldd	r30, Z+43	; 0x2b
  30:	e2 30       	cpi	r30, 0x02	; 2
  32:	01 f4       	brne	.+0      	; 0x34 <xTaskNotifyWait+0x34>
  34:	00 c0       	rjmp	.+0      	; 0x36 <xTaskNotifyWait+0x36>
  36:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3a:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  3e:	87 a0       	ldd	r8, Z+39	; 0x27
  40:	90 a4       	ldd	r9, Z+40	; 0x28
  42:	a1 a4       	ldd	r10, Z+41	; 0x29
  44:	b2 a4       	ldd	r11, Z+42	; 0x2a
  46:	dc 01       	movw	r26, r24
  48:	cb 01       	movw	r24, r22
  4a:	80 95       	com	r24
  4c:	90 95       	com	r25
  4e:	a0 95       	com	r26
  50:	b0 95       	com	r27
  52:	88 21       	and	r24, r8
  54:	99 21       	and	r25, r9
  56:	aa 21       	and	r26, r10
  58:	bb 21       	and	r27, r11
  5a:	87 a3       	std	Z+39, r24	; 0x27
  5c:	90 a7       	std	Z+40, r25	; 0x28
  5e:	a1 a7       	std	Z+41, r26	; 0x29
  60:	b2 a7       	std	Z+42, r27	; 0x2a
  62:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  66:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  6a:	81 e0       	ldi	r24, 0x01	; 1
  6c:	83 a7       	std	Z+43, r24	; 0x2b
  6e:	c1 14       	cp	r12, r1
  70:	d1 04       	cpc	r13, r1
  72:	e1 04       	cpc	r14, r1
  74:	f1 04       	cpc	r15, r1
  76:	01 f0       	breq	.+0      	; 0x78 <xTaskNotifyWait+0x78>
  78:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  7c:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  80:	02 96       	adiw	r24, 0x02	; 2
  82:	29 83       	std	Y+1, r18	; 0x01
  84:	3a 83       	std	Y+2, r19	; 0x02
  86:	4b 83       	std	Y+3, r20	; 0x03
  88:	5c 83       	std	Y+4, r21	; 0x04
  8a:	0e 94 00 00 	call	0	; 0x0 <xTaskNotifyWait>
  8e:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  92:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  96:	a0 91 00 00 	lds	r26, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  9a:	b0 91 00 00 	lds	r27, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  9e:	bc 01       	movw	r22, r24
  a0:	cd 01       	movw	r24, r26
  a2:	6c 0d       	add	r22, r12
  a4:	7d 1d       	adc	r23, r13
  a6:	8e 1d       	adc	r24, r14
  a8:	9f 1d       	adc	r25, r15
  aa:	0e 94 00 00 	call	0	; 0x0 <xTaskNotifyWait>
  ae:	0e 94 00 00 	call	0	; 0x0 <xTaskNotifyWait>
  b2:	5c 81       	ldd	r21, Y+4	; 0x04
  b4:	4b 81       	ldd	r20, Y+3	; 0x03
  b6:	3a 81       	ldd	r19, Y+2	; 0x02
  b8:	29 81       	ldd	r18, Y+1	; 0x01
  ba:	0f 90       	pop	r0
  bc:	0f be       	out	0x3f, r0	; 63
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	f8 94       	cli
  c2:	0f 92       	push	r0
  c4:	01 15       	cp	r16, r1
  c6:	11 05       	cpc	r17, r1
  c8:	01 f0       	breq	.+0      	; 0xca <xTaskNotifyWait+0xca>
  ca:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  ce:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  d2:	87 a1       	ldd	r24, Z+39	; 0x27
  d4:	90 a5       	ldd	r25, Z+40	; 0x28
  d6:	a1 a5       	ldd	r26, Z+41	; 0x29
  d8:	b2 a5       	ldd	r27, Z+42	; 0x2a
  da:	f8 01       	movw	r30, r16
  dc:	80 83       	st	Z, r24
  de:	91 83       	std	Z+1, r25	; 0x01
  e0:	a2 83       	std	Z+2, r26	; 0x02
  e2:	b3 83       	std	Z+3, r27	; 0x03
  e4:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  e8:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  ec:	83 a5       	ldd	r24, Z+43	; 0x2b
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	01 f0       	breq	.+0      	; 0xf2 <xTaskNotifyWait+0xf2>
  f2:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  f6:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  fa:	87 a1       	ldd	r24, Z+39	; 0x27
  fc:	90 a5       	ldd	r25, Z+40	; 0x28
  fe:	a1 a5       	ldd	r26, Z+41	; 0x29
 100:	b2 a5       	ldd	r27, Z+42	; 0x2a
 102:	ba 01       	movw	r22, r20
 104:	a9 01       	movw	r20, r18
 106:	40 95       	com	r20
 108:	50 95       	com	r21
 10a:	60 95       	com	r22
 10c:	70 95       	com	r23
 10e:	84 23       	and	r24, r20
 110:	95 23       	and	r25, r21
 112:	a6 23       	and	r26, r22
 114:	b7 23       	and	r27, r23
 116:	87 a3       	std	Z+39, r24	; 0x27
 118:	90 a7       	std	Z+40, r25	; 0x28
 11a:	a1 a7       	std	Z+41, r26	; 0x29
 11c:	b2 a7       	std	Z+42, r27	; 0x2a
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	00 c0       	rjmp	.+0      	; 0x122 <xTaskNotifyWait+0x122>
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 128:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
 12c:	13 a6       	std	Z+43, r1	; 0x2b
 12e:	0f 90       	pop	r0
 130:	0f be       	out	0x3f, r0	; 63
 132:	0f 90       	pop	r0
 134:	0f 90       	pop	r0
 136:	0f 90       	pop	r0
 138:	0f 90       	pop	r0
 13a:	df 91       	pop	r29
 13c:	cf 91       	pop	r28
 13e:	1f 91       	pop	r17
 140:	0f 91       	pop	r16
 142:	ff 90       	pop	r15
 144:	ef 90       	pop	r14
 146:	df 90       	pop	r13
 148:	cf 90       	pop	r12
 14a:	bf 90       	pop	r11
 14c:	af 90       	pop	r10
 14e:	9f 90       	pop	r9
 150:	8f 90       	pop	r8
 152:	08 95       	ret

Disassembly of section .text.xTaskGenericNotify:

00000000 <xTaskGenericNotify>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	fc 01       	movw	r30, r24
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	0f 92       	push	r0
  10:	01 15       	cp	r16, r1
  12:	11 05       	cpc	r17, r1
  14:	01 f0       	breq	.+0      	; 0x16 <xTaskGenericNotify+0x16>
  16:	87 a1       	ldd	r24, Z+39	; 0x27
  18:	90 a5       	ldd	r25, Z+40	; 0x28
  1a:	a1 a5       	ldd	r26, Z+41	; 0x29
  1c:	b2 a5       	ldd	r27, Z+42	; 0x2a
  1e:	e8 01       	movw	r28, r16
  20:	88 83       	st	Y, r24
  22:	99 83       	std	Y+1, r25	; 0x01
  24:	aa 83       	std	Y+2, r26	; 0x02
  26:	bb 83       	std	Y+3, r27	; 0x03
  28:	33 a5       	ldd	r19, Z+43	; 0x2b
  2a:	82 e0       	ldi	r24, 0x02	; 2
  2c:	83 a7       	std	Z+43, r24	; 0x2b
  2e:	22 30       	cpi	r18, 0x02	; 2
  30:	01 f0       	breq	.+0      	; 0x32 <xTaskGenericNotify+0x32>
  32:	00 f4       	brcc	.+0      	; 0x34 <xTaskGenericNotify+0x34>
  34:	21 30       	cpi	r18, 0x01	; 1
  36:	01 f4       	brne	.+0      	; 0x38 <xTaskGenericNotify+0x38>
  38:	87 a1       	ldd	r24, Z+39	; 0x27
  3a:	90 a5       	ldd	r25, Z+40	; 0x28
  3c:	a1 a5       	ldd	r26, Z+41	; 0x29
  3e:	b2 a5       	ldd	r27, Z+42	; 0x2a
  40:	48 2b       	or	r20, r24
  42:	59 2b       	or	r21, r25
  44:	6a 2b       	or	r22, r26
  46:	7b 2b       	or	r23, r27
  48:	00 c0       	rjmp	.+0      	; 0x4a <xTaskGenericNotify+0x4a>
  4a:	23 30       	cpi	r18, 0x03	; 3
  4c:	01 f0       	breq	.+0      	; 0x4e <xTaskGenericNotify+0x4e>
  4e:	24 30       	cpi	r18, 0x04	; 4
  50:	01 f0       	breq	.+0      	; 0x52 <xTaskGenericNotify+0x52>
  52:	00 c0       	rjmp	.+0      	; 0x54 <xTaskGenericNotify+0x54>
  54:	87 a1       	ldd	r24, Z+39	; 0x27
  56:	90 a5       	ldd	r25, Z+40	; 0x28
  58:	a1 a5       	ldd	r26, Z+41	; 0x29
  5a:	b2 a5       	ldd	r27, Z+42	; 0x2a
  5c:	01 96       	adiw	r24, 0x01	; 1
  5e:	a1 1d       	adc	r26, r1
  60:	b1 1d       	adc	r27, r1
  62:	87 a3       	std	Z+39, r24	; 0x27
  64:	90 a7       	std	Z+40, r25	; 0x28
  66:	a1 a7       	std	Z+41, r26	; 0x29
  68:	b2 a7       	std	Z+42, r27	; 0x2a
  6a:	00 c0       	rjmp	.+0      	; 0x6c <xTaskGenericNotify+0x6c>
  6c:	32 30       	cpi	r19, 0x02	; 2
  6e:	01 f0       	breq	.+0      	; 0x70 <xTaskGenericNotify+0x70>
  70:	47 a3       	std	Z+39, r20	; 0x27
  72:	50 a7       	std	Z+40, r21	; 0x28
  74:	61 a7       	std	Z+41, r22	; 0x29
  76:	72 a7       	std	Z+42, r23	; 0x2a
  78:	31 30       	cpi	r19, 0x01	; 1
  7a:	01 f4       	brne	.+0      	; 0x7c <xTaskGenericNotify+0x7c>
  7c:	ef 01       	movw	r28, r30
  7e:	8f 01       	movw	r16, r30
  80:	0e 5f       	subi	r16, 0xFE	; 254
  82:	1f 4f       	sbci	r17, 0xFF	; 255
  84:	c8 01       	movw	r24, r16
  86:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotify>
  8a:	9a 8d       	ldd	r25, Y+26	; 0x1a
  8c:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  90:	89 17       	cp	r24, r25
  92:	00 f4       	brcc	.+0      	; 0x94 <xTaskGenericNotify+0x94>
  94:	90 93 00 00 	sts	0x0000, r25	; 0x800000 <__SREG__+0x7fffc1>
  98:	2b e0       	ldi	r18, 0x0B	; 11
  9a:	92 9f       	mul	r25, r18
  9c:	c0 01       	movw	r24, r0
  9e:	11 24       	eor	r1, r1
  a0:	b8 01       	movw	r22, r16
  a2:	80 50       	subi	r24, 0x00	; 0
  a4:	90 40       	sbci	r25, 0x00	; 0
  a6:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotify>
  aa:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  ae:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  b2:	9a 8d       	ldd	r25, Y+26	; 0x1a
  b4:	82 8d       	ldd	r24, Z+26	; 0x1a
  b6:	89 17       	cp	r24, r25
  b8:	00 f4       	brcc	.+0      	; 0xba <xTaskGenericNotify+0xba>
  ba:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotify>
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <xTaskGenericNotify+0xc2>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	0f 90       	pop	r0
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	df 91       	pop	r29
  ca:	cf 91       	pop	r28
  cc:	1f 91       	pop	r17
  ce:	0f 91       	pop	r16
  d0:	08 95       	ret

Disassembly of section .text.xTaskGenericNotifyFromISR:

00000000 <xTaskGenericNotifyFromISR>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	fc 01       	movw	r30, r24
   e:	01 15       	cp	r16, r1
  10:	11 05       	cpc	r17, r1
  12:	01 f0       	breq	.+0      	; 0x14 <xTaskGenericNotifyFromISR+0x14>
  14:	87 a1       	ldd	r24, Z+39	; 0x27
  16:	90 a5       	ldd	r25, Z+40	; 0x28
  18:	a1 a5       	ldd	r26, Z+41	; 0x29
  1a:	b2 a5       	ldd	r27, Z+42	; 0x2a
  1c:	e8 01       	movw	r28, r16
  1e:	88 83       	st	Y, r24
  20:	99 83       	std	Y+1, r25	; 0x01
  22:	aa 83       	std	Y+2, r26	; 0x02
  24:	bb 83       	std	Y+3, r27	; 0x03
  26:	33 a5       	ldd	r19, Z+43	; 0x2b
  28:	82 e0       	ldi	r24, 0x02	; 2
  2a:	83 a7       	std	Z+43, r24	; 0x2b
  2c:	22 30       	cpi	r18, 0x02	; 2
  2e:	01 f0       	breq	.+0      	; 0x30 <xTaskGenericNotifyFromISR+0x30>
  30:	00 f4       	brcc	.+0      	; 0x32 <xTaskGenericNotifyFromISR+0x32>
  32:	21 30       	cpi	r18, 0x01	; 1
  34:	01 f4       	brne	.+0      	; 0x36 <xTaskGenericNotifyFromISR+0x36>
  36:	87 a1       	ldd	r24, Z+39	; 0x27
  38:	90 a5       	ldd	r25, Z+40	; 0x28
  3a:	a1 a5       	ldd	r26, Z+41	; 0x29
  3c:	b2 a5       	ldd	r27, Z+42	; 0x2a
  3e:	48 2b       	or	r20, r24
  40:	59 2b       	or	r21, r25
  42:	6a 2b       	or	r22, r26
  44:	7b 2b       	or	r23, r27
  46:	00 c0       	rjmp	.+0      	; 0x48 <xTaskGenericNotifyFromISR+0x48>
  48:	23 30       	cpi	r18, 0x03	; 3
  4a:	01 f0       	breq	.+0      	; 0x4c <xTaskGenericNotifyFromISR+0x4c>
  4c:	24 30       	cpi	r18, 0x04	; 4
  4e:	01 f0       	breq	.+0      	; 0x50 <xTaskGenericNotifyFromISR+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <xTaskGenericNotifyFromISR+0x52>
  52:	87 a1       	ldd	r24, Z+39	; 0x27
  54:	90 a5       	ldd	r25, Z+40	; 0x28
  56:	a1 a5       	ldd	r26, Z+41	; 0x29
  58:	b2 a5       	ldd	r27, Z+42	; 0x2a
  5a:	01 96       	adiw	r24, 0x01	; 1
  5c:	a1 1d       	adc	r26, r1
  5e:	b1 1d       	adc	r27, r1
  60:	87 a3       	std	Z+39, r24	; 0x27
  62:	90 a7       	std	Z+40, r25	; 0x28
  64:	a1 a7       	std	Z+41, r26	; 0x29
  66:	b2 a7       	std	Z+42, r27	; 0x2a
  68:	00 c0       	rjmp	.+0      	; 0x6a <xTaskGenericNotifyFromISR+0x6a>
  6a:	32 30       	cpi	r19, 0x02	; 2
  6c:	01 f0       	breq	.+0      	; 0x6e <xTaskGenericNotifyFromISR+0x6e>
  6e:	47 a3       	std	Z+39, r20	; 0x27
  70:	50 a7       	std	Z+40, r21	; 0x28
  72:	61 a7       	std	Z+41, r22	; 0x29
  74:	72 a7       	std	Z+42, r23	; 0x2a
  76:	31 30       	cpi	r19, 0x01	; 1
  78:	01 f0       	breq	.+0      	; 0x7a <xTaskGenericNotifyFromISR+0x7a>
  7a:	81 e0       	ldi	r24, 0x01	; 1
  7c:	00 c0       	rjmp	.+0      	; 0x7e <xTaskGenericNotifyFromISR+0x7e>
  7e:	ef 01       	movw	r28, r30
  80:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  84:	81 11       	cpse	r24, r1
  86:	00 c0       	rjmp	.+0      	; 0x88 <xTaskGenericNotifyFromISR+0x88>
  88:	8f 01       	movw	r16, r30
  8a:	0e 5f       	subi	r16, 0xFE	; 254
  8c:	1f 4f       	sbci	r17, 0xFF	; 255
  8e:	c8 01       	movw	r24, r16
  90:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotifyFromISR>
  94:	2a 8d       	ldd	r18, Y+26	; 0x1a
  96:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  9a:	82 17       	cp	r24, r18
  9c:	00 f4       	brcc	.+0      	; 0x9e <xTaskGenericNotifyFromISR+0x9e>
  9e:	20 93 00 00 	sts	0x0000, r18	; 0x800000 <__SREG__+0x7fffc1>
  a2:	eb e0       	ldi	r30, 0x0B	; 11
  a4:	2e 9f       	mul	r18, r30
  a6:	c0 01       	movw	r24, r0
  a8:	11 24       	eor	r1, r1
  aa:	b8 01       	movw	r22, r16
  ac:	80 50       	subi	r24, 0x00	; 0
  ae:	90 40       	sbci	r25, 0x00	; 0
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <xTaskGenericNotifyFromISR+0xb2>
  b2:	bf 01       	movw	r22, r30
  b4:	62 5f       	subi	r22, 0xF2	; 242
  b6:	7f 4f       	sbci	r23, 0xFF	; 255
  b8:	80 e0       	ldi	r24, 0x00	; 0
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	0e 94 00 00 	call	0	; 0x0 <xTaskGenericNotifyFromISR>
  c0:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  c4:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  c8:	9a 8d       	ldd	r25, Y+26	; 0x1a
  ca:	82 8d       	ldd	r24, Z+26	; 0x1a
  cc:	89 17       	cp	r24, r25
  ce:	00 f4       	brcc	.+0      	; 0xd0 <xTaskGenericNotifyFromISR+0xd0>
  d0:	e1 14       	cp	r14, r1
  d2:	f1 04       	cpc	r15, r1
  d4:	01 f0       	breq	.+0      	; 0xd6 <xTaskGenericNotifyFromISR+0xd6>
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	e7 01       	movw	r28, r14
  da:	88 83       	st	Y, r24
  dc:	00 c0       	rjmp	.+0      	; 0xde <xTaskGenericNotifyFromISR+0xde>
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	1f 91       	pop	r17
  e6:	0f 91       	pop	r16
  e8:	ff 90       	pop	r15
  ea:	ef 90       	pop	r14
  ec:	08 95       	ret

Disassembly of section .text.vTaskNotifyGiveFromISR:

00000000 <vTaskNotifyGiveFromISR>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	fc 01       	movw	r30, r24
   e:	23 a5       	ldd	r18, Z+43	; 0x2b
  10:	82 e0       	ldi	r24, 0x02	; 2
  12:	83 a7       	std	Z+43, r24	; 0x2b
  14:	87 a1       	ldd	r24, Z+39	; 0x27
  16:	90 a5       	ldd	r25, Z+40	; 0x28
  18:	a1 a5       	ldd	r26, Z+41	; 0x29
  1a:	b2 a5       	ldd	r27, Z+42	; 0x2a
  1c:	01 96       	adiw	r24, 0x01	; 1
  1e:	a1 1d       	adc	r26, r1
  20:	b1 1d       	adc	r27, r1
  22:	87 a3       	std	Z+39, r24	; 0x27
  24:	90 a7       	std	Z+40, r25	; 0x28
  26:	a1 a7       	std	Z+41, r26	; 0x29
  28:	b2 a7       	std	Z+42, r27	; 0x2a
  2a:	21 30       	cpi	r18, 0x01	; 1
  2c:	01 f4       	brne	.+0      	; 0x2e <vTaskNotifyGiveFromISR+0x2e>
  2e:	8b 01       	movw	r16, r22
  30:	ef 01       	movw	r28, r30
  32:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  36:	81 11       	cpse	r24, r1
  38:	00 c0       	rjmp	.+0      	; 0x3a <vTaskNotifyGiveFromISR+0x3a>
  3a:	7f 01       	movw	r14, r30
  3c:	32 e0       	ldi	r19, 0x02	; 2
  3e:	e3 0e       	add	r14, r19
  40:	f1 1c       	adc	r15, r1
  42:	c7 01       	movw	r24, r14
  44:	0e 94 00 00 	call	0	; 0x0 <vTaskNotifyGiveFromISR>
  48:	2a 8d       	ldd	r18, Y+26	; 0x1a
  4a:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  4e:	82 17       	cp	r24, r18
  50:	00 f4       	brcc	.+0      	; 0x52 <vTaskNotifyGiveFromISR+0x52>
  52:	20 93 00 00 	sts	0x0000, r18	; 0x800000 <__SREG__+0x7fffc1>
  56:	eb e0       	ldi	r30, 0x0B	; 11
  58:	2e 9f       	mul	r18, r30
  5a:	c0 01       	movw	r24, r0
  5c:	11 24       	eor	r1, r1
  5e:	b7 01       	movw	r22, r14
  60:	80 50       	subi	r24, 0x00	; 0
  62:	90 40       	sbci	r25, 0x00	; 0
  64:	00 c0       	rjmp	.+0      	; 0x66 <vTaskNotifyGiveFromISR+0x66>
  66:	bf 01       	movw	r22, r30
  68:	62 5f       	subi	r22, 0xF2	; 242
  6a:	7f 4f       	sbci	r23, 0xFF	; 255
  6c:	80 e0       	ldi	r24, 0x00	; 0
  6e:	90 e0       	ldi	r25, 0x00	; 0
  70:	0e 94 00 00 	call	0	; 0x0 <vTaskNotifyGiveFromISR>
  74:	e0 91 00 00 	lds	r30, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  78:	f0 91 00 00 	lds	r31, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
  7c:	9a 8d       	ldd	r25, Y+26	; 0x1a
  7e:	82 8d       	ldd	r24, Z+26	; 0x1a
  80:	89 17       	cp	r24, r25
  82:	00 f4       	brcc	.+0      	; 0x84 <vTaskNotifyGiveFromISR+0x84>
  84:	01 15       	cp	r16, r1
  86:	11 05       	cpc	r17, r1
  88:	01 f0       	breq	.+0      	; 0x8a <vTaskNotifyGiveFromISR+0x8a>
  8a:	81 e0       	ldi	r24, 0x01	; 1
  8c:	f8 01       	movw	r30, r16
  8e:	80 83       	st	Z, r24
  90:	df 91       	pop	r29
  92:	cf 91       	pop	r28
  94:	1f 91       	pop	r17
  96:	0f 91       	pop	r16
  98:	ff 90       	pop	r15
  9a:	ef 90       	pop	r14
  9c:	08 95       	ret

Disassembly of section .text.xTaskNotifyStateClear:

00000000 <xTaskNotifyStateClear>:
   0:	00 97       	sbiw	r24, 0x00	; 0
   2:	01 f4       	brne	.+0      	; 0x4 <xTaskNotifyStateClear+0x4>
   4:	80 91 00 00 	lds	r24, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   8:	90 91 00 00 	lds	r25, 0x0000	; 0x800000 <__SREG__+0x7fffc1>
   c:	0f b6       	in	r0, 0x3f	; 63
   e:	f8 94       	cli
  10:	0f 92       	push	r0
  12:	fc 01       	movw	r30, r24
  14:	23 a5       	ldd	r18, Z+43	; 0x2b
  16:	22 30       	cpi	r18, 0x02	; 2
  18:	01 f4       	brne	.+0      	; 0x1a <xTaskNotifyStateClear+0x1a>
  1a:	13 a6       	std	Z+43, r1	; 0x2b
  1c:	81 e0       	ldi	r24, 0x01	; 1
  1e:	00 c0       	rjmp	.+0      	; 0x20 <xTaskNotifyStateClear+0x20>
  20:	80 e0       	ldi	r24, 0x00	; 0
  22:	0f 90       	pop	r0
  24:	0f be       	out	0x3f, r0	; 63
  26:	08 95       	ret

timers.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .comment      00000012  00000000  00000000  00000034  2**0
                  CONTENTS, READONLY
