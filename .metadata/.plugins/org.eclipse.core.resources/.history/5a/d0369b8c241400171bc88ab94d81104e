#include <Arduino.h>
#include <avr/io.h>
#include <FreeRTOS.h>
#include <task.h>
#include <semphr.h>
#include <queue.h>
#define STACK_SIZE 200

unsigned long current_interrupt_time;
static unsigned long previous_Interrupt_time = 0;
QueueHandle_t queue = xQueueCreate(2, 4);

void int0task(){
	for(int i=0; i<5; i++){
	digitalWrite(7, HIGH); // Set digital I/O pin to a 1
	delay(125); // Delay
	digitalWrite(7, LOW); // Set digital I/O pin to a 0
	delay(125);
	}
}

// Flashes LED at pin 6: 5 times at 2HZ
void int1task(){
	for(int i=0; i<5; i++){
	digitalWrite(6, HIGH); // Set digital I/O pin to a 1
	delay(250); // Delay
	digitalWrite(6, LOW); // Set digital I/O pin to a 0
	delay(250);
	}
}

void int0ISR(){
	current_interrupt_time = millis();
	if((current_interrupt_time - previous_Interrupt_time) > 200){

	}
	previous_Interrupt_time = current_interrupt_time;
}

void int1ISR(){
	current_interrupt_time = millis();
	if((current_interrupt_time - previous_Interrupt_time) > 200){

	}
	previous_Interrupt_time = current_interrupt_time;
}

void setup() {
	attachInterrupt(digitalPinToInterrupt(3), int0ISR, FALLING); //deals with interrupt of pin 2
	attachInterrupt(digitalPinToInterrupt(2), int1ISR, FALLING); // deals with interrupt of pin 3
	pinMode(7, OUTPUT);
	pinMode(6, OUTPUT);
}

void task1and2(void *p) {
	while (1) {
		int taskNum = (int) p;
		xQueueSend( queue,( void * ) &taskNum, ( TickType_t ) 10 );
		vTaskDelay(1);
	}
}

void loop() {
	/* create two tasks one with higher priority than the other */
	xTaskCreate(int0task, "Task0", STACK_SIZE, NULL, 2, NULL);
	xTaskCreate(int1task, "Task1", STACK_SIZE, NUll, 1, NULL);
	xTaskCreate(task1and2, "Task2", STACK_SIZE, (void * ) 2, 2, NULL);


	/* start scheduler */
	vTaskStartScheduler();
}

